{"version":3,"sources":["store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/eosActions.js","store/eosReducers.js","store/tronActions.js","store/tronReducers.js","store/store.js","withRoot.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eos_services/getDefaultEosJS.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginWeb3.js","components/Header.js","tron_services/getDefaultTronWeb.js","config.js","eth_services/getDefaultWeb3.js","components/homePageComponents/Networks.js","eth_services/getNetworkNameById.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","components/homePageComponents/MintButton.js","components/helpers/BloksLogo.js","components/homePageComponents/eos/MintButton.js","components/helpers/TronLogo.js","components/homePageComponents/tron/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","eos_services/updateEosBalance.js","tron_services/getCUSD.js","tron_services/updateTronBalance.js","components/helpers/CarbonLogo.js","components/homePageComponents/Balances.js","components/helpers/SignMessageSnackbar.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","components/homePageComponents/tron/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/homePageComponents/eos/BurnButton.js","components/homePageComponents/eos/TransferButton.js","components/homePageComponents/tron/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/SaveEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","db_services/loginUser.js","eth_services/unlockAccount.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","components/SwapPage.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","SWAP","NETWORKS","globalActions","number","global","web3","web3_network","page","username","password","network","eos_client","tronWeb","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","eosActions","eos","client","user_name","scatter_state","tronActions","tron","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","goToSwapPage","this","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","_ref","asyncToGenerator","regenerator_default","mark","_callee","dataToSign","from","signer_wallet","privateKey","sig","wrap","_context","prev","next","abrupt","sign","signature","Promise","resolve","reject","personal","err","stop","_x","_x2","_x3","_x4","apply","recoverMessageSigner","message","user","recover","sent","EOS_NETWORK","blockchain","protocol","host","port","chainId","EOS_RPC_URL","rpc","JsonRpc","CONTRACT_CODE","CURRENCY_PRECISION","transactionOptions","blocksBehind","expireSeconds","broadcast","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginWeb3","handleClick_LoginMenu_Ethereum","handleClick_LoginMenu_Tron","ready","defaultAddress","setTronAddress","alert","handleClick_LoginMenu_Eos","identity","logout","login","find","x","Api","beta3","setEOS","setEosName","loginMetaMask","_callee2","messageToSign","signer","_context2","signing_in","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","setScatterState","Header","user_address_tron","short_name","short_name_tron","base58","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginWeb3","NUMBER","flexGrow","HttpProvider","TronWeb","providers","NODE_URL","fullNode","solidityNode","getDefaultTronWeb","commonConfig","server_url","infura_public_key","getDefaultWeb3","WEB_3_NODE","default_web3","default_network","config","Web3","WebsocketProvider","net","getId","Networks","_checkScatterConnection","scatter","ScatterJS","plugins","ScatterEOS","_checkTronConnection","default_tronweb","setTronWeb","_checkEthereumConnection","_callee3","_network","_context3","setWeb3","setWeb3Network","ethereum","enable","log","currentProvider","componentDidMount","_callee4","intervalId","_context4","setInterval","timer","_callee5","_context5","componentWillUnmount","clearInterval","handleChange","current","parseFloat","setNetwork","Error","Paper_default","paper","elevation","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","native","age","inputProps","NETWORK","tronweb","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","margin","minWidth","getNetworkNameById","networkId","networkName","Accounts","eth_address","tron_address","eos_name","user_short","user_short_tron","href","rel","EtherscanLogo","style","height","width","alt","src","MINTER_ENDPOINT","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","data","minter_balance","post","concatPendingMints","t1","helpers_EtherscanLogo","newMint","BloksLogo","transaction_id","helpers_BloksLogo","TronLogo","Math","pow","user_hex","transaction_hash","helpers_TronLogo","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","updateEosBalance","result","get_table_rows","code","scope","table","rows","split","ABI","ADDRESS","contract_base58_address","networks","fromHex","contract","at","updateTronBalance","decimal","converted","CarbonLogo","Balances","_updateUserBalance","setEthBalance","_updateEosBalance","oldBalance","newBalance","eos_balance_cusd","setEosBalance","_updateTronBalance","_ref3","balance_cusd_tron","setTronBalance","hex","helpers_CarbonLogo","SignMessageSnackbar","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","TextField_default","textField","helpers_SignMessageSnackbar","newTransfer","to_base58","send","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","resultWithConfig","eos_api","transact","actions","authorization","actor","permission","quantity","toFixed","memo","burn","HomePage","homePageComponents_Networks","homePageComponents_Accounts","homePageComponents_MintButton","eos_MintButton","tron_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","eos_TransferButton","tron_TransferButton","homePageComponents_BurnButton","eos_BurnButton","tron_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","encrypted_json","db_post_response","new_wallets_key","new_wallet","accountName","JSON","stringify","parse","wallet_key","SaveEthAccountDialog","saveAccount","new_account_index","identityToAssociateWithAccount","new_account","address_from_encrypted_json","saved_wallet","saving","createEncryptedWallet","open_new_account_dialog","account_index","Save_default","section","textAlign","EthAccounts","handleClick_AddEthAccount","handleClose_AddEthAccount","accountsComponents_SaveEthAccountDialog","accountsComponents_NewEthAccountDialog","EosAccounts","handleClick_AddEosAccount","addEosAccount","USERS_ENDPOINT","saveUser","new_user_id","new_password","loginUser","params","db_get_response","user_id","user_password","user_wallets","chainAccounts","wallets","callback_decrypt","unlockWallet","encryptedJsonFile","fromEncryptedJson","IdentityDialog","confirm_password","new_user","new_username","clearEthAccounts","loading_server","setUsername","setPassword","signInOldAccount","existing_user","existing_username","existing_password","existing_wallets","encrypted_wallet","decrypted_wallet","keys","unlockAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","logoutIdentity","closeIdentityDialog","signed_in","wallet_name","Tooltip_default","title","placement","button","AccountCircle_default","Clear_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","SwapPage","App","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","swap","components_SwapPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.c98eb7f3.chunk.js","sourcesContent":["// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_TRONWEB: \"SET_TRONWEB\",\n  SET_WEB3: \"SET_WEB3\",\n  SET_WEB3_NETWORK: \"SET_WEB3_NETWORK\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_NETWORK: \"SET_NETWORK\",\n  SET_EOS: \"SET_EOS\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2,\n  SWAP: 3,\n}\n\n// Network options for home page\nexport const NETWORKS = {\n  ETH: 0,\n  EOS: 1,\n  TRON: 2\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setWeb3Network: number => ({\n    type: TYPES.SET_WEB3_NETWORK,\n    number\n  }), \n  // Set Web3 network ID number\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n\n  setPassword: string => ({\n    type: TYPES.SET_PASSWORD,\n    string\n  }), \n  // Set User identity key: 'password'\n\n\n  setEOS: object => ({\n    type:TYPES.SET_EOS,\n    object\n  }),\n  // Set EOS object\n\n  setTronWeb: object => ({\n    type: TYPES.SET_TRONWEB,\n    object\n  }), \n  // Set TronWeb object\n\n  setNetwork: number => ({\n    type: TYPES.SET_NETWORK,\n    number\n  }),\n  // Set cryptonetwork\n\n};\n\n","import { TYPES, PAGES, NETWORKS } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    web3_network: '',\n    page: PAGES.MAIN,\n    username: '',\n    password: '',\n    network: NETWORKS.ETH,\n    eos_client: '',\n    tronWeb: '',\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_WEB3_NETWORK:\n      return Object.assign({}, state, {\n        web3_network: action.number\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    case TYPES.SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.string\n      });\n    case TYPES.SET_NETWORK:\n      return Object.assign({}, state, {\n        network: action.number\n      });\n    case TYPES.SET_EOS:\n      return Object.assign({}, state, {\n        eos_client:action.object\n      });\n    case TYPES.SET_TRONWEB:\n      return Object.assign({}, state, {\n        tronWeb: action.object\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n  CLEAR_ETH_ACCOUNTS: \"CLEAR_ETH_ACCOUNTS\"\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  clearEthAccounts: object => ({\n    type: TYPES.CLEAR_ETH_ACCOUNTS\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.CLEAR_ETH_ACCOUNTS:\n      return Object.assign({}, state, {\n        eth_accounts: []\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_EOS_CLIENT: \"SET_EOS_CLIENT\",\n  SET_EOS_NAME: \"SET_EOS_NAME\",\n  CONCAT_PENDING_MINTS_EOS: \"CONCAT_PENDING_MINTS_EOS\",\n  CONCAT_PENDING_BURNS_EOS: \"CONCAT_PENDING_BURNS_EOS\",\n  CONCAT_PENDING_TRANSFERS_EOS: \"CONCAT_PENDING_TRANSFERS_EOS\",\n  SET_EOS_BALANCE: \"SET_EOS_BALANCE\",\n  SET_SCATTER_STATE: \"SET_SCATTER_STATE\"\n};\n\nexport const eosActions = {\n  setEosClient: object => ({\n  \ttype: TYPES.SET_EOS_CLIENT,\n  \tobject\n  }),\n  setEosName: string => ({\n    type: TYPES.SET_EOS_NAME,\n    string\n  }),\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS_EOS,\n    object\n  }),\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS_EOS,\n    object\n  }),\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS_EOS,\n    object\n  }),\n  setEosBalance: string => ({\n    type: TYPES.SET_EOS_BALANCE,\n    string\n  }),\n  setScatterState: string => ({\n    type:TYPES.SET_SCATTER_STATE,\n    string\n  }),\n\n\n};\n\n","import { TYPES } from \"./eosActions\";\n\n// Initial state\nexport const initialState = {\n  eos: {\n    client: '',\n    user_name: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_burns: [],\n    pending_transfers: [],\n    scatter_state:'',\n  },\n};\n\n// User Eos account state\nexport const eos = (state = initialState.eos, action) => {\n  switch (action.type) {\n    case TYPES.SET_EOS_CLIENT:\n      return Object.assign({}, state, {\n        client: action.object\n      });\n    case TYPES.SET_EOS_NAME:\n      return Object.assign({}, state, {\n        user_name: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS_EOS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS_EOS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS_EOS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.SET_EOS_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.SET_SCATTER_STATE:\n      return Object.assign({}, state, {\n        scatter_state: action.string\n      });\n\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n    SET_TRON_ADDRESS: \"SET_TRON_ADDRESS\",\n    SET_TRON_BALANCE: \"SET_TRON_BALANCE\",\n    CONCAT_PENDING_MINTS_TRON: \"CONCAT_PENDING_MINTS_TRON\",\n    CONCAT_PENDING_BURNS_TRON: \"CONCAT_PENDING_BURNS_TRON\",\n    CONCAT_PENDING_TRANSFERS_TRON: \"CONCAT_PENDING_TRANSFERS_TRON\",\n  };\n  \n  export const tronActions = {\n    setTronAddress: string => ({\n      type: TYPES.SET_TRON_ADDRESS,\n      string\n    }),\n    // Set user tron account\n\n    setTronBalance: string => ({\n      type: TYPES.SET_TRON_BALANCE,\n      string\n    }),\n    // Set cusd-tron balance\n\n    concatPendingMints: object => ({\n      type: TYPES.CONCAT_PENDING_MINTS_TRON,\n      object\n    }),\n    // Add a pending mint transaction to user profile\n\n    concatPendingBurns: object => ({\n      type: TYPES.CONCAT_PENDING_BURNS_TRON,\n      object\n    }),\n    // Add a pending burn transaction to user profile\n    \n    concatPendingTransfers: object => ({\n      type: TYPES.CONCAT_PENDING_TRANSFERS_TRON,\n      object\n    }),\n    // Add a pending transfer transaction to user profile\n\n};\n  \n  ","import { TYPES } from \"./tronActions\";\n\n// Initial state\nexport const initialState = {\n  tron: {\n    user_address: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_burns: [],\n    pending_transfers: [],\n  },\n};\n\n// User Tron account state\nexport const tron = (state = initialState.tron, action) => {\n  switch (action.type) {\n    case TYPES.SET_TRON_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_TRON_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS_TRON:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS_TRON:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS_TRON:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\nimport { eos } from \"./eosReducers\";\nimport { tron } from \"./tronReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eos,\n  tron,\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n\n  goToSwapPage = () => {\n      this.props.setPage(PAGES.SWAP)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                  <MenuItem onClick={this.goToSwapPage}><b>beta</b> Swap</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { JsonRpc } from 'eosjs';\n\nexport const EOS_NETWORK = { /** Change this to connect to Mainnet/Jungle */\n  blockchain: \"eos\",\n  protocol: \"https\",\n  host: \"jungle2.cryptolions.io\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" \n};\nexport const EOS_RPC_URL = EOS_NETWORK.protocol+\"://\"+EOS_NETWORK.host+\":\"+EOS_NETWORK.port\n\nexport const rpc = new JsonRpc(EOS_RPC_URL);\n\n// Contract details for CUSD\nexport const CONTRACT_CODE = \"carbon12nick\"\nexport const CURRENCY_PRECISION = 2\n\n// EosJS transaction options\nexport const transactionOptions = {\n  blocksBehind: 3,\n  expireSeconds: 30,\n  broadcast:true\n}","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// EOS services\nimport {Api} from 'eosjs';\nimport { rpc, EOS_NETWORK } from '../../eos_services/getDefaultEosJS'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { globalActions } from \"../../store/globalActions\";\nimport { tronActions } from \"../../store/tronActions\"\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  network: state.global.network,\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n  tronWeb: state.global.tronWeb,\n  scatter_state: state.eos.scatter_state\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet)),\n  setTronAddress: address => dispatch(tronActions.setTronAddress(address)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setEosName: name => dispatch(eosActions.setEosName(name)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string)),\n});\n\nclass LoginWeb3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD FOR ETHEREUM */\n  handleClick_LoginMenu_Ethereum = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** DETECT IF USER IS LOGGED IN TO TRON */\n  handleClick_LoginMenu_Tron = () => {\n    if (!this.props.tronWeb) {\n      alert('Switch to a Tron dApp browser to use this faucet for the time being, apologies!')\n      return\n    }\n    let loggedIn = this.props.tronWeb.ready\n    if (loggedIn && this.props.tronWeb.defaultAddress) {\n      this.props.setTronAddress(this.props.tronWeb.defaultAddress)\n    } else {\n      alert('You are connected to Tron, but we cannot detect your address! Please login to your Tron wallet to use this faucet-- if you are on desktop then try installing the TronLink browser extension')\n    }\n  }\n\n  /** Request user's EOS identity through Scatter */\n  handleClick_LoginMenu_Eos = async () => {\n    if (!this.props.scatter_state) { return; }\n    if (this.props.scatter_state.identity) {\n      // User already signed in, forget their previous identity\n      await this.props.scatter_state.logout()\n    } \n    \n    // Now, request user to connect their identity for app usage\n    // After a user has approved giving you permission to access their Identity you no longer have to call getIdentity() if the user refreshes the page. \n    // Instead you can check if an Identity exists on the scatter object itself. \n    // This also means that you don't have to save the Identity within your shared \n    // services along-side your Scatter reference, \n    // you can simply save your Scatter reference and \n    // pull the identity from within it.\n    //\n    // n.b. this is the reason why we call logout() on each button press to allow user to switch their identity\n    let identity = await this.props.scatter_state.login({ accounts: [EOS_NETWORK]})\n    if (!identity) { return console.error(`No Scatter identity found on this network`)}\n\n    const account = this.props.scatter_state.identity.accounts.find(x => x.blockchain === 'eos');\n    if (account && account.name) {\n      // Create eosJS client object\n      const eos = this.props.scatter_state.eos(EOS_NETWORK, Api, {rpc, beta3:true})\n      this.props.setEOS(eos)\n      // Save user's account name (full account details are in account)\n      this.props.setEosName(account.name)\n    }\n  }\n\n  /** \n      Ethereum Login Handlers:\n      There are multiple choices for connecting to the Ethereum network\n   */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptographically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    const { network } = this.props;\n    return (\n        \n        <div>\n          { network === 0 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu_Ethereum}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            :\"\"}\n          { network === 1 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu_Eos}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to EOS\n            </Button>\n            :\"\"}\n          { network === 2 ? \n            <Button\n                onClick={this.handleClick_LoginMenu_Tron}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Tron\n            </Button>\n            :\"\"}\n            {/* Ethereum Login options */}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        \n        </div>\n        \n    );\n  }\n}\n\nLoginWeb3.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginWeb3)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginWeb3 from './headerComponents/LoginWeb3'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address,\n  network: state.global.network,\n  user_address_tron: state.tron.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address,\n      network,\n      user_address_tron\n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n    const short_name_tron = user_address_tron ? user_address_tron.base58.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                CUSD Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {network === 0 && short_name}\n                {network === 2 && short_name_tron}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginWeb3 />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","/**\n * Return tronweb object (akin to \"Truffle\" for Ethereum) connected to the Shasta testnet\n */\nimport TronWeb from 'tronweb';\nconst HttpProvider = TronWeb.providers.HttpProvider;\nconst NODE_URL = 'https://api.shasta.trongrid.io'\nconst fullNode = new HttpProvider(NODE_URL);\nconst solidityNode = new HttpProvider(NODE_URL);\nconst eventServer = NODE_URL;\n\nconst getDefaultTronWeb = async () => {\n    const tronWeb = new TronWeb(\n        fullNode,\n        solidityNode,\n        eventServer\n    );\n    return tronWeb\n}\n\n\nexport default getDefaultTronWeb","const commonConfig = {\n    // server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import Web3 from 'web3';\n\n// Config \nimport config from '../config'\n\nconst getDefaultWeb3 = async () => {\n    var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n    let default_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n    let default_network = await default_web3.eth.net.getId()\n    return {\n        web3: default_web3, \n        network: default_network\n    }\n}\n\nexport default getDefaultWeb3","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, NETWORKS } from \"../../store/globalActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n//scatter\nimport ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport getDefaultTronWeb from '../../tron_services/getDefaultTronWeb'\nimport Web3 from 'web3';\nimport getDefaultWeb3 from '../../eth_services/getDefaultWeb3'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_client: state.global.eos_client,\n  network: state.global.network,\n  scatter_state: state.eos.scatter_state,\n  tronWeb: state.global.tronWeb,\n  web3: state.global.web3,\n\n});\n\nconst mapDispatch = dispatch => ({\n  setNetwork: NETWORK => dispatch(globalActions.setNetwork(NETWORK)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setEosName: name => dispatch(eosActions.setEosName(name)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string)),\n  setTronAddress: string => dispatch(tronActions.setTronAddress(string)),\n  setTronWeb: tronweb => dispatch(globalActions.setTronWeb(tronweb)),\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n  setWeb3Network: number => dispatch(globalActions.setWeb3Network(number)),\n});\n\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** Connect App to Scatter for EOS api connection */\n  _checkScatterConnection = async () => {\n    if (this.props.scatter_state) {\n      // Scatter already set\n      return\n    } else {\n      // tell ScatterJS which plugins you are using.\n      ScatterJS.plugins( new ScatterEOS())\n\n      // attempt to connect to Scatter app\n      const APP_NAME=\"CUSD_OASIS\"\n      let connected = await ScatterJS.scatter.connect(APP_NAME)\n      if (connected) {\n            let scatter = ScatterJS.scatter\n            this.props.setScatterState(scatter)\n            // replace window's default ScatterJS object\n            window.ScatterJS = null\n      }\n      return\n    }\n  }\n\n  /** SET UP TronWeb */\n  _checkTronConnection = async () => {\n    // Set tronweb to injected tronweb if possible\n    let installed = window.tronWeb\n    // Detected Tron dapp browser! \n    if (installed) {\n        this.props.setTronWeb(window.tronWeb)\n    } \n    else {\n      // Create default tronweb in case browser cannot inject tronweb\n      let default_tronweb = await getDefaultTronWeb()\n      this.props.setTronWeb(default_tronweb)\n\n      // Non-dapp browsers, inject tronweb on behalf of user\n      window.tronWeb = this.props.tronWeb\n    }\n  }\n\n    /** SET UP Web3 */\n  _checkEthereumConnection = async () => {\n\n    // Set default web3 in case browser cannot inject web3\n    let default_web3 = await getDefaultWeb3()\n    this.props.setWeb3(default_web3.web3)\n    this.props.setWeb3Network(default_web3.network)\n\n    // Now, replace web3 with injected web3 if possible\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        \n        try {\n            // Request account access if needed\n            await window.ethereum.enable()\n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n            let network = await window.web3.eth.net.getId()\n            this.props.setWeb3Network(network)\n        } catch (error) {\n            // User denied account access... setting fallback web3 object to access web3 \n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n        let network = await window.web3.eth.net.getId()\n        this.props.setWeb3Network(network)\n    }\n    // Non-dapp browsers...\n    else {\n    }\n  }  \n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    if (this.props.network === 1){      \n      await this._checkScatterConnection()\n    } else if (this.props.network === 2) {\n      await this._checkTronConnection()\n    } else if (this.props.network === 0) {\n      await this._checkEthereumConnection()\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n\n\n\n  handleChange = name => event => {\n    var current = parseFloat(event.target.value);\n\n    // @dev network must be of type Number\n    this.props.setNetwork(current);\n    if (current === 1){\n      //EOS\n    } \n    else if (current === 0) {\n      //ETH\n    }\n    else if (current === 2) {\n    //TRON  \n    }\n    else {\n      throw (Error(`Invalid network provided: ${current}`))\n    } \n\n  };\n\n  render() {\n\n    const { \n      classes\n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"network-selector\">Network</InputLabel>\n                <Select\n                    native\n                    value={this.state.age}\n                    onChange={this.handleChange('network')}\n                    inputProps={{\n                    name: 'network',\n                    id: 'network-native-simple',\n                    }}\n                >\n                    <option value={NETWORKS.ETH}>ETH (Ropsten)</option>\n                    <option value={NETWORKS.EOS}>EOS (Jungle)</option>\n                    <option value={NETWORKS.TRON}>TRON (Shasta)</option>\n                </Select>\n            </FormControl>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nNetworks.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Networks)));\n","const getNetworkNameById = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case 1:\n      networkName = \"Mainnet\";\n      break;\n    case 2:\n      networkName = \"Morden\";\n      break;\n    case 3:\n      networkName = \"Ropsten\";\n      break;\n    case 4:\n      networkName = \"Rinkeby\";\n      break;\n    case 42:\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport default getNetworkNameById\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Web3 Services\nimport getNetworkNameById from '../../eth_services/getNetworkNameById'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3_network: state.global.web3_network,\n  network: state.global.network,\n  eos_name: state.eos.user_name,\n  tron_address: state.tron.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n      tron_address,\n      web3_network,\n      network,\n      eos_name,\n    } = this.props;\n\n    // ETH\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n    const networkName = (web3_network ? getNetworkNameById(web3_network) : \"\")\n\n    // Tron\n    const user_short_tron = tron_address ? tron_address.base58.substring(0, 8) : \"\"\n    \n    return (\n        <Paper className={classes.paper} elevation={3}>\n            {network === 0 && (\n            <Typography> \n                You are connected to Ethereum ({networkName ? networkName : \"\"}) as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>)}\n            {network === 1 && (\n            <Typography> \n                You are connected to EOS Jungle testnet as: {eos_name ? (<a\n                    href={\"https://jungle.bloks.io/account/\" + eos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {eos_name}\n                    </a>) : (\"\")}\n              </Typography>)}\n            {network === 2 && (\n            <Typography> \n                You are connected to Tron (Shasta) as: \n                    {tron_address ? (<a\n                    href={\"https://shasta.tronscan.org/#/address/\" + tron_address.base58}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short_tron}...\n                    </a>) : (\"\")}\n            </Typography>\n            )}\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n);\n\nexport default EtherscanLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n  \n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.data.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../../store/eosActions\";\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/eos/faucet\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  pending_mints: state.eos.pending_mints,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(eosActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.50\",\n      minting: false,\n    };\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    \n    let to = this.props.eos_name\n    if (!to) { return; } // user not signed in\n\t  let post_data = {\n\t    user: to,\n      amount: this.state.amount_to_mint.toString(),\n    }\n    console.log(post_data)\n\n\t  this.setState({\n\t    minting: true\n\t  })\n\n\t  try {\n\t    // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n\t    //let minter_status = await axios.get(\n\t    //  MINTER_ENDPOINT\n\t    //)\n\t    \n\n\t    // API CALL\n\t    let response\n\t    try {\n\t      response = await axios.post(\n\t        MINTER_ENDPOINT,\n\t        post_data\n\t      );\n\t    } catch (err) {\n\t      this.setState({\n\t        minting: false\n\t      })\n\t      console.error(\"please be patient in between transactions\") ;\n\t      return ; \n\t    }\n\n\t    let pending_hash = response.data.transaction_id\n\n\t    this.props.concatPendingMints(pending_hash)\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  } catch (err) {\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  }\n\n\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      pending_mints,\n      eos_name\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eos_name ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst TronLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://s3.amazonaws.com/carbon12/tron.svg\"\n  />\n);\n\nexport default TronLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/tron/mint\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_mints: state.tron.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(tronActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: 10,\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n      // Tron contracts only deal with integers, need to be able to convert decimals\n      let amountToMint = (parseFloat(this.state.amount_to_mint)*(10**18)).toString()\n\n      let to = this.props.tron_address.base58\n      if (!tronWeb.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // Second, request minter to mint new CUSD via POST\n        let post_data = {\n          user_hex: to,\n          amount: amountToMint,\n        }\n        let response = await axios.post(\n          MINTER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.transaction_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        console.error('Minting failed, please try again in 5 minutes')\n        this.setState({\n          minting: false\n        })\n      }\n    } else {\n      alert('no tronweb detected')\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !tron_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n  try {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import {rpc, CONTRACT_CODE} from './getDefaultEosJS'\n// Refresh user CUSD balance\nexport const updateEosBalance = async (user_name) => {\n  try {\n        const result = await rpc.get_table_rows({\n            \"code\": CONTRACT_CODE,\n            \"scope\": user_name,\n            \"table\": \"accounts\" // accounts table stores balances\n        })\n        \n        let i;\n        for (i = 0; i < result.rows.length; i++){\n        \tif (result.rows[i].balance.split(\" \")[1] === \"CUSD\"){\n        \t\treturn result.rows[i].balance.split(\" \")[0]\n        \t}\n        }\n    } catch (err) {\n        console.log(err)\n        throw(err)\n\n    }\n}","// Fetch active CUSD instance\nexport const getCUSD = async (tronWeb) => {\n    if (!tronWeb) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/tron/CarbonDollar.json\");\n\n    // Contract Ropsten Addresses\n    const SHASTA_NETWORK_ID = 2\n    const ADDRESS = ABI.networks[SHASTA_NETWORK_ID].address\n\n    try {\n        let contract_base58_address = tronWeb.address.fromHex(ADDRESS) \n        let cusd = await tronWeb.contract().at(contract_base58_address)\n        return cusd\n    } catch (err) {\n        throw err\n    }\n}\n\nexport default getCUSD","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\n// @dev user should be in Hex encoding NOT base58\nexport const updateTronBalance = async (tronWeb, user) => {\n  try {\n    if (tronWeb && user) {\n      let cusd = await getCUSD(tronWeb)\n      if (tronWeb.isAddress(user)) {\n        let balance = await cusd.balanceOf(user).call()\n        let decimal = parseFloat(balance.toString())\n        let converted = decimal/(10**18)\n        return converted\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import React from 'react';\n\nconst CarbonLogo = () => (\n  <img\n    style={{ height: \"15px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/carbon-logo.svg\"\n  />\n\n);\n\nexport default CarbonLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n// EOS Services\nimport { updateEosBalance } from '../../eos_services/updateEosBalance'\n// Tron Services\nimport { updateTronBalance } from '../../tron_services/updateTronBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  eos_balance_cusd: state.eos.balance_cusd,\n  network: state.global.network,\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  balance_cusd_tron: state.tron.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance)),\n  setEosBalance: balance => dispatch(eosActions.setEosBalance(balance)),\n  setTronBalance: balance => dispatch(tronActions.setTronBalance(balance)),\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n\n  // On Ethereum:\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd) {\n          this.props.setEthBalance(short_balance)\n        }\n    } else {\n      this.props.setEthBalance(\"N/A\")\n    }\n  }\n\n  // On EOS:\n  _updateEosBalance = async () => {\n      if (this.props.eos_name) { \n        let oldBalance = this.props.eos_balance_cusd\n        let newBalance = await updateEosBalance(this.props.eos_name)\n        if (oldBalance !== newBalance){\n         this.props.setEosBalance(newBalance)\n       }\n      }\n  }\n\n  // On Tron:\n  _updateTronBalance = async (user) => {\n    let tronWeb = this.props.tronWeb\n    if (!tronWeb || !user) return;\n    let short_balance = await updateTronBalance(tronWeb, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd_tron) {\n          this.props.setTronBalance(short_balance)\n        }\n    } else {\n      this.props.setTronBalance(\"N/A\")\n    }\n\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 5000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n\n    if (this.props.network === 0){\n      // Update user balance\n      await this._updateUserBalance(this.props.eth_address)\n    } else if (this.props.network === 1) {\n      await this._updateEosBalance(this.props.eos_client)\n    } else if (this.props.network === 2) {\n      // @dev Tron Smart contracts deal with Hex addresses, like Solidity\n      await this._updateTronBalance(this.props.tron_address.hex)\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd,\n      eos_balance_cusd,\n      balance_cusd_tron,\n      network\n    } = this.props;\n\n    let balance\n    if (network === 0) {\n      balance = balance_cusd\n    } else if (network === 1) {\n      balance = eos_balance_cusd\n    } else if (network === 2) {\n      balance = balance_cusd_tron\n    }\n\n    return (\n          \n          <Paper className={classes.paper} elevation={3}>\n          {/*h*/}\n            <Typography> \n              Your <CarbonLogo /> balance: {balance}\n            </Typography>\n          \n          </Paper>\n          \n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'\nimport PropTypes from 'prop-types';\nclass SignMessageSnackbar extends Component {\n    render () {\n        const {\n            open\n        } = this.props\n\n        return (\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                ContentProps={{\n                'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Please sign the transaction</span>}\n            />\n        );\n    }\n}\n\nSignMessageSnackbar.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SignMessageSnackbar;\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eth_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                  href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Etherscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Tron services\nimport getCUSD from '../../../tron_services/getCUSD';\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_transfers: state.tron.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(tronActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n        let amountToTransfer = (parseFloat(this.state.amount_to_transfer)*(10**18)).toString()\n        let to = this.state.transfer_to\n        let to_base58 = tronWeb.address.fromHex(to)\n        let verified = tronWeb.isAddress(to) && tronWeb.isAddress(to_base58)\n\n        if (!verified) {\n            console.log('invalid user address: (to) ', to)\n            return\n        }\n        this.setState({\n            transferring: true\n        })\n        try {\n            let cusd = await getCUSD(tronWeb)\n            let pending_hash = await cusd.transfer(to, amountToTransfer).send()\n            this.props.concatPendingTransfers(pending_hash.toString()) // @dev always .toString() tron smart contract return values\n            this.setState({\n                transferring: false\n            })\n        } catch (err) {\n            this.setState({\n                transferring: false\n            })\n        }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !tron_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                  href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Tronscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../../store/eosActions\";\n\n// EOS services\nimport { CONTRACT_CODE, CURRENCY_PRECISION, transactionOptions } from '../../../eos_services/getDefaultEosJS'\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_api: state.global.eos_client,\n  pending_burns: state.eos.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(eosActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let amount = parseFloat(this.state.amount_to_burn)\n    if (this.props.eos_api) {\n      this.setState({\n          burning: true\n      })\n      try {\n        let resultWithConfig = await this.props.eos_api.transact({\n          actions: [\n            {\n              account: CONTRACT_CODE,\n              name: \"burn\",\n              authorization: [\n                {\n                  actor: this.props.eos_name,\n                  permission: \"active\"\n                }\n              ],\n              data: {\n                from: this.props.eos_name,\n                quantity: amount.toFixed(CURRENCY_PRECISION) + \" CUSD\",\n                memo: \"Carbon Jungle Faucet: burning \" + amount.toFixed(CURRENCY_PRECISION) + \" CUSD\"\n              }\n            }\n          ]\n        }, transactionOptions)\n        this.props.concatPendingBurns(resultWithConfig.transaction_id)\n        this.setState({\n            burning: false\n        })\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eos_name,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eos_name ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../../store/eosActions\";\n\n// Eos services\nimport { CONTRACT_CODE, CURRENCY_PRECISION, transactionOptions } from '../../../eos_services/getDefaultEosJS'\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_api: state.global.eos_client,\n  pending_transfers: state.eos.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(eosActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let amount = parseFloat(this.state.amount_to_transfer)\n    if (this.props.eos_api) {\n      this.setState({\n          transferring: true\n      })\n      try {\n        let resultWithConfig = await this.props.eos_api.transact({\n          actions: [\n            {\n              account: CONTRACT_CODE,\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: this.props.eos_name,\n                  permission: \"active\"\n                }\n              ],\n              data: {\n                from: this.props.eos_name,\n                to: this.state.transfer_to,\n                quantity: amount.toFixed(CURRENCY_PRECISION) + \" CUSD\",\n                memo: \"Carbon Jungle Faucet: transferring \" + amount.toFixed(CURRENCY_PRECISION) + \" CUSD\"\n              }\n            }\n          ]\n        }, transactionOptions)\n        this.props.concatPendingTransfers(resultWithConfig.transaction_id)\n        this.setState({\n            transferring: false\n        })\n      } catch (err) {\n        this.setState({\n            transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eos_name,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eos_name ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Bloks.io\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Tron services\nimport getCUSD from '../../../tron_services/getCUSD';\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_burns: state.tron.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(tronActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n        let amountToBurn = (parseFloat(this.state.amount_to_burn)*(10**18)).toString()\n        this.setState({\n            burning: true\n        })\n        try {\n            let cusd = await getCUSD(tronWeb)\n            let pending_hash = await cusd.burn(amountToBurn).send()\n            this.props.concatPendingBurns(pending_hash.toString()) // @dev always .toString() tron smart contract return values\n            this.setState({\n                burning: false\n            })\n        } catch (err) {\n            this.setState({\n                burning: false\n            })\n        }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !tron_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\n// Core Wallet Components\nimport Networks from './homePageComponents/Networks'\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport EosMint from './homePageComponents/eos/MintButton'\nimport TronMint from './homePageComponents/tron/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport TronTransfer from './homePageComponents/tron/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\nimport EosBurn from './homePageComponents/eos/BurnButton'\nimport EosTransfer from './homePageComponents/eos/TransferButton'\nimport TronBurn from './homePageComponents/tron/BurnButton'\n\n\nconst styles = theme => ({\n});\n\n// Redux mappings\nconst mapState = state => ({\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n\n  render() {\n    const {\n      network \n    } = this.props;\n\n    return (\n\n          <div>\n            {/* NETWORK SELECTOR */}\n              <Networks />\n            {/* USER IDENTITY  */}\n              <Accounts /> \n            {/* MINT  */\n              network === 0 ?\n              <MintButton /> : \n              ( network === 1 ? <EosMint/> :\n                (network === 2 ? <TronMint /> : \"\" )\n              )\n            }\n            {/* USER BALANCES  */\n              network === 0 ?\n              <Balances /> : <Balances />\n            }\n            {/* TRANSFER */\n              network === 0 ?\n              <TransferButton/> : \n              ( network === 1 ? <EosTransfer/> :\n                (network === 2 ? <TronTransfer /> : \"\" )\n              )\n            }\n            {/* BURN */\n              network === 0 ?\n              <BurnButton /> : \n              ( network === 1 ? <EosBurn/> :\n                (network === 2 ? <TronBurn /> : \"\" )\n              )\n            }\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(HomePage)));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (username, password, chainId, eth_address, encrypted_json) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password,\n            chainId: chainId.toString(),\n            accountName: eth_address,\n            wallet: JSON.stringify(encrypted_json)\n        }\n        console.log(post_data)\n\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created wallet\n        if (db_post_response.data) {\n            let new_wallets_key = db_post_response.data.key\n            let new_wallet = JSON.parse(db_post_response.data.value)\n            return {\n                wallet_key: new_wallets_key,\n                wallet: new_wallet\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', WALLETS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass SaveEthAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      saving: false\n    };\n  }\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.props.password\n    let chainId = NETWORKS.ETH \n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n\n        let saved_wallet = await saveAccountToUser(\n          identityToAssociateWithAccount, \n          password,\n          chainId,\n          address_from_encrypted_json,\n          encrypted_json\n        )\n\n        if (saved_wallet) {\n            // Successfully saved account\n            let wallet_key = saved_wallet.wallet_key\n\n            console.log('saved wallet to user (' + identityToAssociateWithAccount + '): ' + wallet_key)\n        } \n\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes,\n      account_index\n    } = this.props;\n    const {\n      saving\n    } = this.state\n\n    return (      \n        <Button\n          onClick={() => this.saveAccount(account_index)}\n        >\n          {saving ? \n          (<CircularProgress\n              variant=\"indeterminate\"\n              disableShrink\n              className={classes.facebook2}\n              size={24}\n              thickness={4}\n          />) : \n          (\n            <Save />\n          )}\n        </Button>         \n    )\n  }\n}\n\nSaveEthAccountDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  account_index: PropTypes.number.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(SaveEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\nimport SaveEthAccountDialog from './SaveEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {/* save ETH account to signed in user */}\n                    {username && (\n                      <SaveEthAccountDialog account_index={i}/>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (username, password) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password, \n        }\n\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created new user\n        if (db_post_response.data) {\n            let new_user_id = db_post_response.data.key\n            let new_password = db_post_response.data.value\n            return {\n                user: new_user_id,\n                password: new_password\n            }\n        } else {\n            // user already exists or error\n            console.log('user already exists or error')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveUser","// REST API server\nimport axios from 'axios'\nimport config from '../config'\n\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\n\nconst loginUser = async (username, password) => {\n    let params = {\n        user: username,\n        password: password, \n    }\n    try {\n        let db_get_response = await axios.get(\n            USERS_ENDPOINT,\n            { params }\n          );\n        \n        // if successfully signed in user\n        if (db_get_response.data) {\n            let user_id = db_get_response.data.key\n            let user_password = db_get_response.data.value.password\n            let user_wallets = db_get_response.data.value.chainAccounts\n            return {\n                user: user_id,\n                password: user_password,\n                wallets: user_wallets\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('invalid username password combo: ', params)\n        return false\n    }\n    \n}\n\nexport default loginUser","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    // let percentComplete = parseInt(progress * 100)\n    // if ( percentComplete%20 === 0 ) {\n    //     console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    // }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\nimport loginUser from '../../db_services/loginUser'\n\n// ETH Account Management helpers\nimport unlockAccount from '../../eth_services/unlockAccount'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\nimport { NETWORKS, accountsActions } from '../../store/accountsActions'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name)),\n    setPassword: password => dispatch(globalActions.setPassword(password)),\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n    clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            loading_server: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        let isValidAccount = Boolean(\n            username && \n            password &&\n            confirm_password &&\n            (password === confirm_password)\n        )\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Attempt to create new user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let new_user = await saveUser(username, password)\n            if (new_user) {\n                // Successfully created new user\n                let new_username = new_user.user\n                console.log('created a new user: ', new_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(username)\n                this.props.setPassword(password)\n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n\n\n        // Attempt to get existing user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let existing_user = await loginUser(username, password)\n            if (existing_user) {\n                // Successfully logged in new user\n                let existing_username = existing_user.user\n                let existing_password = existing_user.password\n\n                console.log('signed in existing user: ', existing_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(existing_username)\n                this.props.setPassword(existing_password)\n\n                // Set user accounts\n                let existing_wallets = existing_user.wallets\n                let eth_accounts = existing_wallets[NETWORKS.ETH]\n\n                if (eth_accounts.length > 0) {\n                    console.log(\"loading \" + eth_accounts.length + \" wallets\")\n                    for (var i = 0; i < eth_accounts.length; i++) {\n                        let wallet = eth_accounts[i]\n                        let address = Object.keys(wallet)[0]\n                        console.log('address: ', address)\n                        let encrypted_wallet = JSON.parse(wallet[address])\n                        let decrypted_wallet = await unlockAccount(encrypted_wallet, password)\n                        this.props.addEthAccount(decrypted_wallet)\n                    }\n                }\n                \n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not sign in user')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            loading_server,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {loading_server ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {loading_server ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from \"../store/globalActions\";\nimport { accountsActions } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n  setUsername: name => dispatch(globalActions.setUsername(name)),\n  setPassword: password => dispatch(globalActions.setPassword(password)),\n  clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  // Clear identity\n  logoutIdentity = () => {\n    this.props.setUsername('')\n    this.props.setPassword('')\n    this.props.clearEthAccounts()\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username,\n      password\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const signed_in = (username && password)\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              {/* Create a new account */}\n              <Typography variant=\"subtitle1\" className={classes.button}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AccountCircle />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            {/* Sign out of account */}\n            {signed_in && (<Typography variant=\"subtitle1\" className={classes.button}> \n                <Button \n                  color=\"primary\" \n                  aria-label=\"Logout\"\n                  onClick={this.logoutIdentity}\n                >\n                  <Clear />\n                  Logout\n                </Button>\n            </Typography>)}\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support the following cryptonetwork testnets: Ethereum (Ropsten), EOS (Jungle), and Tron (Shasta).\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Testnet Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet on a testnet. CUSD was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Ethereum MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass SwapPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>(Beta)</b> Swap CUSD with any cryptocurrency on our supported networks\n            </Typography>\n            <Button variant=\"contained\" className={classes.section}> \n                EOS\n            </Button>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nSwapPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(SwapPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { PAGES } from \"./store/globalActions\";\n\n/** @dev How to add new pages to the Faucet */\n// 1) Add the page mapping in store/globalActions.PAGES\n// 2) Add the page option logic and component to the header menu in components/headerComponents/HeaderMenu\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\nimport SwapPage from './components/SwapPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  swap: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.SWAP ? (\n          <div className={classes.swap}>\n            <SwapPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}