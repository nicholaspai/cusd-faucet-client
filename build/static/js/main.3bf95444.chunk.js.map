{"version":3,"sources":["store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/store.js","withRoot.js","config.js","eth_services/getDefaultWeb3.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","components/homePageComponents/Networks.js","eth_services/getNetworkNameById.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","components/homePageComponents/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","components/helpers/CarbonLogo.js","components/homePageComponents/Balances.js","components/helpers/SignMessageSnackbar.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/SaveEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/helpers/BloksLogo.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","db_services/loginUser.js","eth_services/unlockAccount.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","NETWORKS","globalActions","number","global","web3","web3_network","page","username","password","network","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","commonConfig","server_url","infura_public_key","getDefaultWeb3","_ref","asyncToGenerator","regenerator_default","mark","_callee","WEB_3_NODE","default_web3","default_network","wrap","_context","prev","next","config","Web3","providers","WebsocketProvider","net","getId","sent","abrupt","stop","this","apply","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","dataToSign","from","signer_wallet","privateKey","sig","sign","signature","Promise","resolve","reject","personal","err","_x","_x2","_x3","_x4","recoverMessageSigner","message","user","recover","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginEthereum","handleClick_LoginMenu","loginMetaMask","messageToSign","signer","signing_in","alert","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","Header","short_name","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginEthereum","NUMBER","flexGrow","Networks","handleChange","setNetwork","Paper_default","paper","elevation","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","native","age","inputProps","NETWORK","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","margin","minWidth","getNetworkNameById","networkId","networkName","Accounts","eth_address","user_short","href","rel","EtherscanLogo","style","height","width","alt","src","MINTER_ENDPOINT","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","data","minter_balance","post","concatPendingMints","t1","helpers_EtherscanLogo","newMint","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","CarbonLogo","Balances","_updateUserBalance","setEthBalance","componentDidMount","_callee2","intervalId","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","clearInterval","helpers_CarbonLogo","SignMessageSnackbar","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","log","transferring","balance_relayer","concatPendingTransfers","TextField_default","textField","helpers_SignMessageSnackbar","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","HomePage","homePageComponents_Networks","homePageComponents_Accounts","homePageComponents_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","homePageComponents_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","chainId","encrypted_json","db_post_response","new_wallets_key","new_wallet","accountName","JSON","stringify","parse","wallet_key","SaveEthAccountDialog","saveAccount","new_account_index","identityToAssociateWithAccount","new_account","address_from_encrypted_json","saved_wallet","saving","createEncryptedWallet","open_new_account_dialog","account_index","Save_default","section","textAlign","EthAccounts","handleClick_AddEthAccount","handleClose_AddEthAccount","accountsComponents_SaveEthAccountDialog","accountsComponents_NewEthAccountDialog","BloksLogo","EosAccounts","handleClick_AddEosAccount","addEosAccount","helpers_BloksLogo","USERS_ENDPOINT","saveUser","new_user_id","new_password","loginUser","params","db_get_response","user_id","user_password","user_wallets","chainAccounts","wallets","callback_decrypt","unlockWallet","encryptedJsonFile","fromEncryptedJson","IdentityDialog","confirm_password","new_user","new_username","clearEthAccounts","loading_server","setUsername","setPassword","signInOldAccount","existing_user","existing_username","existing_password","existing_wallets","encrypted_wallet","decrypted_wallet","keys","unlockAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","logoutIdentity","closeIdentityDialog","signed_in","wallet_name","Tooltip_default","title","placement","button","AccountCircle_default","Clear_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","setGlobalWeb3","_network","setWeb3","setWeb3Network","ethereum","enable","currentProvider","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bf95444.chunk.js","sourcesContent":["// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_WEB3: \"SET_WEB3\",\n  SET_WEB3_NETWORK: \"SET_WEB3_NETWORK\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_NETWORK: \"SET_NETWORK\",\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\n// Network options for home page\nexport const NETWORKS = {\n  ETH: 0,\n  EOS: 1\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setWeb3Network: number => ({\n    type: TYPES.SET_WEB3_NETWORK,\n    number\n  }), \n  // Set Web3 network ID number\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n\n  setPassword: string => ({\n    type: TYPES.SET_PASSWORD,\n    string\n  }), \n  // Set User identity key: 'password'\n\n  setNetwork: number => ({\n    type: TYPES.SET_NETWORK,\n    number\n  }),\n  // Set cryptonetwork\n\n};\n\n","import { TYPES, PAGES, NETWORKS } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    web3_network: '',\n    page: PAGES.MAIN,\n    username: '',\n    password: '',\n    network: NETWORKS.ETH,\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_WEB3_NETWORK:\n      return Object.assign({}, state, {\n        web3_network: action.number\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    case TYPES.SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.string\n      });\n    case TYPES.SET_NETWORK:\n      return Object.assign({}, state, {\n        network: action.number\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n  CLEAR_ETH_ACCOUNTS: \"CLEAR_ETH_ACCOUNTS\"\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  clearEthAccounts: object => ({\n    type: TYPES.CLEAR_ETH_ACCOUNTS\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.CLEAR_ETH_ACCOUNTS:\n      return Object.assign({}, state, {\n        eth_accounts: []\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","const commonConfig = {\n    // server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import Web3 from 'web3';\n\n// Config \nimport config from '../config'\n\nconst getDefaultWeb3 = async () => {\n    var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n    let default_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n    let default_network = await default_web3.eth.net.getId()\n    return {\n        web3: default_web3, \n        network: default_network\n    }\n}\n\nexport default getDefaultWeb3","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptograhically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    return (\n        <div>\n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        </div>\n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address \n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                Ropsten Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {short_name}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, NETWORKS } from \"../../store/globalActions\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n});\n\nconst mapDispatch = dispatch => ({\n  setNetwork: NETWORK => dispatch(globalActions.setNetwork(NETWORK))\n});\n\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleChange = name => event => {\n    this.props.setNetwork(event.target.value);\n  };\n\n  render() {\n\n    const { \n      classes\n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"network-selector\">Network</InputLabel>\n                <Select\n                    native\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    inputProps={{\n                    name: 'age',\n                    id: 'age-native-simple',\n                    }}\n                >\n                    <option value={NETWORKS.ETH}>ETH</option>\n                    <option value={NETWORKS.EOS}>EOS</option>\n                </Select>\n            </FormControl>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nNetworks.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Networks)));\n","const getNetworkNameById = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case 1:\n      networkName = \"Mainnet\";\n      break;\n    case 2:\n      networkName = \"Morden\";\n      break;\n    case 3:\n      networkName = \"Ropsten\";\n      break;\n    case 4:\n      networkName = \"Rinkeby\";\n      break;\n    case 42:\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport default getNetworkNameById\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Web3 Services\nimport getNetworkNameById from '../../eth_services/getNetworkNameById'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3_network: state.global.web3_network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n      web3_network\n    } = this.props;\n\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n    const networkName = (web3_network ? getNetworkNameById(web3_network) : \"\")\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are connected to Ethereum ({networkName ? networkName : \"\"}) as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n\n);\n\nexport default EtherscanLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.data.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n  try {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import React from 'react';\n\nconst CarbonLogo = () => (\n  <img\n    style={{ height: \"15px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/carbon-logo.svg\"\n  />\n\n);\n\nexport default CarbonLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance))\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd) {\n          this.props.setEthBalance(short_balance)\n        }\n    } else {\n      this.props.setEthBalance(\"N/A\")\n    }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    // Update user balance\n    await this._updateUserBalance(this.props.eth_address)\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            <Typography> \n              Your <CarbonLogo /> balance: {balance_cusd}\n            </Typography>\n          </Paper>\n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'\nimport PropTypes from 'prop-types';\nclass SignMessageSnackbar extends Component {\n    render () {\n        const {\n            open\n        } = this.props\n\n        return (\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                ContentProps={{\n                'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Please sign the transaction</span>}\n            />\n        );\n    }\n}\n\nSignMessageSnackbar.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SignMessageSnackbar;\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eth_address ?\n              (\n              <Button disabled>Please sign in trade CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                  href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Etherscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Core Wallet Components\nimport Networks from './homePageComponents/Networks'\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\n\nconst styles = theme => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    return (\n          <div>\n            {/* NETWORK SELECTOR */}\n            <Networks />\n            {/* USER IDENTITY  */}\n            <Accounts />\n            {/* MINT */}\n            <MintButton />\n            {/* USER BALANCES  */}\n            <Balances />\n            {/* TRANSFER */}\n            <TransferButton />\n            {/* BURN */}\n            <BurnButton />\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(withStyles(styles)(HomePage));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (username, password, chainId, eth_address, encrypted_json) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password,\n            chainId: chainId.toString(),\n            accountName: eth_address,\n            wallet: JSON.stringify(encrypted_json)\n        }\n        console.log(post_data)\n\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created wallet\n        if (db_post_response.data) {\n            let new_wallets_key = db_post_response.data.key\n            let new_wallet = JSON.parse(db_post_response.data.value)\n            return {\n                wallet_key: new_wallets_key,\n                wallet: new_wallet\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', WALLETS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass SaveEthAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      saving: false\n    };\n  }\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.props.password\n    let chainId = NETWORKS.ETH \n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n\n        let saved_wallet = await saveAccountToUser(\n          identityToAssociateWithAccount, \n          password,\n          chainId,\n          address_from_encrypted_json,\n          encrypted_json\n        )\n\n        if (saved_wallet) {\n            // Successfully saved account\n            let wallet_key = saved_wallet.wallet_key\n\n            console.log('saved wallet to user (' + identityToAssociateWithAccount + '): ' + wallet_key)\n        } \n\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes,\n      account_index\n    } = this.props;\n    const {\n      saving\n    } = this.state\n\n    return (      \n        <Button\n          onClick={() => this.saveAccount(account_index)}\n        >\n          {saving ? \n          (<CircularProgress\n              variant=\"indeterminate\"\n              disableShrink\n              className={classes.facebook2}\n              size={24}\n              thickness={4}\n          />) : \n          (\n            <Save />\n          )}\n        </Button>         \n    )\n  }\n}\n\nSaveEthAccountDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  account_index: PropTypes.number.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(SaveEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\nimport SaveEthAccountDialog from './SaveEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {/* save ETH account to signed in user */}\n                    {username && (\n                      <SaveEthAccountDialog account_index={i}/>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (username, password) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password, \n        }\n\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created new user\n        if (db_post_response.data) {\n            let new_user_id = db_post_response.data.key\n            let new_password = db_post_response.data.value\n            return {\n                user: new_user_id,\n                password: new_password\n            }\n        } else {\n            // user already exists or error\n            console.log('user already exists or error')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveUser","// REST API server\nimport axios from 'axios'\nimport config from '../config'\n\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\n\nconst loginUser = async (username, password) => {\n    let params = {\n        user: username,\n        password: password, \n    }\n    try {\n        let db_get_response = await axios.get(\n            USERS_ENDPOINT,\n            { params }\n          );\n        \n        // if successfully signed in user\n        if (db_get_response.data) {\n            let user_id = db_get_response.data.key\n            let user_password = db_get_response.data.value.password\n            let user_wallets = db_get_response.data.value.chainAccounts\n            return {\n                user: user_id,\n                password: user_password,\n                wallets: user_wallets\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('invalid username password combo: ', params)\n        return false\n    }\n    \n}\n\nexport default loginUser","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    // let percentComplete = parseInt(progress * 100)\n    // if ( percentComplete%20 === 0 ) {\n    //     console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    // }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\nimport loginUser from '../../db_services/loginUser'\n\n// ETH Account Management helpers\nimport unlockAccount from '../../eth_services/unlockAccount'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\nimport { NETWORKS, accountsActions } from '../../store/accountsActions'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name)),\n    setPassword: password => dispatch(globalActions.setPassword(password)),\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n    clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            loading_server: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        let isValidAccount = Boolean(\n            username && \n            password &&\n            confirm_password &&\n            (password === confirm_password)\n        )\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Attempt to create new user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let new_user = await saveUser(username, password)\n            if (new_user) {\n                // Successfully created new user\n                let new_username = new_user.user\n                console.log('created a new user: ', new_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(username)\n                this.props.setPassword(password)\n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n\n\n        // Attempt to get existing user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let existing_user = await loginUser(username, password)\n            if (existing_user) {\n                // Successfully logged in new user\n                let existing_username = existing_user.user\n                let existing_password = existing_user.password\n\n                console.log('signed in existing user: ', existing_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(existing_username)\n                this.props.setPassword(existing_password)\n\n                // Set user accounts\n                let existing_wallets = existing_user.wallets\n                let eth_accounts = existing_wallets[NETWORKS.ETH]\n\n                if (eth_accounts.length > 0) {\n                    console.log(\"loading \" + eth_accounts.length + \" wallets\")\n                    for (var i = 0; i < eth_accounts.length; i++) {\n                        let wallet = eth_accounts[i]\n                        let address = Object.keys(wallet)[0]\n                        console.log('address: ', address)\n                        let encrypted_wallet = JSON.parse(wallet[address])\n                        let decrypted_wallet = await unlockAccount(encrypted_wallet, password)\n                        this.props.addEthAccount(decrypted_wallet)\n                    }\n                }\n                \n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not sign in user')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            loading_server,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {loading_server ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {loading_server ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from \"../store/globalActions\";\nimport { accountsActions } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n  setUsername: name => dispatch(globalActions.setUsername(name)),\n  setPassword: password => dispatch(globalActions.setPassword(password)),\n  clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  // Clear identity\n  logoutIdentity = () => {\n    this.props.setUsername('')\n    this.props.setPassword('')\n    this.props.clearEthAccounts()\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username,\n      password\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const signed_in = (username && password)\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              {/* Create a new account */}\n              <Typography variant=\"subtitle1\" className={classes.button}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AccountCircle />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            {/* Sign out of account */}\n            {signed_in && (<Typography variant=\"subtitle1\" className={classes.button}> \n                <Button \n                  color=\"primary\" \n                  aria-label=\"Logout\"\n                  onClick={this.logoutIdentity}\n                >\n                  <Clear />\n                  Logout\n                </Button>\n            </Typography>)}\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support: Ethereum, EOS.\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet. CUSD on Ropsten was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale. Being able to assume that 1 CUSD == $1 will make fiscal forecasting simpler. 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// WEB3 Services\nimport Web3 from 'web3';\nimport getDefaultWeb3 from './eth_services/getDefaultWeb3'\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n  setWeb3Network: number => dispatch(globalActions.setWeb3Network(number))\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP WEB3 */\n  // Detect or set window.web3 ethereum connection\n  setGlobalWeb3 = async () => {\n\n    // Set default web3 in case browser cannot inject web3\n    let default_web3 = await getDefaultWeb3()\n    this.props.setWeb3(default_web3.web3)\n    this.props.setWeb3Network(default_web3.network)\n\n    // Now, replace web3 with injected web3 if possible\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable()\n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n            let network = await window.web3.eth.net.getId()\n            this.props.setWeb3Network(network)\n        } catch (error) {\n            // User denied account access... setting fallback web3 object to access web3 \n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n        let network = await window.web3.eth.net.getId()\n        this.props.setWeb3Network(network)\n    }\n    // Non-dapp browsers...\n    else {\n\n    }\n  }  \n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setGlobalWeb3() \n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}