{"version":3,"sources":["../node_modules/encoding/lib sync","store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/eosActions.js","store/eosReducers.js","store/tronActions.js","store/tronReducers.js","store/store.js","withRoot.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","eos_services/setupEos.js","tron_services/getDefaultTronWeb.js","config.js","eth_services/getDefaultWeb3.js","components/homePageComponents/Networks.js","eth_services/getNetworkNameById.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","components/homePageComponents/MintButton.js","components/helpers/BloksLogo.js","components/homePageComponents/EosMint.js","components/helpers/TronLogo.js","components/homePageComponents/tron/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","eos_services/updateEosBalance.js","tron_services/getCUSD.js","tron_services/updateTronBalance.js","components/helpers/CarbonLogo.js","components/homePageComponents/Balances.js","components/helpers/SignMessageSnackbar.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","components/homePageComponents/tron/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/homePageComponents/tron/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/SaveEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","db_services/loginUser.js","eth_services/unlockAccount.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","NETWORKS","globalActions","number","global","web3","web3_network","page","username","password","network","eos_client","tronWeb","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","eosActions","eos","client","user_name","eos_mints","scatter_state","tronActions","tron","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","this","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","_ref","asyncToGenerator","regenerator_default","mark","_callee","dataToSign","from","signer_wallet","privateKey","sig","wrap","_context","prev","next","abrupt","sign","signature","Promise","reject","personal","err","stop","_x","_x2","_x3","_x4","apply","recoverMessageSigner","message","user","recover","sent","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginEthereum","handleClick_LoginMenu","handleClick_LoginMenu_Tron","ready","defaultAddress","setTronAddress","alert","loginMetaMask","messageToSign","signer","signing_in","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","Header","user_address_tron","short_name","short_name_tron","base58","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginEthereum","NUMBER","flexGrow","endpoint","blockchain","protocol","host","port","chainId","rpc","JsonRpc","fetch","EOSIOClient","contractAccount","ScatterJS","plugins","ScatterEOS","scatter","then","connected","log","noScatter","requiredFields","getIdentity","identity","find","x","Api","HttpProvider","TronWeb","providers","NODE_URL","fullNode","solidityNode","getDefaultTronWeb","commonConfig","server_url","infura_public_key","getDefaultWeb3","WEB_3_NODE","default_web3","default_network","config","Web3","WebsocketProvider","net","getId","Networks","_checkScatterConnection","setScatterState","clearInterval","intervalId","_checkTronConnection","_callee2","default_tronweb","_context2","setTronWeb","_checkEthereumConnection","_callee3","_network","_context3","setWeb3","setWeb3Network","ethereum","enable","currentProvider","componentDidMount","_callee4","_context4","setInterval","timer","_callee5","_context5","componentWillUnmount","handleChange","current","setNetwork","eosio","setEOS","Paper_default","paper","elevation","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","native","age","inputProps","NETWORK","tronweb","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","margin","minWidth","getNetworkNameById","networkId","networkName","Accounts","eth_address","tron_address","eos_name","user_short","user_short_tron","href","rel","EtherscanLogo","style","height","width","alt","src","MINTER_ENDPOINT","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","data","minter_balance","post","concatPendingMints","t1","helpers_EtherscanLogo","newMint","BloksLogo","getName","setEosName","transaction_id","concatEosMints","helpers_BloksLogo","TronLogo","user_hex","transaction_hash","helpers_TronLogo","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","updateEosBalance","result","get_table_rows","scope","table","rows","split","ABI","ADDRESS","contract_base58_address","networks","fromHex","contract","at","updateTronBalance","CarbonLogo","Balances","_updateUserBalance","setEthBalance","_updateEosBalance","oldBalance","newBalance","eos_balance_cusd","setEosBalance","_updateTronBalance","_ref3","balance_cusd_tron","setTronBalance","hex","helpers_CarbonLogo","SignMessageSnackbar","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","TextField_default","textField","helpers_SignMessageSnackbar","newTransfer","to_base58","send","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","burn","HomePage","homePageComponents_Networks","homePageComponents_Accounts","homePageComponents_MintButton","EosMint","tron_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","tron_TransferButton","homePageComponents_BurnButton","tron_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","encrypted_json","db_post_response","new_wallets_key","new_wallet","accountName","JSON","stringify","parse","wallet_key","SaveEthAccountDialog","saveAccount","new_account_index","identityToAssociateWithAccount","new_account","address_from_encrypted_json","saved_wallet","saving","createEncryptedWallet","open_new_account_dialog","account_index","Save_default","section","textAlign","EthAccounts","handleClick_AddEthAccount","handleClose_AddEthAccount","accountsComponents_SaveEthAccountDialog","accountsComponents_NewEthAccountDialog","EosAccounts","handleClick_AddEosAccount","addEosAccount","USERS_ENDPOINT","saveUser","new_user_id","new_password","loginUser","params","db_get_response","user_id","user_password","user_wallets","chainAccounts","wallets","callback_decrypt","unlockWallet","encryptedJsonFile","fromEncryptedJson","IdentityDialog","confirm_password","new_user","new_username","clearEthAccounts","loading_server","setUsername","setPassword","signInOldAccount","existing_user","existing_username","existing_password","existing_wallets","encrypted_wallet","decrypted_wallet","unlockAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","logoutIdentity","closeIdentityDialog","signed_in","wallet_name","Tooltip_default","title","placement","button","AccountCircle_default","Clear_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.21102abd.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 535;","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_TRONWEB: \"SET_TRONWEB\",\n  SET_WEB3: \"SET_WEB3\",\n  SET_WEB3_NETWORK: \"SET_WEB3_NETWORK\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_NETWORK: \"SET_NETWORK\",\n  SET_EOS: \"SET_EOS\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\n// Network options for home page\nexport const NETWORKS = {\n  ETH: 0,\n  EOS: 1,\n  TRON: 2\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setWeb3Network: number => ({\n    type: TYPES.SET_WEB3_NETWORK,\n    number\n  }), \n  // Set Web3 network ID number\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n\n  setPassword: string => ({\n    type: TYPES.SET_PASSWORD,\n    string\n  }), \n  // Set User identity key: 'password'\n\n\n  setEOS: object => ({\n    type:TYPES.SET_EOS,\n    object\n  }),\n  // Set EOS object\n\n  setTronWeb: object => ({\n    type: TYPES.SET_TRONWEB,\n    object\n  }), \n  // Set TronWeb object\n\n  setNetwork: number => ({\n    type: TYPES.SET_NETWORK,\n    number\n  }),\n  // Set cryptonetwork\n\n};\n\n","import { TYPES, PAGES, NETWORKS } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    web3_network: '',\n    page: PAGES.MAIN,\n    username: '',\n    password: '',\n    network: NETWORKS.ETH,\n    eos_client: '',\n    tronWeb: '',\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_WEB3_NETWORK:\n      return Object.assign({}, state, {\n        web3_network: action.number\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    case TYPES.SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.string\n      });\n    case TYPES.SET_NETWORK:\n      return Object.assign({}, state, {\n        network: action.number\n      });\n    case TYPES.SET_EOS:\n      return Object.assign({}, state, {\n        eos_client:action.object\n      });\n    case TYPES.SET_TRONWEB:\n      return Object.assign({}, state, {\n        tronWeb: action.object\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n  CLEAR_ETH_ACCOUNTS: \"CLEAR_ETH_ACCOUNTS\"\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  clearEthAccounts: object => ({\n    type: TYPES.CLEAR_ETH_ACCOUNTS\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.CLEAR_ETH_ACCOUNTS:\n      return Object.assign({}, state, {\n        eth_accounts: []\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_EOS_CLIENT: \"SET_EOS_CLIENT\",\n  SET_EOS_NAME: \"SET_EOS_NAME\",\n  CONCAT_EOS_MINTS: \"CONCAT_EOS_MINTS\",\n  SET_EOS_BALANCE: \"SET_EOS_BALANCE\",\n  SET_SCATTER_STATE: \"SET_SCATTER_STATE\"\n};\n\nexport const eosActions = {\n  setEosClient: object => ({\n  \ttype: TYPES.SET_EOS_CLIENT,\n  \tobject\n  }),\n  setEosName: string => ({\n    type: TYPES.SET_EOS_NAME,\n    string\n  }),\n  concatEosMints: object => ({\n    type: TYPES.CONCAT_EOS_MINTS,\n    object\n  }),\n  setEosBalance: string => ({\n    type: TYPES.SET_EOS_BALANCE,\n    string\n  }),\n  setScatterState: string => ({\n    type:TYPES.SET_SCATTER_STATE,\n    string\n  }),\n\n\n};\n\n","import { TYPES } from \"./eosActions\";\n\n// Initial state\nexport const initialState = {\n  eos: {\n    client: '',\n    user_name: '',\n    balance_cusd: '',\n    eos_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n    scatter_state:'',\n  },\n};\n\n// User Eos account state\nexport const eos = (state = initialState.eos, action) => {\n  switch (action.type) {\n    case TYPES.SET_EOS_CLIENT:\n      return Object.assign({}, state, {\n        client: action.object\n      });\n    case TYPES.SET_EOS_NAME:\n      return Object.assign({}, state, {\n        user_name: action.string\n      });\n    case TYPES.CONCAT_EOS_MINTS:\n      return Object.assign({}, state, {\n        eos_mints: state.eos_mints.concat(action.object)\n      });\n    case TYPES.SET_EOS_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.SET_SCATTER_STATE:\n      return Object.assign({}, state, {\n        scatter_state: action.string\n      });\n\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n    SET_TRON_ADDRESS: \"SET_TRON_ADDRESS\",\n    SET_TRON_BALANCE: \"SET_TRON_BALANCE\",\n    CONCAT_PENDING_MINTS_TRON: \"CONCAT_PENDING_MINTS_TRON\",\n    CONCAT_PENDING_BURNS_TRON: \"CONCAT_PENDING_BURNS_TRON\",\n    CONCAT_PENDING_TRANSFERS_TRON: \"CONCAT_PENDING_TRANSFERS_TRON\",\n  };\n  \n  export const tronActions = {\n    setTronAddress: string => ({\n      type: TYPES.SET_TRON_ADDRESS,\n      string\n    }),\n    // Set user tron account\n\n    setTronBalance: string => ({\n      type: TYPES.SET_TRON_BALANCE,\n      string\n    }),\n    // Set cusd-tron balance\n\n    concatPendingMints: object => ({\n      type: TYPES.CONCAT_PENDING_MINTS_TRON,\n      object\n    }),\n    // Add a pending mint transaction to user profile\n\n    concatPendingBurns: object => ({\n      type: TYPES.CONCAT_PENDING_BURNS_TRON,\n      object\n    }),\n    // Add a pending burn transaction to user profile\n    \n    concatPendingTransfers: object => ({\n      type: TYPES.CONCAT_PENDING_TRANSFERS_TRON,\n      object\n    }),\n    // Add a pending transfer transaction to user profile\n\n};\n  \n  ","import { TYPES } from \"./tronActions\";\n\n// Initial state\nexport const initialState = {\n  tron: {\n    user_address: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_burns: [],\n    pending_transfers: [],\n  },\n};\n\n// User Tron account state\nexport const tron = (state = initialState.tron, action) => {\n  switch (action.type) {\n    case TYPES.SET_TRON_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_TRON_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS_TRON:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS_TRON:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS_TRON:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\nimport { eos } from \"./eosReducers\";\nimport { tron } from \"./tronReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eos,\n  tron,\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { tronActions } from \"../../store/tronActions\"\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  network: state.global.network,\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n  tronWeb: state.global.tronWeb,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet)),\n  setTronAddress: address => dispatch(tronActions.setTronAddress(address))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** DETECT IF USER IS LOGGED IN TO TRON */\n  handleClick_LoginMenu_Tron = () => {\n    if (!this.props.tronWeb) {\n      alert('Switch to a Tron dApp browser to use this faucet for the time being, apologies!')\n      return\n    }\n    let loggedIn = this.props.tronWeb.ready\n    if (loggedIn && this.props.tronWeb.defaultAddress) {\n      this.props.setTronAddress(this.props.tronWeb.defaultAddress)\n    } else {\n      alert('You are connected to Tron, but we cannot detect your address! Please login to your Tron wallet to use this faucet-- if you are on desktop then try installing the TronLink browser extension')\n    }\n  }\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptographically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    const { network } = this.props;\n    return (\n        \n        <div>\n          { network == 0 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            :\"\"}\n          { network == 2 ? \n            <Button\n                onClick={this.handleClick_LoginMenu_Tron}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Tron\n            </Button>\n            :\"\"}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        \n        </div>\n        \n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address,\n  network: state.global.network,\n  user_address_tron: state.tron.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address,\n      network,\n      user_address_tron\n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n    const short_name_tron = user_address_tron ? user_address_tron.base58.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                CUSD Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {network == 0 && short_name}\n                {network == 2 && short_name_tron}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React from \"react\";\nimport { Api, JsonRpc } from \"eosjs\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\";\nimport {fetch} from 'node-fetch';  \n\nconst endpoint = \"https://jungle.eosio.cr:443\"\n\nconst network = {\n  blockchain: \"eos\",\n  protocol: \"http\",\n  host: \"jungle.eosio.cr\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" \n};\nconst URL = 'https://jungle.eosio.cr:443'\nexport const rpc = new JsonRpc(URL,{fetch});\n\nexport default class EOSIOClient extends React.Component {\n \n  constructor(contractAccount)   {\n    super(contractAccount);\n    \n    \n    this.contractAccount = contractAccount;\n    ScatterJS.plugins(new ScatterEOS());\n    try {\n      ScatterJS.scatter.connect(this.contractAccount).then(connected => {\n        if (!connected) {\n          console.log(\"Issue Connecting\")\n          this.noScatter= true\n          return;\n        } else {\n          this.noScatter = false\n        }\n        const scatter = ScatterJS.scatter;\n        const requiredFields = {\n          accounts: [network] // We defined this above\n        };\n      \n        scatter.getIdentity(requiredFields).then(() => {\n          \n          this.account = scatter.identity.accounts.find(\n            x => x.blockchain === \"eos\"\n            \n          );\n          \n          const rpc = new JsonRpc(endpoint);    \n          \n          this.eos = scatter.eos(network, Api, { rpc });   \n        });\n        window.ScatterJS = null;\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n  } \n  \n}\n\n\n\n\n\n\n\n","/**\n * Return tronweb object (akin to \"Truffle\" for Ethereum) connected to the Shasta testnet\n */\nimport TronWeb from 'tronweb';\nconst HttpProvider = TronWeb.providers.HttpProvider;\nconst NODE_URL = 'https://api.shasta.trongrid.io'\nconst fullNode = new HttpProvider(NODE_URL);\nconst solidityNode = new HttpProvider(NODE_URL);\nconst eventServer = NODE_URL;\n\nconst getDefaultTronWeb = async () => {\n    const tronWeb = new TronWeb(\n        fullNode,\n        solidityNode,\n        eventServer\n    );\n    return tronWeb\n}\n\n\nexport default getDefaultTronWeb","const commonConfig = {\n    // server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import Web3 from 'web3';\n\n// Config \nimport config from '../config'\n\nconst getDefaultWeb3 = async () => {\n    var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n    let default_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n    let default_network = await default_web3.eth.net.getId()\n    return {\n        web3: default_web3, \n        network: default_network\n    }\n}\n\nexport default getDefaultWeb3","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, NETWORKS } from \"../../store/globalActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n//scatter\n//import * as Eos from 'eosjs'\n//import ScatterJS from 'scatterjs-core';\n//import ScatterEOS from 'scatterjs-plugin-eosjs2';\n//import {JsonRpc, Api} from 'eosjs';\nimport EOSIOClient from \"../../eos_services/setupEos\"\nimport getDefaultTronWeb from '../../tron_services/getDefaultTronWeb'\nimport Web3 from 'web3';\nimport getDefaultWeb3 from '../../eth_services/getDefaultWeb3'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_client: state.global.eos_client,\n  network: state.global.network,\n  scatter_state: state.eos.scatter_state,\n  tronWeb: state.global.tronWeb,\n  web3: state.global.web3,\n\n});\n\nconst mapDispatch = dispatch => ({\n  setNetwork: NETWORK => dispatch(globalActions.setNetwork(NETWORK)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string)),\n  setTronAddress: string => dispatch(tronActions.setTronAddress(string)),\n  setTronWeb: tronweb => dispatch(globalActions.setTronWeb(tronweb)),\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n  setWeb3Network: number => dispatch(globalActions.setWeb3Network(number)),\n});\n\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP eosjs */\n  _checkScatterConnection = async () => {\n      \n      if (this.props.eos_client) {\n        if((this.props.eos_client.noScatter == true) && (this.props.scatter_state =='') ){\n          this.props.setScatterState(\"MISSING\")\n          clearInterval(this.state.intervalId);\n\n        } \n      }\n  }\n\n  /** SET UP TronWeb */\n  _checkTronConnection = async () => {\n    // Set tronweb to injected tronweb if possible\n    let installed = window.tronWeb\n    // Detected Tron dapp browser! \n    if (installed) {\n        this.props.setTronWeb(window.tronWeb)\n    } \n    else {\n      // Create default tronweb in case browser cannot inject tronweb\n      let default_tronweb = await getDefaultTronWeb()\n      this.props.setTronWeb(default_tronweb)\n\n      // Non-dapp browsers, inject tronweb on behalf of user\n      window.tronWeb = this.props.tronWeb\n    }\n  }\n\n    /** SET UP Web3 */\n  _checkEthereumConnection = async () => {\n\n    // Set default web3 in case browser cannot inject web3\n    let default_web3 = await getDefaultWeb3()\n    this.props.setWeb3(default_web3.web3)\n    this.props.setWeb3Network(default_web3.network)\n\n    // Now, replace web3 with injected web3 if possible\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        \n        try {\n            // Request account access if needed\n            await window.ethereum.enable()\n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n            let network = await window.web3.eth.net.getId()\n            this.props.setWeb3Network(network)\n        } catch (error) {\n            // User denied account access... setting fallback web3 object to access web3 \n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n        let network = await window.web3.eth.net.getId()\n        this.props.setWeb3Network(network)\n    }\n    // Non-dapp browsers...\n    else {\n    }\n  }  \n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    if (this.props.network == \"1\"){      \n      await this._checkScatterConnection()\n    } else if (this.props.network == \"2\") {\n      await this._checkTronConnection()\n    } else if (this.props.network == \"0\") {\n      await this._checkEthereumConnection()\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n\n\n\n  handleChange = name => event => {\n    var current = event.target.value;\n    this.props.setNetwork(current);\n    if (current === \"1\"){\n      //EOS\n      if (!this.props.eos_client){\n          this.eosio =  new EOSIOClient(\"CARBON_OASIS\")//new EOSIOClient(\"CARBON_OASIS\");\n          this.props.setEOS(this.eosio)\n      } \n    } \n    else if (current === \"0\") {\n      //ETH\n    }\n    else if (current === \"2\") {\n      //TRON  \n      }\n      else {\n        throw (Error(\"No network\"))\n      } \n\n  };\n\n  render() {\n\n    const { \n      classes\n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"network-selector\">Network</InputLabel>\n                <Select\n                    native\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    inputProps={{\n                    name: 'age',\n                    id: 'age-native-simple',\n                    }}\n                >\n                    <option value={NETWORKS.ETH}>ETH (Ropsten)</option>\n                    <option value={NETWORKS.EOS}>EOS (Jungle)</option>\n                    <option value={NETWORKS.TRON}>TRON (Shasta)</option>\n                </Select>\n            </FormControl>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nNetworks.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Networks)));\n","const getNetworkNameById = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case 1:\n      networkName = \"Mainnet\";\n      break;\n    case 2:\n      networkName = \"Morden\";\n      break;\n    case 3:\n      networkName = \"Ropsten\";\n      break;\n    case 4:\n      networkName = \"Rinkeby\";\n      break;\n    case 42:\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport default getNetworkNameById\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Web3 Services\nimport getNetworkNameById from '../../eth_services/getNetworkNameById'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3_network: state.global.web3_network,\n  network: state.global.network,\n  eos_name: state.eos.user_name,\n  scatter_state: state.eos.scatter_state,\n  tron_address: state.tron.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n      tron_address,\n      web3_network,\n      network,\n      eos_name,\n      scatter_state\n    } = this.props;\n\n    // ETH\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n    const networkName = (web3_network ? getNetworkNameById(web3_network) : \"\")\n\n    // Tron\n    const user_short_tron = tron_address ? tron_address.base58.substring(0, 8) : \"\"\n    \n    return (\n        <Paper className={classes.paper} elevation={3}>\n            {network == 0 && (\n            <Typography> \n                You are connected to Ethereum ({networkName ? networkName : \"\"}) as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>)}\n            {network == 1 && (\n            <Typography> \n                You are connected to EOS Jungle testnet as: {eos_name ? (<a\n                    href={\"https://jungle.bloks.io/account/\" + eos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {eos_name}\n                    </a>) : (scatter_state == \"MISSING\" ? (<a\n                    href={\"https://get-scatter.com/download\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Download Scatter\n                    </a>): (<a\n                    href={\"https://github.com/stablecarbon/cusd_onboarding/blob/master/eos/docs/startup.md\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Create Account\n                    </a>))}\n              </Typography>)}\n            {network == 2 && (\n            <Typography> \n                You are connected to Tron (Shasta) as: \n                    {tron_address ? (<a\n                    href={\"https://shasta.tronscan.org/#/address/\" + tron_address.base58}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short_tron}...\n                    </a>) : (\"\")}\n            </Typography>\n            )}\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n);\n\nexport default EtherscanLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n  \n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.data.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../store/eosActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/eos/faucet\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  \n  \n  eos_mints: state.eos.eos_mints,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatEosMints: newMint => dispatch(eosActions.concatEosMints(newMint)),\n  setEosName: name => dispatch(eosActions.setEosName(name))\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.50\",\n      minting: false,\n    };\n  }\n\n  // Refresh user CUSD balance\n  getName = () => {\n    \n    if (!this.props.eos_client.account) return;\n    if (this.props.eos_name) return;\n    \n    this.props.setEosName(this.props.eos_client.account.name)\n\n    return this.props.eos_client.account.name\n    \n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    // Update user balance \n    await this.getName()\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    \n\t  let to = this.props.eos_name\n\n\t  let post_data = {\n\t    //amount: amountToMint.toString(),\n\t    user: to,\n      amount: this.state.amount_to_mint.toString(),\n\t  }\n\n\t  this.setState({\n\t    minting: true\n\t  })\n\n\t  try {\n\t    // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n\t    //let minter_status = await axios.get(\n\t    //  MINTER_ENDPOINT\n\t    //)\n\t    \n\n\t    // API CALL\n\t    let response\n\t    try {\n\t      response = await axios.post(\n\t        MINTER_ENDPOINT,\n\t        post_data\n\t      );\n\t    } catch (err) {\n\t      this.setState({\n\t        minting: false\n\t      })\n\t      console.error(\"please be patient in between transactions\") ;\n\t      return ; \n\t    }\n\n\t    let pending_hash = response.data.transaction_id\n\n\t    this.props.concatEosMints(pending_hash)\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  } catch (err) {\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  }\n\n\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eos_mints,\n      eos_name\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eos_name ?\n              (\n                <Button disabled>Please sign in gets CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { eos_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {eos_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst TronLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://s3.amazonaws.com/carbon12/tron.svg\"\n  />\n);\n\nexport default TronLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/tron/mint\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_mints: state.tron.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(tronActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: 10,\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n      // TODO: Tron contracts only deal with integers, need to be able to convert decimals\n      let amountToMint = this.state.amount_to_mint\n  \n      let to = this.props.tron_address.base58\n      if (!tronWeb.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // Second, request minter to mint new CUSD via POST\n        let post_data = {\n          user_hex: to,\n          amount: amountToMint,\n        }\n        let response = await axios.post(\n          MINTER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.transaction_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        console.error('Minting failed, please try again in 5 minutes')\n        this.setState({\n          minting: false\n        })\n      }\n    } else {\n      alert('no tronweb detected')\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !tron_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n  try {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import {rpc} from './setupEos'\n// Refresh user CUSD balance\nexport const updateEosBalance = async (user_name) => {\n  try {\n        const result = await rpc.get_table_rows({\n            \"code\": \"carbonjungle\",\n            \"scope\": user_name,\n            \"table\": \"accounts\"\n        })\n        \n        let i;\n        for (i = 0; i < result.rows.length; i++){\n        \tif (result.rows[i].balance.split(\" \")[1] === \"CUSD\"){\n        \t\treturn result.rows[i].balance.split(\" \")[0]\n        \t}\n        }\n        throw (Error(\"no CUSD found\"))\n    } catch (err) {\n        console.log(err)\n        throw(err)\n\n    }\n}","// Fetch active CUSD instance\nexport const getCUSD = async (tronWeb) => {\n    if (!tronWeb) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/tron/CarbonDollar.json\");\n\n    // Contract Ropsten Addresses\n    const SHASTA_NETWORK_ID = 2\n    const ADDRESS = ABI.networks[SHASTA_NETWORK_ID].address\n\n    try {\n        let contract_base58_address = tronWeb.address.fromHex(ADDRESS) \n        let cusd = await tronWeb.contract().at(contract_base58_address)\n        return cusd\n    } catch (err) {\n        throw err\n    }\n}\n\nexport default getCUSD","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateTronBalance = async (tronWeb, user) => {\n  try {\n    if (tronWeb && user) {\n      let cusd = await getCUSD(tronWeb)\n      if (tronWeb.isAddress(user)) {\n        let balance = await cusd.balanceOf(user).call()\n        return balance.toString()\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import React from 'react';\n\nconst CarbonLogo = () => (\n  <img\n    style={{ height: \"15px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/carbon-logo.svg\"\n  />\n\n);\n\nexport default CarbonLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n// EOS Services\nimport { updateEosBalance } from '../../eos_services/updateEosBalance'\n// Tron Services\nimport { updateTronBalance } from '../../tron_services/updateTronBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  eos_balance_cusd: state.eos.balance_cusd,\n  network: state.global.network,\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  balance_cusd_tron: state.tron.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance)),\n  setEosBalance: balance => dispatch(eosActions.setEosBalance(balance)),\n  setTronBalance: balance => dispatch(tronActions.setTronBalance(balance)),\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n\n  // On Ethereum:\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd) {\n          this.props.setEthBalance(short_balance)\n        }\n    } else {\n      this.props.setEthBalance(\"N/A\")\n    }\n  }\n\n  // On EOS:\n  _updateEosBalance = async () => {\n      if (this.props.eos_name) { \n        let oldBalance = this.props.eos_balance_cusd\n        let newBalance = await updateEosBalance(this.props.eos_name)\n        if (oldBalance !== newBalance){\n         this.props.setEosBalance(newBalance)\n       }\n      }\n  }\n\n  // On Tron:\n  _updateTronBalance = async (user) => {\n    let tronWeb = this.props.tronWeb\n    if (!tronWeb || !user) return;\n    let short_balance = await updateTronBalance(tronWeb, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd_tron) {\n          this.props.setTronBalance(short_balance)\n        }\n    } else {\n      this.props.setTronBalance(\"N/A\")\n    }\n\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 5000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n\n    if (this.props.network == 0){\n      // Update user balance\n      await this._updateUserBalance(this.props.eth_address)\n    } else if (this.props.network == 1) {\n      await this._updateEosBalance(this.props.eos_client)\n    } else if (this.props.network == 2) {\n      // @dev Tron Smart contracts deal with Hex addresses, like Solidity\n      await this._updateTronBalance(this.props.tron_address.hex)\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd,\n      eos_balance_cusd,\n      balance_cusd_tron,\n      network\n    } = this.props;\n\n    let balance\n    if (network == 0) {\n      balance = balance_cusd\n    } else if (network == 1) {\n      balance = eos_balance_cusd\n    } else if (network == 2) {\n      balance = balance_cusd_tron\n    }\n\n    return (\n          \n          <Paper className={classes.paper} elevation={3}>\n          {/*h*/}\n            <Typography> \n              Your <CarbonLogo /> balance: {balance}\n            </Typography>\n          \n          </Paper>\n          \n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'\nimport PropTypes from 'prop-types';\nclass SignMessageSnackbar extends Component {\n    render () {\n        const {\n            open\n        } = this.props\n\n        return (\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                ContentProps={{\n                'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Please sign the transaction</span>}\n            />\n        );\n    }\n}\n\nSignMessageSnackbar.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SignMessageSnackbar;\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eth_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                  href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Etherscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Tron services\nimport getCUSD from '../../../tron_services/getCUSD';\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_transfers: state.tron.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(tronActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n        let amountToTransfer = this.state.amount_to_transfer\n        let to = this.state.transfer_to\n        let to_base58 = tronWeb.address.fromHex(to)\n        let verified = tronWeb.isAddress(to) && tronWeb.isAddress(to_base58)\n\n        if (!verified) {\n            console.log('invalid user address: (to) ', to)\n            return\n        }\n        this.setState({\n            transferring: true\n        })\n        try {\n            let cusd = await getCUSD(tronWeb)\n            let pending_hash = await cusd.transfer(to, amountToTransfer).send()\n            this.props.concatPendingTransfers(pending_hash.toString()) // @dev always .toString() tron smart contract return values\n            this.setState({\n                transferring: false\n            })\n        } catch (err) {\n            this.setState({\n                transferring: false\n            })\n        }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !tron_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                  href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Tronscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Tron services\nimport getCUSD from '../../../tron_services/getCUSD';\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_burns: state.tron.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(tronActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n        let amountToBurn = this.state.amount_to_burn\n        this.setState({\n            burning: true\n        })\n        try {\n            let cusd = await getCUSD(tronWeb)\n            let pending_hash = await cusd.burn(amountToBurn).send()\n            this.props.concatPendingBurns(pending_hash.toString()) // @dev always .toString() tron smart contract return values\n            this.setState({\n                burning: false\n            })\n        } catch (err) {\n            this.setState({\n                burning: false\n            })\n        }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !tron_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\n// Core Wallet Components\nimport Networks from './homePageComponents/Networks'\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport EosMint from './homePageComponents/EosMint'\nimport TronMint from './homePageComponents/tron/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport TronTransfer from './homePageComponents/tron/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\nimport EosBurn from './homePageComponents/EosBurn'\nimport TronBurn from './homePageComponents/tron/BurnButton'\n\n\nconst styles = theme => ({\n});\n\n// Redux mappings\nconst mapState = state => ({\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n\n  render() {\n    const {\n      network \n    } = this.props;\n\n    return (\n\n          <div>\n            {/* NETWORK SELECTOR */}\n              <Networks />\n            {/* USER IDENTITY  */}\n              <Accounts /> \n            {/* MINT -- FIXME: This is super ugly lol */\n              network == 0 ?\n              <MintButton /> : \n              ( network == 1 ? <EosMint/> :\n                (network == 2 ? <TronMint /> : \"\" )\n              )\n            }\n            {/* USER BALANCES  */\n              network == 0 ?\n              <Balances /> : <Balances />\n            }\n            {/* TRANSFER */\n              network == 0 ?\n              <TransferButton/> : \n              ( network == 2 ? <TronTransfer/> : \"\"\n              )\n            }\n            {/* BURN */\n              network == 0 ?\n              <BurnButton /> : \n              ( network == 2 ? <TronBurn/> : \"\"\n              )\n            }\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(HomePage)));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (username, password, chainId, eth_address, encrypted_json) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password,\n            chainId: chainId.toString(),\n            accountName: eth_address,\n            wallet: JSON.stringify(encrypted_json)\n        }\n        console.log(post_data)\n\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created wallet\n        if (db_post_response.data) {\n            let new_wallets_key = db_post_response.data.key\n            let new_wallet = JSON.parse(db_post_response.data.value)\n            return {\n                wallet_key: new_wallets_key,\n                wallet: new_wallet\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', WALLETS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass SaveEthAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      saving: false\n    };\n  }\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.props.password\n    let chainId = NETWORKS.ETH \n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n\n        let saved_wallet = await saveAccountToUser(\n          identityToAssociateWithAccount, \n          password,\n          chainId,\n          address_from_encrypted_json,\n          encrypted_json\n        )\n\n        if (saved_wallet) {\n            // Successfully saved account\n            let wallet_key = saved_wallet.wallet_key\n\n            console.log('saved wallet to user (' + identityToAssociateWithAccount + '): ' + wallet_key)\n        } \n\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes,\n      account_index\n    } = this.props;\n    const {\n      saving\n    } = this.state\n\n    return (      \n        <Button\n          onClick={() => this.saveAccount(account_index)}\n        >\n          {saving ? \n          (<CircularProgress\n              variant=\"indeterminate\"\n              disableShrink\n              className={classes.facebook2}\n              size={24}\n              thickness={4}\n          />) : \n          (\n            <Save />\n          )}\n        </Button>         \n    )\n  }\n}\n\nSaveEthAccountDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  account_index: PropTypes.number.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(SaveEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\nimport SaveEthAccountDialog from './SaveEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {/* save ETH account to signed in user */}\n                    {username && (\n                      <SaveEthAccountDialog account_index={i}/>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (username, password) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password, \n        }\n\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created new user\n        if (db_post_response.data) {\n            let new_user_id = db_post_response.data.key\n            let new_password = db_post_response.data.value\n            return {\n                user: new_user_id,\n                password: new_password\n            }\n        } else {\n            // user already exists or error\n            console.log('user already exists or error')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveUser","// REST API server\nimport axios from 'axios'\nimport config from '../config'\n\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\n\nconst loginUser = async (username, password) => {\n    let params = {\n        user: username,\n        password: password, \n    }\n    try {\n        let db_get_response = await axios.get(\n            USERS_ENDPOINT,\n            { params }\n          );\n        \n        // if successfully signed in user\n        if (db_get_response.data) {\n            let user_id = db_get_response.data.key\n            let user_password = db_get_response.data.value.password\n            let user_wallets = db_get_response.data.value.chainAccounts\n            return {\n                user: user_id,\n                password: user_password,\n                wallets: user_wallets\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('invalid username password combo: ', params)\n        return false\n    }\n    \n}\n\nexport default loginUser","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    // let percentComplete = parseInt(progress * 100)\n    // if ( percentComplete%20 === 0 ) {\n    //     console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    // }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\nimport loginUser from '../../db_services/loginUser'\n\n// ETH Account Management helpers\nimport unlockAccount from '../../eth_services/unlockAccount'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\nimport { NETWORKS, accountsActions } from '../../store/accountsActions'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name)),\n    setPassword: password => dispatch(globalActions.setPassword(password)),\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n    clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            loading_server: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        let isValidAccount = Boolean(\n            username && \n            password &&\n            confirm_password &&\n            (password === confirm_password)\n        )\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Attempt to create new user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let new_user = await saveUser(username, password)\n            if (new_user) {\n                // Successfully created new user\n                let new_username = new_user.user\n                console.log('created a new user: ', new_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(username)\n                this.props.setPassword(password)\n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n\n\n        // Attempt to get existing user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let existing_user = await loginUser(username, password)\n            if (existing_user) {\n                // Successfully logged in new user\n                let existing_username = existing_user.user\n                let existing_password = existing_user.password\n\n                console.log('signed in existing user: ', existing_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(existing_username)\n                this.props.setPassword(existing_password)\n\n                // Set user accounts\n                let existing_wallets = existing_user.wallets\n                let eth_accounts = existing_wallets[NETWORKS.ETH]\n\n                if (eth_accounts.length > 0) {\n                    console.log(\"loading \" + eth_accounts.length + \" wallets\")\n                    for (var i = 0; i < eth_accounts.length; i++) {\n                        let wallet = eth_accounts[i]\n                        let address = Object.keys(wallet)[0]\n                        console.log('address: ', address)\n                        let encrypted_wallet = JSON.parse(wallet[address])\n                        let decrypted_wallet = await unlockAccount(encrypted_wallet, password)\n                        this.props.addEthAccount(decrypted_wallet)\n                    }\n                }\n                \n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not sign in user')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            loading_server,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {loading_server ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {loading_server ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from \"../store/globalActions\";\nimport { accountsActions } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n  setUsername: name => dispatch(globalActions.setUsername(name)),\n  setPassword: password => dispatch(globalActions.setPassword(password)),\n  clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  // Clear identity\n  logoutIdentity = () => {\n    this.props.setUsername('')\n    this.props.setPassword('')\n    this.props.clearEthAccounts()\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username,\n      password\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const signed_in = (username && password)\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              {/* Create a new account */}\n              <Typography variant=\"subtitle1\" className={classes.button}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AccountCircle />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            {/* Sign out of account */}\n            {signed_in && (<Typography variant=\"subtitle1\" className={classes.button}> \n                <Button \n                  color=\"primary\" \n                  aria-label=\"Logout\"\n                  onClick={this.logoutIdentity}\n                >\n                  <Clear />\n                  Logout\n                </Button>\n            </Typography>)}\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support: Ethereum, EOS.\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet. CUSD on Ropsten was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale. Being able to assume that 1 CUSD == $1 will make fiscal forecasting simpler. 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}