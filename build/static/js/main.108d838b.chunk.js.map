{"version":3,"sources":["eos_services/getDefaultEosJSMainnet.js","store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/eosActions.js","store/eosReducers.js","store/telosActions.js","store/telosReducers.js","store/tronActions.js","store/tronReducers.js","store/store.js","withRoot.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eos_services/getDefaultEosJS.js","telos_services/getDefaultEosJS.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginWeb3.js","components/Header.js","tron_services/getDefaultTronWeb.js","config.js","eth_services/getDefaultWeb3.js","components/homePageComponents/Networks.js","eth_services/getNetworkNameById.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","components/homePageComponents/MintButton.js","components/helpers/BloksLogo.js","components/homePageComponents/eos/MintButton.js","components/homePageComponents/telos/MintButton.js","components/helpers/TronLogo.js","components/homePageComponents/tron/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","eos_services/updateEosBalance.js","telos_services/updateTelosBalance.js","tron_services/getCUSD.js","tron_services/updateTronBalance.js","components/helpers/CarbonLogo.js","components/homePageComponents/Balances.js","components/helpers/SignMessageSnackbar.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","components/homePageComponents/tron/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/homePageComponents/eos/BurnButton.js","components/homePageComponents/eos/TransferButton.js","components/homePageComponents/tron/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/SaveEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","db_services/loginUser.js","eth_services/unlockAccount.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","exchange_services/dexeos.js","components/swapPageComponents/SwapFormDialog.js","components/swapPageComponents/SwapBalances.js","components/swapPageComponents/SwapAccounts.js","components/SwapPage.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","EOS_NETWORK","EOS_RPC_URL","rpc","CONTRACT_CODE","CURRENCY_PRECISION","transactionOptions","eosjs__WEBPACK_IMPORTED_MODULE_0__","blockchain","protocol","host","port","chainId","JsonRpc","blocksBehind","expireSeconds","broadcast","TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","SWAP","NETWORKS","globalActions","number","global","web3","web3_network","page","username","password","network","eos_client","telos_client","tronWeb","ETH","EOS","TELOS","accountsActions","account","eth_accounts","eos_accounts","telos_accounts","eosActions","eos","client","user_name","scatter_state","telosActions","telos","balance_tlosd","tronActions","tron","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","goToSwapPage","this","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","_ref","asyncToGenerator","regenerator_default","mark","_callee","dataToSign","from","signer_wallet","privateKey","sig","wrap","_context","prev","next","abrupt","sign","signature","Promise","resolve","reject","personal","err","stop","_x","_x2","_x3","_x4","apply","recoverMessageSigner","message","user","recover","sent","EOS_NETWORK_MAINNET","EOS_RPC_URL_MAINNET","rpcMainnet","TELOS_NETWORK","TELOS_RPC_URL","rpcTelos","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginWeb3","handleClick_LoginMenu_Ethereum","handleClick_LoginMenu_Tron","ready","defaultAddress","setTronAddress","alert","handleClick_LoginMenu_Eos","NETWORK","RPC","identity","logout","login","find","x","Api","beta3","setEOS","setEosNetwork","setEosName","handleClick_LoginMenu_Telos","_callee2","_context2","setTELOS","setTelosNetwork","setTelosName","handleClick_LoginMenu_Eos_Mainnet","_callee3","_context3","loginMetaMask","_callee4","messageToSign","signer","_context4","signing_in","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","setScatterState","Header","user_address_tron","short_name","short_name_tron","base58","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginWeb3","NUMBER","flexGrow","HttpProvider","TronWeb","providers","NODE_URL","fullNode","solidityNode","getDefaultTronWeb","commonConfig","server_url","infura_public_key","getDefaultWeb3","WEB_3_NODE","default_web3","default_network","config","Web3","WebsocketProvider","net","getId","Networks","_checkScatterConnection","scatter","ScatterJS","plugins","ScatterEOS","_checkTronConnection","default_tronweb","setTronWeb","_checkEthereumConnection","_network","setWeb3","setWeb3Network","ethereum","enable","log","currentProvider","componentDidMount","intervalId","setInterval","timer","_callee5","_context5","componentWillUnmount","clearInterval","handleChange","current","parseFloat","setNetwork","Error","Paper_default","paper","elevation","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","native","age","inputProps","tronweb","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","margin","minWidth","getNetworkNameById","networkId","networkName","Accounts","eth_address","tron_address","eos_name","telos_name","user_short","user_short_tron","href","rel","EtherscanLogo","style","height","width","alt","src","MINTER_ENDPOINT","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","data","minter_balance","post","concatPendingMints","t1","helpers_EtherscanLogo","newMint","BloksLogo","transaction_id","helpers_BloksLogo","TronLogo","Math","pow","user_hex","transaction_hash","helpers_TronLogo","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","updateEosBalance","mainnet","result","_args","get_table_rows","code","scope","table","rows","split","updateTelosBalance","ABI","ADDRESS","networks","fromHex","contract","at","updateTronBalance","decimal","converted","CarbonLogo","Balances","_updateUserBalance","setEthBalance","_updateEosBalance","oldBalance","newBalance","eos_balance_cusd","setEosBalance","_updateTelosBalance","telos_balance_cusd","setTelosBalance","_updateTronBalance","_ref4","balance_cusd_tron","setTronBalance","_callee6","_context6","hex","helpers_CarbonLogo","SignMessageSnackbar","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","TextField_default","textField","helpers_SignMessageSnackbar","newTransfer","to_base58","BigInt","send","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","resultWithConfig","eos_api","transact","actions","authorization","actor","permission","quantity","toFixed","memo","burn","HomePage","homePageComponents_Networks","homePageComponents_Accounts","homePageComponents_MintButton","eos_MintButton","tron_MintButton","telos_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","eos_TransferButton","tron_TransferButton","homePageComponents_BurnButton","eos_BurnButton","tron_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","encrypted_json","db_post_response","new_wallets_key","new_wallet","accountName","JSON","stringify","parse","wallet_key","SaveEthAccountDialog","saveAccount","new_account_index","identityToAssociateWithAccount","new_account","address_from_encrypted_json","saved_wallet","saving","createEncryptedWallet","open_new_account_dialog","account_index","Save_default","section","textAlign","EthAccounts","handleClick_AddEthAccount","handleClose_AddEthAccount","accountsComponents_SaveEthAccountDialog","accountsComponents_NewEthAccountDialog","EosAccounts","handleClick_AddEosAccount","addEosAccount","USERS_ENDPOINT","saveUser","new_user_id","new_password","loginUser","params","db_get_response","user_id","user_password","user_wallets","chainAccounts","wallets","callback_decrypt","unlockWallet","encryptedJsonFile","fromEncryptedJson","IdentityDialog","confirm_password","new_user","new_username","clearEthAccounts","loading_server","setUsername","setPassword","signInOldAccount","existing_user","existing_username","existing_password","existing_wallets","encrypted_wallet","decrypted_wallet","keys","unlockAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","logoutIdentity","closeIdentityDialog","signed_in","wallet_name","Tooltip_default","title","placement","button","AccountCircle_default","Clear_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","getInsideMarket","_ref2","symbol","minSize","depth","url","orderbook","bids","asks","b","o","inside_bid","inside_ask","inside_bid_size","inside_ask_size","_i3","bid","price","volume","_i4","ask","_price2","_volume2","_args2","API_HTTP_URL","push","per_eos","remain_amount","bid_size","ask_size","getInvertedInsideMarket","_ref3","insideMarket","_args3","_x6","_x7","_x8","roundUp","num","precision","postBid","api","total","_x9","_x10","_x11","_x12","_x13","_x14","postAsk","_ref5","NUM_DECIMALS","_x15","_x16","_x17","_x18","_x19","_x20","orderTypes","SwapFormDialog","orderType","orderAmountOfCusd","checkScatterConnection","updateInsideMarket","getInsideMarketDexeos","quoteCurrency","baseCurrency","postOrders","direction","contractCode","eosjsApi","eosjsAccount","eos_network","orderAmount","then","insideBid","insideAsk","handleSubmitEos","_callee7","_context7","disableSubmit","container","noValidate","autoComplete","select","SelectProps","MenuProps","menu","helperText","option","InputLabelProps","shrink","InputProps","readOnly","display","flexWrap","SwapPage","handleOpenEosForm","openEosForm","handleCloseEosForm","swapPageComponents_SwapFormDialog","SwapAccounts","SwapBalances","App","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","swap","components_SwapPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.108d838b.chunk.js","sourcesContent":["import { JsonRpc } from 'eosjs';\n\nexport const EOS_NETWORK = { /** Change this to connect to Mainnet/Jungle */\n  blockchain: \"eos\",\n  protocol: \"https\",\n  host: \"nodes.get-scatter.com\",\n  port: 443,\n  chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\" \n};\nexport const EOS_RPC_URL = EOS_NETWORK.protocol+\"://\"+EOS_NETWORK.host+\":\"+EOS_NETWORK.port\n\nexport const rpc = new JsonRpc(EOS_RPC_URL);\n\n// Contract details for CUSD\nexport const CONTRACT_CODE = \"stablecarbon\"\nexport const CURRENCY_PRECISION = 2\n\n// EosJS transaction options\nexport const transactionOptions = {\n  blocksBehind: 3,\n  expireSeconds: 30,\n  broadcast:true\n}","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_TRONWEB: \"SET_TRONWEB\",\n  SET_WEB3: \"SET_WEB3\",\n  SET_WEB3_NETWORK: \"SET_WEB3_NETWORK\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_NETWORK: \"SET_NETWORK\",\n  SET_EOS: \"SET_EOS\",\n  SET_TELOS: \"SET_TELOS\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2,\n  SWAP: 3,\n}\n\n// Network options for home page\nexport const NETWORKS = {\n  ETH: 0,\n  EOS: 1,\n  TRON: 2,\n  TELOS: 3\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setWeb3Network: number => ({\n    type: TYPES.SET_WEB3_NETWORK,\n    number\n  }), \n  // Set Web3 network ID number\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n\n  setPassword: string => ({\n    type: TYPES.SET_PASSWORD,\n    string\n  }), \n  // Set User identity key: 'password'\n\n\n  setEOS: object => ({\n    type:TYPES.SET_EOS,\n    object\n  }),\n  // Set EOS object\n\n  setTELOS: object => ({\n    type:TYPES.SET_TELOS,\n    object\n  }),\n  // Set EOS object\n\n  setTronWeb: object => ({\n    type: TYPES.SET_TRONWEB,\n    object\n  }), \n  // Set TronWeb object\n\n  setNetwork: number => ({\n    type: TYPES.SET_NETWORK,\n    number\n  }),\n  // Set cryptonetwork\n\n};\n\n","import { TYPES, PAGES, NETWORKS } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    web3_network: '',\n    page: PAGES.MAIN,\n    username: '',\n    password: '',\n    network: NETWORKS.ETH,\n    eos_client: '',\n    telos_client: '',\n    tronWeb: '',\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_WEB3_NETWORK:\n      return Object.assign({}, state, {\n        web3_network: action.number\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    case TYPES.SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.string\n      });\n    case TYPES.SET_NETWORK:\n      return Object.assign({}, state, {\n        network: action.number\n      });\n    case TYPES.SET_EOS:\n      return Object.assign({}, state, {\n        eos_client:action.object\n      });\n    case TYPES.SET_TELOS:\n      return Object.assign({}, state, {\n        eos_client:action.object\n      });\n    case TYPES.SET_TRONWEB:\n      return Object.assign({}, state, {\n        tronWeb: action.object\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n  ADD_TELOS_ACCOUNT: \"ADD_TELOS_ACCOUNT\",\n  CLEAR_ETH_ACCOUNTS: \"CLEAR_ETH_ACCOUNTS\"\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1,\n  TELOS: 3\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  clearEthAccounts: object => ({\n    type: TYPES.CLEAR_ETH_ACCOUNTS\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n  addTelosAccount: object => ({\n    type: TYPES.ADD_TELOS_ACCOUNT,\n    object\n  }),\n  // add an TELOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n      telos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.CLEAR_ETH_ACCOUNTS:\n      return Object.assign({}, state, {\n        eth_accounts: []\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    case TYPES.ADD_TELOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.telos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_EOS_CLIENT: \"SET_EOS_CLIENT\",\n  SET_EOS_NAME: \"SET_EOS_NAME\",\n  CONCAT_PENDING_MINTS_EOS: \"CONCAT_PENDING_MINTS_EOS\",\n  CONCAT_PENDING_BURNS_EOS: \"CONCAT_PENDING_BURNS_EOS\",\n  CONCAT_PENDING_TRANSFERS_EOS: \"CONCAT_PENDING_TRANSFERS_EOS\",\n  SET_EOS_BALANCE: \"SET_EOS_BALANCE\",\n  SET_SCATTER_STATE: \"SET_SCATTER_STATE\",\n  SET_EOS_NETWORK: \"SET_EOS_NETWORK\",\n};\n\nexport const eosActions = {\n  setEosClient: object => ({\n  \ttype: TYPES.SET_EOS_CLIENT,\n  \tobject\n  }),\n  setEosName: string => ({\n    type: TYPES.SET_EOS_NAME,\n    string\n  }),\n  setEosNetwork: string => ({\n    type: TYPES.SET_EOS_NETWORK,\n    string\n  }),\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS_EOS,\n    object\n  }),\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS_EOS,\n    object\n  }),\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS_EOS,\n    object\n  }),\n  setEosBalance: string => ({\n    type: TYPES.SET_EOS_BALANCE,\n    string\n  }),\n  setScatterState: string => ({\n    type:TYPES.SET_SCATTER_STATE,\n    string\n  }),\n\n\n};\n\n","import { TYPES } from \"./eosActions\";\n\n// Initial state\nexport const initialState = {\n  eos: {\n    client: '',\n    user_name: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_burns: [],\n    pending_transfers: [],\n    scatter_state:'',\n    network:'',\n  }\n};\n\n// User Eos account state\nexport const eos = (state = initialState.eos, action) => {\n  switch (action.type) {\n    case TYPES.SET_EOS_CLIENT:\n      return Object.assign({}, state, {\n        client: action.object\n      });\n    case TYPES.SET_EOS_NAME:\n      return Object.assign({}, state, {\n        user_name: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS_EOS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS_EOS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS_EOS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.SET_EOS_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.SET_SCATTER_STATE:\n      return Object.assign({}, state, {\n        scatter_state: action.string\n      });\n    case TYPES.SET_EOS_NETWORK:\n      return Object.assign({}, state, {\n        network: action.string\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n    SET_TELOS_CLIENT: \"SET_TELOS_CLIENT\",\n    SET_TELOS_NAME: \"SET_TELOS_NAME\",\n    CONCAT_PENDING_MINTS_TELOS: \"CONCAT_PENDING_MINTS_TELOS\",\n    CONCAT_PENDING_BURNS_TELOS: \"CONCAT_PENDING_BURNS_TELOS\",\n    CONCAT_PENDING_TRANSFERS_TELOS: \"CONCAT_PENDING_TRANSFERS_TELOS\",\n    SET_TELOS_BALANCE: \"SET_TELOS_BALANCE\",\n    SET_SCATTER_STATE: \"SET_SCATTER_STATE\",\n    SET_TELOS_NETWORK: \"SET_TELOS_NETWORK\",\n  };\n  \n  export const telosActions = {\n    setTelosClient: object => ({\n        type: TYPES.SET_TELOS_CLIENT,\n        object\n    }),\n    setTelosName: string => ({\n      type: TYPES.SET_TELOS_NAME,\n      string\n    }),\n    setTelosNetwork: string => ({\n      type: TYPES.SET_TELOS_NETWORK,\n      string\n    }),\n    concatPendingMints: object => ({\n      type: TYPES.CONCAT_PENDING_MINTS_TELOS,\n      object\n    }),\n    concatPendingBurns: object => ({\n      type: TYPES.CONCAT_PENDING_BURNS_TELOS,\n      object\n    }),\n    concatPendingTransfers: object => ({\n      type: TYPES.CONCAT_PENDING_TRANSFERS_TELOS,\n      object\n    }),\n    setTelosBalance: string => ({\n      type: TYPES.SET_TELOS_BALANCE,\n      string\n    }),\n    setScatterState: string => ({\n      type:TYPES.SET_SCATTER_STATE,\n      string\n    }),\n  \n  \n  };\n  \n  ","import { TYPES } from \"./telosActions\";\n\n// Initial state\nexport const initialState = {\n  telos: {\n    client: '',\n    user_name: '',\n    balance_tlosd: '',\n    pending_mints: [],\n    pending_burns: [],\n    pending_transfers: [],\n    scatter_state:'',\n    network:'',\n  }\n};\n\n// User Telos account state\nexport const telos = (state = initialState.telos, action) => {\n  switch (action.type) {\n    case TYPES.SET_TELOS_CLIENT:\n      return Object.assign({}, state, {\n        client: action.object\n      });\n    case TYPES.SET_TELOS_NAME:\n      return Object.assign({}, state, {\n        user_name: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS_TELOS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS_TELOS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS_TELOS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.SET_TELOS_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.SET_SCATTER_STATE:\n      return Object.assign({}, state, {\n        scatter_state: action.string\n      });\n    case TYPES.SET_TELOS_NETWORK:\n      return Object.assign({}, state, {\n        network: action.string\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n    SET_TRON_ADDRESS: \"SET_TRON_ADDRESS\",\n    SET_TRON_BALANCE: \"SET_TRON_BALANCE\",\n    CONCAT_PENDING_MINTS_TRON: \"CONCAT_PENDING_MINTS_TRON\",\n    CONCAT_PENDING_BURNS_TRON: \"CONCAT_PENDING_BURNS_TRON\",\n    CONCAT_PENDING_TRANSFERS_TRON: \"CONCAT_PENDING_TRANSFERS_TRON\",\n  };\n  \n  export const tronActions = {\n    setTronAddress: string => ({\n      type: TYPES.SET_TRON_ADDRESS,\n      string\n    }),\n    // Set user tron account\n\n    setTronBalance: string => ({\n      type: TYPES.SET_TRON_BALANCE,\n      string\n    }),\n    // Set cusd-tron balance\n\n    concatPendingMints: object => ({\n      type: TYPES.CONCAT_PENDING_MINTS_TRON,\n      object\n    }),\n    // Add a pending mint transaction to user profile\n\n    concatPendingBurns: object => ({\n      type: TYPES.CONCAT_PENDING_BURNS_TRON,\n      object\n    }),\n    // Add a pending burn transaction to user profile\n    \n    concatPendingTransfers: object => ({\n      type: TYPES.CONCAT_PENDING_TRANSFERS_TRON,\n      object\n    }),\n    // Add a pending transfer transaction to user profile\n\n};\n  \n  ","import { TYPES } from \"./tronActions\";\n\n// Initial state\nexport const initialState = {\n  tron: {\n    user_address: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_burns: [],\n    pending_transfers: [],\n  },\n};\n\n// User Tron account state\nexport const tron = (state = initialState.tron, action) => {\n  switch (action.type) {\n    case TYPES.SET_TRON_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_TRON_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS_TRON:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS_TRON:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS_TRON:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\nimport { eos } from \"./eosReducers\";\nimport { telos } from \"./telosReducers\";\nimport { tron } from \"./tronReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eos,\n  telos,\n  tron,\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n\n  goToSwapPage = () => {\n      this.props.setPage(PAGES.SWAP)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                  <MenuItem onClick={this.goToSwapPage}><b>beta</b> Swap</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { JsonRpc } from 'eosjs';\n\nexport const EOS_NETWORK = {\n  blockchain: \"eos\",\n  protocol: \"https\",\n  host: \"jungle2.cryptolions.io\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" \n};\n\nexport const EOS_NETWORK_MAINNET = {\n  blockchain: \"eos\",\n  protocol: \"https\",\n  host: \"nodes.get-scatter.com\",\n  port: 443,\n  chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\" \n};\n\nexport const EOS_RPC_URL = EOS_NETWORK.protocol+\"://\"+EOS_NETWORK.host+\":\"+EOS_NETWORK.port\nexport const EOS_RPC_URL_MAINNET = EOS_NETWORK_MAINNET.protocol+\"://\"+EOS_NETWORK_MAINNET.host+\":\"+EOS_NETWORK_MAINNET.port\n\nexport const rpc = new JsonRpc(EOS_RPC_URL);\nexport const rpcMainnet = new JsonRpc(EOS_RPC_URL_MAINNET);\n\n// Contract details for CUSD\nexport const CONTRACT_CODE = \"carbon12nick\"\nexport const CONTRACT_CODE_MAINNET = \"stablecarbon\"\nexport const CURRENCY_PRECISION = 2\n\n// EosJS transaction options\nexport const transactionOptions = {\n  blocksBehind: 3,\n  expireSeconds: 30,\n  broadcast:true\n}","import { JsonRpc } from 'eosjs';\n\nexport const TELOS_NETWORK = {\n  blockchain: \"eos\",\n  protocol: \"https\",\n  host: \"testnet.eos.miami\",\n  port: 443,\n  chainId: \"e17615decaecd202a365f4c029f206eee98511979de8a5756317e2469f2289e3\" \n};\n\nexport const TELOS_RPC_URL = TELOS_NETWORK.protocol+\"://\"+TELOS_NETWORK.host+\":\"+TELOS_NETWORK.port\n\nexport const rpcTelos = new JsonRpc(TELOS_RPC_URL);\n\n// Contract details for TLOSD\nexport const CONTRACT_CODE = \"stablecarbon\"\nexport const CONTRACT_CODE_MAINNET = \"stablecarbon\"\nexport const CURRENCY_PRECISION = 4\n\n// EosJS transaction options\nexport const transactionOptions = {\n  blocksBehind: 3,\n  expireSeconds: 30,\n  broadcast:true\n}","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// EOS services\nimport {Api} from 'eosjs';\nimport { rpc, EOS_NETWORK, rpcMainnet, EOS_NETWORK_MAINNET } from '../../eos_services/getDefaultEosJS'\nimport { rpcTelos, TELOS_NETWORK } from '../../telos_services/getDefaultEosJS'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { telosActions } from \"../../store/telosActions\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\nimport { tronActions } from \"../../store/tronActions\"\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  network: state.global.network,\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n  tronWeb: state.global.tronWeb,\n  scatter_state: state.eos.scatter_state,\n  page: state.global.page\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet)),\n  setTronAddress: address => dispatch(tronActions.setTronAddress(address)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setEosName: name => dispatch(eosActions.setEosName(name)),\n  setEosNetwork: network => dispatch(eosActions.setEosNetwork(network)),\n  setTELOS:  client => dispatch(globalActions.setTELOS(client)),\n  setTelosName: name => dispatch(telosActions.setTelosName(name)),\n  setTelosNetwork: network => dispatch(telosActions.setTelosNetwork(network)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string)),\n});\n\nclass LoginWeb3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD FOR ETHEREUM */\n  handleClick_LoginMenu_Ethereum = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** DETECT IF USER IS LOGGED IN TO TRON */\n  handleClick_LoginMenu_Tron = () => {\n    if (!this.props.tronWeb) {\n      alert('Switch to a Tron dApp browser to use this faucet for the time being, apologies!')\n      return\n    }\n    let loggedIn = this.props.tronWeb.ready\n    if (loggedIn && this.props.tronWeb.defaultAddress) {\n      this.props.setTronAddress(this.props.tronWeb.defaultAddress)\n    } else {\n      alert('You are connected to Tron, but we cannot detect your address! Please login to your Tron wallet to use this faucet-- if you are on desktop then try installing the TronLink browser extension')\n    }\n  }\n\n  /** Request user's EOS identity through Scatter */\n  // TODO: Need to find a way to refactor these methods, but need to be able to pass in a param to an onClick handler in the DOM\n  handleClick_LoginMenu_Eos = async () => {\n    if (!this.props.scatter_state) { return; }\n    if (this.props.scatter_state.identity) {\n      // User already signed in, forget their previous identity\n      await this.props.scatter_state.logout()\n    } \n    \n    // Now, request user to connect their identity for app usage\n    // After a user has approved giving you permission to access their Identity you no longer have to call getIdentity() if the user refreshes the page. \n    // Instead you can check if an Identity exists on the scatter object itself. \n    // This also means that you don't have to save the Identity within your shared \n    // services along-side your Scatter reference, \n    // you can simply save your Scatter reference and \n    // pull the identity from within it.\n    //\n    // n.b. this is the reason why we call logout() on each button press to allow user to switch their identity\n    const NETWORK = EOS_NETWORK\n    let identity = await this.props.scatter_state.login({ accounts: [NETWORK]})\n    if (!identity) { return console.error(`No Scatter identity found on this network`)}\n\n    const account = this.props.scatter_state.identity.accounts.find(x => x.blockchain === 'eos');\n    if (account && account.name) {\n      // Create eosJS client object\n      const RPC = rpc\n      const eos = this.props.scatter_state.eos(EOS_NETWORK, Api, {rpc:RPC, beta3:true})\n      this.props.setEOS(eos)\n      const NETWORK_NAME = \"jungle\"\n      this.props.setEosNetwork(NETWORK_NAME)\n      // Save user's account name (full account details are in account)\n      this.props.setEosName(account.name)\n    }\n  }\n   /** Request user's EOS identity through Scatter */\n  // TODO: Need to find a way to refactor these methods, but need to be able to pass in a param to an onClick handler in the DOM\n  handleClick_LoginMenu_Telos = async () => {\n    if (!this.props.scatter_state) { return; }\n    if (this.props.scatter_state.identity) {\n      // User already signed in, forget their previous identity\n      await this.props.scatter_state.logout()\n    } \n    \n    // Now, request user to connect their identity for app usage\n    // After a user has approved giving you permission to access their Identity you no longer have to call getIdentity() if the user refreshes the page. \n    // Instead you can check if an Identity exists on the scatter object itself. \n    // This also means that you don't have to save the Identity within your shared \n    // services along-side your Scatter reference, \n    // you can simply save your Scatter reference and \n    // pull the identity from within it.\n    //\n    // n.b. this is the reason why we call logout() on each button press to allow user to switch their identity\n    const NETWORK = TELOS_NETWORK\n    let identity = await this.props.scatter_state.login({ accounts: [NETWORK]})\n    if (!identity) { return console.error(`No Scatter identity found on this network`)}\n\n    const account = this.props.scatter_state.identity.accounts.find(x => x.blockchain === 'eos');\n    if (account && account.name) {\n      // Create eosJS client object\n      const RPC = rpcTelos\n      const telos = this.props.scatter_state.eos(EOS_NETWORK, Api, {rpc:RPC, beta3:true})\n      this.props.setTELOS(telos)\n      const NETWORK_NAME = \"testnet\"\n      this.props.setTelosNetwork(NETWORK_NAME)\n      // Save user's account name (full account details are in account)\n      this.props.setTelosName(account.name)\n    }\n  }\n  handleClick_LoginMenu_Eos_Mainnet = async () => {\n    if (!this.props.scatter_state) { return; }\n    if (this.props.scatter_state.identity) {\n      // User already signed in, forget their previous identity\n      await this.props.scatter_state.logout()\n    } \n    \n    // Now, request user to connect their identity for app usage\n    // After a user has approved giving you permission to access their Identity you no longer have to call getIdentity() if the user refreshes the page. \n    // Instead you can check if an Identity exists on the scatter object itself. \n    // This also means that you don't have to save the Identity within your shared \n    // services along-side your Scatter reference, \n    // you can simply save your Scatter reference and \n    // pull the identity from within it.\n    //\n    // n.b. this is the reason why we call logout() on each button press to allow user to switch their identity\n    const NETWORK = EOS_NETWORK_MAINNET\n    let identity = await this.props.scatter_state.login({ accounts: [NETWORK]})\n    if (!identity) { return console.error(`No Scatter identity found on this network`)}\n\n    const account = this.props.scatter_state.identity.accounts.find(x => x.blockchain === 'eos');\n    if (account && account.name) {\n      // Create eosJS client object\n      const RPC = rpcMainnet\n      const eos = this.props.scatter_state.eos(EOS_NETWORK_MAINNET, Api, {rpc:RPC, beta3:true})\n      this.props.setEOS(eos)\n      const NETWORK_NAME = \"mainnet\"\n      this.props.setEosNetwork(NETWORK_NAME)\n      // Save user's account name (full account details are in account)\n      this.props.setEosName(account.name)\n    }\n  }\n  \n  /** \n      Ethereum Login Handlers:\n      There are multiple choices for connecting to the Ethereum network\n   */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptographically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    const { network, page } = this.props;\n    return (\n        <div>\n          { page === PAGES.MAIN && network === 0 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu_Ethereum}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            :\"\"}\n          { page === PAGES.MAIN && network === 1 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu_Eos}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to EOS\n            </Button>\n            :\"\"}\n          { page === PAGES.MAIN && network === 3 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu_Telos}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to TELOS\n            </Button>\n            :\"\"}\n          { page === PAGES.MAIN && network === 2 ? \n            <Button\n                onClick={this.handleClick_LoginMenu_Tron}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Tron\n            </Button>\n            :\"\"}\n          { page === PAGES.SWAP ? (\n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu_Eos_Mainnet}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to EOS Mainnet\n            </Button>\n          ):\"\"}\n            {/* Ethereum Login options */}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        </div>\n    );\n  }\n}\n\nLoginWeb3.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginWeb3)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginWeb3 from './headerComponents/LoginWeb3'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address,\n  network: state.global.network,\n  user_address_tron: state.tron.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address,\n      network,\n      user_address_tron\n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n    const short_name_tron = user_address_tron ? user_address_tron.base58.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                CUSD Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {network === 0 && short_name}\n                {network === 2 && short_name_tron}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginWeb3 />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","/**\n * Return tronweb object (akin to \"Truffle\" for Ethereum) connected to the Shasta testnet\n */\nimport TronWeb from 'tronweb';\nconst HttpProvider = TronWeb.providers.HttpProvider;\nconst NODE_URL = 'https://api.shasta.trongrid.io'\nconst fullNode = new HttpProvider(NODE_URL);\nconst solidityNode = new HttpProvider(NODE_URL);\nconst eventServer = NODE_URL;\n\nconst getDefaultTronWeb = async () => {\n    const tronWeb = new TronWeb(\n        fullNode,\n        solidityNode,\n        eventServer\n    );\n    return tronWeb\n}\n\n\nexport default getDefaultTronWeb","const commonConfig = {\n    // server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import Web3 from 'web3';\n\n// Config \nimport config from '../config'\n\nconst getDefaultWeb3 = async () => {\n    var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n    let default_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n    let default_network = await default_web3.eth.net.getId()\n    return {\n        web3: default_web3, \n        network: default_network\n    }\n}\n\nexport default getDefaultWeb3","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, NETWORKS } from \"../../store/globalActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { telosActions } from \"../../store/telosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n//scatter\nimport ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport getDefaultTronWeb from '../../tron_services/getDefaultTronWeb'\nimport Web3 from 'web3';\nimport getDefaultWeb3 from '../../eth_services/getDefaultWeb3'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_client: state.global.eos_client,\n  eos_client: state.global.telos_client,\n  network: state.global.network,\n  scatter_state: state.eos.scatter_state,\n  tronWeb: state.global.tronWeb,\n  web3: state.global.web3,\n});\n\nconst mapDispatch = dispatch => ({\n  setNetwork: NETWORK => dispatch(globalActions.setNetwork(NETWORK)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setTELOS:  client => dispatch(globalActions.setTELOS(client)),\n  setEosName: name => dispatch(eosActions.setEosName(name)),\n  setTelosName: name => dispatch(telosActions.setTelosName(name)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string)),\n  setTronAddress: string => dispatch(tronActions.setTronAddress(string)),\n  setTronWeb: tronweb => dispatch(globalActions.setTronWeb(tronweb)),\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n  setWeb3Network: number => dispatch(globalActions.setWeb3Network(number)),\n});\n\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** Connect App to Scatter for EOS api connection */\n  _checkScatterConnection = async () => {\n    if (this.props.scatter_state) {\n      // Scatter already set\n      return\n    } else {\n      // tell ScatterJS which plugins you are using.\n      ScatterJS.plugins( new ScatterEOS())\n\n      // attempt to connect to Scatter app\n      const APP_NAME=\"CUSD_OASIS\"\n      let connected = await ScatterJS.scatter.connect(APP_NAME)\n      if (connected) {\n            let scatter = ScatterJS.scatter\n            this.props.setScatterState(scatter)\n            // replace window's default ScatterJS object\n            window.ScatterJS = null\n      }\n      return\n    }\n  }\n\n  /** SET UP TronWeb */\n  _checkTronConnection = async () => {\n    // Set tronweb to injected tronweb if possible\n    let installed = window.tronWeb\n    // Detected Tron dapp browser! \n    if (installed) {\n        this.props.setTronWeb(window.tronWeb)\n    } \n    else {\n      // Create default tronweb in case browser cannot inject tronweb\n      let default_tronweb = await getDefaultTronWeb()\n      this.props.setTronWeb(default_tronweb)\n\n      // Non-dapp browsers, inject tronweb on behalf of user\n      window.tronWeb = this.props.tronWeb\n    }\n  }\n\n    /** SET UP Web3 */\n  _checkEthereumConnection = async () => {\n\n    // Set default web3 in case browser cannot inject web3\n    let default_web3 = await getDefaultWeb3()\n    this.props.setWeb3(default_web3.web3)\n    this.props.setWeb3Network(default_web3.network)\n\n    // Now, replace web3 with injected web3 if possible\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        \n        try {\n            // Request account access if needed\n            await window.ethereum.enable()\n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n            let network = await window.web3.eth.net.getId()\n            this.props.setWeb3Network(network)\n        } catch (error) {\n            // User denied account access... setting fallback web3 object to access web3 \n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n        let network = await window.web3.eth.net.getId()\n        this.props.setWeb3Network(network)\n    }\n    // Non-dapp browsers...\n    else {\n    }\n  }  \n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    if (this.props.network === 1 || this.props.network === 3){      \n      await this._checkScatterConnection()\n    } else if (this.props.network === 2) {\n      await this._checkTronConnection()\n    } else if (this.props.network === 0) {\n      await this._checkEthereumConnection()\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n\n\n\n  handleChange = name => event => {\n    var current = parseFloat(event.target.value);\n\n    // @dev network must be of type Number\n    this.props.setNetwork(current);\n    if (current === 1){\n      //EOS\n    } \n    else if (current === 0) {\n      //ETH\n    }\n    else if (current === 2) {\n    //TRON  \n    }\n    else if (current === 3) {\n      //TELOS  \n    }\n    else {\n      throw (Error(`Invalid network provided: ${current}`))\n    } \n\n  };\n\n  render() {\n\n    const { \n      classes\n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"network-selector\">Network</InputLabel>\n                <Select\n                    native\n                    value={this.state.age}\n                    onChange={this.handleChange('network')}\n                    inputProps={{\n                    name: 'network',\n                    id: 'network-native-simple',\n                    }}\n                >\n                    <option value={NETWORKS.ETH}>ETH (Ropsten)</option>\n                    <option value={NETWORKS.EOS}>EOS (Jungle)</option>\n                    <option value={NETWORKS.TRON}>TRON (Shasta)</option>\n                    <option value={NETWORKS.TELOS}>TELOS (Testnet)</option>\n                </Select>\n            </FormControl>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nNetworks.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Networks)));\n","const getNetworkNameById = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case 1:\n      networkName = \"Mainnet\";\n      break;\n    case 2:\n      networkName = \"Morden\";\n      break;\n    case 3:\n      networkName = \"Ropsten\";\n      break;\n    case 4:\n      networkName = \"Rinkeby\";\n      break;\n    case 42:\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport default getNetworkNameById\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Web3 Services\nimport getNetworkNameById from '../../eth_services/getNetworkNameById'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3_network: state.global.web3_network,\n  network: state.global.network,\n  eos_name: state.eos.user_name,\n  telos_name: state.telos.user_name,\n  tron_address: state.tron.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n      tron_address,\n      web3_network,\n      network,\n      eos_name,\n      telos_name,\n    } = this.props;\n\n    // ETH\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n    const networkName = (web3_network ? getNetworkNameById(web3_network) : \"\")\n\n    // Tron\n    const user_short_tron = tron_address ? tron_address.base58.substring(0, 8) : \"\"\n    \n    return (\n        <Paper className={classes.paper} elevation={3}>\n            {network === 0 && (\n            <Typography> \n                You are connected to Ethereum ({networkName ? networkName : \"\"}) as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>)}\n            {network === 1 && (\n            <Typography> \n                You are connected to EOS Jungle testnet as: {eos_name ? (<a\n                    href={\"https://jungle.bloks.io/account/\" + eos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {eos_name}\n                    </a>) : (\"\")}\n              </Typography>)}\n            {network === 2 && (\n            <Typography> \n                You are connected to Tron (Shasta) as: \n                    {tron_address ? (<a\n                    href={\"https://shasta.tronscan.org/#/address/\" + tron_address.base58}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short_tron}...\n                    </a>) : (\"\")}\n            </Typography>\n            )}\n            {network === 3 && (\n            <Typography> \n                You are connected to TELOS testnet as: {telos_name ? (<a\n                    href={\"https://telos-test.bloks.io/account/\" + telos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {telos_name}\n                    </a>) : (\"\")}\n              </Typography>\n            )}\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n);\n\nexport default EtherscanLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n  \n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.data.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../../store/eosActions\";\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/eos/faucet\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  pending_mints: state.eos.pending_mints,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(eosActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.50\",\n      minting: false,\n    };\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    \n    let to = this.props.eos_name\n    if (!to) { return; } // user not signed in\n\t  let post_data = {\n\t    user: to,\n      amount: this.state.amount_to_mint.toString(),\n    }\n    console.log(post_data)\n\n\t  this.setState({\n\t    minting: true\n\t  })\n\n\t  try {\n\t    // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n\t    //let minter_status = await axios.get(\n\t    //  MINTER_ENDPOINT\n\t    //)\n\t    \n\n\t    // API CALL\n\t    let response\n\t    try {\n\t      response = await axios.post(\n\t        MINTER_ENDPOINT,\n\t        post_data\n\t      );\n\t    } catch (err) {\n\t      this.setState({\n\t        minting: false\n\t      })\n\t      console.error(\"please be patient in between transactions\") ;\n\t      return ; \n\t    }\n\n\t    let pending_hash = response.data.transaction_id\n\n\t    this.props.concatPendingMints(pending_hash)\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  } catch (err) {\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  }\n\n\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      pending_mints,\n      eos_name\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eos_name ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { telosActions } from \"../../../store/telosActions\";\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/telos/faucet\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  pending_mints: state.telos.pending_mints,\n  telos_client: state.global.telos_client,\n  telos_name: state.telos.user_name,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(telosActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.5000\",\n      minting: false,\n    };\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    \n    let to = this.props.telos_name\n    if (!to) { return; } // user not signed in\n\t  let post_data = {\n\t    user: to,\n      amount: this.state.amount_to_mint.toString(),\n    }\n    console.log(post_data)\n\n\t  this.setState({\n\t    minting: true\n\t  })\n\n\t  try {\n\t    // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n\t    //let minter_status = await axios.get(\n\t    //  MINTER_ENDPOINT\n\t    //)\n\t    \n\n\t    // API CALL\n\t    let response\n\t    try {\n\t      response = await axios.post(\n\t        MINTER_ENDPOINT,\n\t        post_data\n\t      );\n\t    } catch (err) {\n\t      this.setState({\n\t        minting: false\n\t      })\n\t      console.error(\"please be patient in between transactions\") ;\n\t      return ; \n\t    }\n\n\t    let pending_hash = response.data.transaction_id\n\n\t    this.props.concatPendingMints(pending_hash)\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  } catch (err) {\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  }\n\n\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      pending_mints,\n      telos_name\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !telos_name ?\n              (\n                <Button disabled>Please sign in to get TLOSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} TLOSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://telos-test.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst TronLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://s3.amazonaws.com/carbon12/tron.svg\"\n  />\n);\n\nexport default TronLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/tron/mint\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_mints: state.tron.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(tronActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: 10,\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n      // Tron contracts only deal with integers, need to be able to convert decimals\n      let amountToMint = (parseFloat(this.state.amount_to_mint)*(10**18)).toString()\n\n      let to = this.props.tron_address.base58\n      if (!tronWeb.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // Second, request minter to mint new CUSD via POST\n        let post_data = {\n          user_hex: to,\n          amount: amountToMint,\n        }\n        let response = await axios.post(\n          MINTER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.transaction_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        console.error('Minting failed, please try again in 5 minutes')\n        this.setState({\n          minting: false\n        })\n      }\n    } else {\n      alert('no tronweb detected')\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !tron_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n  try {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import {rpc, rpcMainnet, CONTRACT_CODE_MAINNET, CONTRACT_CODE} from './getDefaultEosJS'\n// Refresh user CUSD balance\nexport const updateEosBalance = async (user_name, mainnet=false) => {\n  try {\n        let result\n        if (mainnet) {\n            result = await rpcMainnet.get_table_rows({\n                \"code\": CONTRACT_CODE_MAINNET,\n                \"scope\": user_name,\n                \"table\": \"accounts\" // accounts table stores balances\n            })\n        } else {\n            result = await rpc.get_table_rows({\n                \"code\": CONTRACT_CODE,\n                \"scope\": user_name,\n                \"table\": \"accounts\" // accounts table stores balances\n            })\n        }\n        let i;\n        for (i = 0; i < result.rows.length; i++){\n        \tif (result.rows[i].balance.split(\" \")[1] === \"CUSD\"){\n        \t\treturn result.rows[i].balance.split(\" \")[0]\n        \t}\n        }\n    } catch (err) {\n        console.log(err)\n        throw(err)\n\n    }\n}","import {rpcTelos, CONTRACT_CODE} from './getDefaultEosJS'\n// Refresh user CUSD balance\nexport const updateTelosBalance = async (user_name, mainnet=false) => {\n  try {\n        let result = await rpcTelos.get_table_rows({\n            \"code\": CONTRACT_CODE,\n            \"scope\": user_name,\n            \"table\": \"accounts\" // accounts table stores balances\n        })\n        let i;\n        for (i = 0; i < result.rows.length; i++){\n        \tif (result.rows[i].balance.split(\" \")[1] === \"TLOSD\"){\n        \t\treturn result.rows[i].balance.split(\" \")[0]\n        \t}\n        }\n    } catch (err) {\n        console.log(err)\n        throw(err)\n\n    }\n}","// Fetch active CUSD instance\nexport const getCUSD = async (tronWeb) => {\n    if (!tronWeb) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/tron/CarbonDollar.json\");\n\n    // Contract Ropsten Addresses\n    const SHASTA_NETWORK_ID = 2\n    const ADDRESS = ABI.networks[SHASTA_NETWORK_ID].address\n\n    try {\n        let contract_base58_address = tronWeb.address.fromHex(ADDRESS) \n        let cusd = await tronWeb.contract().at('TQF3guBM1T8JWgLX9M6B3xTBJEoew1bfBp')\n        return cusd\n    } catch (err) {\n        throw err\n    }\n}\n\nexport default getCUSD","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\n// @dev user should be in Hex encoding NOT base58\nexport const updateTronBalance = async (tronWeb, user) => {\n  try {\n    if (tronWeb && user) {\n      let cusd = await getCUSD(tronWeb)\n      if (tronWeb.isAddress(user)) {\n        let balance = await cusd.balanceOf(user).call()\n        let decimal = parseFloat(balance.toString())\n        let converted = decimal/(10**18)\n        return converted\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import React from 'react';\n\nconst CarbonLogo = () => (\n  <img\n    style={{ height: \"15px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/carbon-logo.svg\"\n  />\n\n);\n\nexport default CarbonLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { telosActions } from \"../../store/telosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n// EOS Services\nimport { updateEosBalance } from '../../eos_services/updateEosBalance'\n// TELOS Services\nimport { updateTelosBalance } from '../../telos_services/updateTelosBalance'\n// Tron Services\nimport { updateTronBalance } from '../../tron_services/updateTronBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  eos_balance_cusd: state.eos.balance_cusd,\n  telos_client: state.global.telos_client,\n  telos_name: state.telos.user_name,\n  telos_balance_cusd: state.telos.balance_cusd,\n  network: state.global.network,\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  balance_cusd_tron: state.tron.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance)),\n  setEosBalance: balance => dispatch(eosActions.setEosBalance(balance)),\n  setTelosBalance: balance => dispatch(telosActions.setTelosBalance(balance)),\n  setTronBalance: balance => dispatch(tronActions.setTronBalance(balance)),\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n\n  // On Ethereum:\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd) {\n          this.props.setEthBalance(short_balance)\n        }\n    } else {\n      this.props.setEthBalance(\"N/A\")\n    }\n  }\n\n  // On EOS:\n  _updateEosBalance = async () => {\n      if (this.props.eos_name) { \n        let oldBalance = this.props.eos_balance_cusd\n        let newBalance = await updateEosBalance(this.props.eos_name)\n        if (oldBalance !== newBalance){\n         this.props.setEosBalance(newBalance)\n       }\n      }\n  }\n\n  // On Telos:\n  _updateTelosBalance = async () => {\n    if (this.props.telos_name) { \n      let oldBalance = this.props.telos_balance_cusd\n      let newBalance = await updateTelosBalance(this.props.telos_name)\n      if (oldBalance !== newBalance){\n       this.props.setTelosBalance(newBalance)\n     }\n    }\n}\n\n  // On Tron:\n  _updateTronBalance = async (user) => {\n    let tronWeb = this.props.tronWeb\n    if (!tronWeb || !user) return;\n    let short_balance = await updateTronBalance(tronWeb, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd_tron) {\n          this.props.setTronBalance(short_balance)\n        }\n    } else {\n      this.props.setTronBalance(\"N/A\")\n    }\n\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 5000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n\n    if (this.props.network === 0){\n      // Update user balance\n      await this._updateUserBalance(this.props.eth_address)\n    } else if (this.props.network === 1) {\n      await this._updateEosBalance()\n    } else if (this.props.network === 2) {\n      // @dev Tron Smart contracts deal with Hex addresses, like Solidity\n      await this._updateTronBalance(this.props.tron_address.hex)\n    } else if (this.props.network === 3) {\n      await this._updateTelosBalance()\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd,\n      eos_balance_cusd,\n      telos_balance_cusd,\n      balance_cusd_tron,\n      network\n    } = this.props;\n\n    let balance\n    if (network === 0) {\n      balance = balance_cusd\n    } else if (network === 1) {\n      balance = eos_balance_cusd\n    } else if (network === 2) {\n      balance = balance_cusd_tron\n    } else if (network === 3) {\n      balance = telos_balance_cusd\n    }\n\n    return (\n          \n          <Paper className={classes.paper} elevation={3}>\n          {/*h*/}\n            <Typography> \n              Your <CarbonLogo /> balance: {balance}\n            </Typography>\n          \n          </Paper>\n          \n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'\nimport PropTypes from 'prop-types';\nclass SignMessageSnackbar extends Component {\n    render () {\n        const {\n            open\n        } = this.props\n\n        return (\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                ContentProps={{\n                'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Please sign the transaction</span>}\n            />\n        );\n    }\n}\n\nSignMessageSnackbar.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SignMessageSnackbar;\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eth_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                  href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Etherscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Tron services\nimport getCUSD from '../../../tron_services/getCUSD';\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_transfers: state.tron.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(tronActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n        let amountToTransfer = (window.BigInt(parseFloat(this.state.amount_to_transfer)*(10**18))).toString()\n        let to = this.state.transfer_to\n        let to_base58 = tronWeb.address.fromHex(to)\n        let verified = tronWeb.isAddress(to) && tronWeb.isAddress(to_base58)\n\n        if (!verified) {\n            console.log('invalid user address: (to) ', to)\n            return\n        }\n        this.setState({\n            transferring: true\n        })\n        try {\n            let cusd = await getCUSD(tronWeb)\n            let pending_hash = await cusd.transfer(to, amountToTransfer).send()\n            this.props.concatPendingTransfers(pending_hash.toString()) // @dev always .toString() tron smart contract return values\n            this.setState({\n                transferring: false\n            })\n        } catch (err) {\n            this.setState({\n                transferring: false\n            })\n        }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !tron_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                  href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Tronscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../../store/eosActions\";\n\n// EOS services\nimport { CONTRACT_CODE, CURRENCY_PRECISION, transactionOptions } from '../../../eos_services/getDefaultEosJS'\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_api: state.global.eos_client,\n  pending_burns: state.eos.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(eosActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let amount = parseFloat(this.state.amount_to_burn)\n    if (this.props.eos_api) {\n      this.setState({\n          burning: true\n      })\n      try {\n        let resultWithConfig = await this.props.eos_api.transact({\n          actions: [\n            {\n              account: CONTRACT_CODE,\n              name: \"burn\",\n              authorization: [\n                {\n                  actor: this.props.eos_name,\n                  permission: \"active\"\n                }\n              ],\n              data: {\n                from: this.props.eos_name,\n                quantity: amount.toFixed(CURRENCY_PRECISION) + \" CUSD\",\n                memo: \"Carbon Jungle Faucet: burning \" + amount.toFixed(CURRENCY_PRECISION) + \" CUSD\"\n              }\n            }\n          ]\n        }, transactionOptions)\n        this.props.concatPendingBurns(resultWithConfig.transaction_id)\n        this.setState({\n            burning: false\n        })\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eos_name,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eos_name ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../../store/eosActions\";\n\n// Eos services\nimport { CONTRACT_CODE, CURRENCY_PRECISION, transactionOptions } from '../../../eos_services/getDefaultEosJS'\n\n// Custom Components\nimport BloksLogo from '../../helpers/BloksLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_api: state.global.eos_client,\n  pending_transfers: state.eos.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(eosActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let amount = parseFloat(this.state.amount_to_transfer)\n    if (this.props.eos_api) {\n      this.setState({\n          transferring: true\n      })\n      try {\n        let resultWithConfig = await this.props.eos_api.transact({\n          actions: [\n            {\n              account: CONTRACT_CODE,\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: this.props.eos_name,\n                  permission: \"active\"\n                }\n              ],\n              data: {\n                from: this.props.eos_name,\n                to: this.state.transfer_to,\n                quantity: amount.toFixed(CURRENCY_PRECISION) + \" CUSD\",\n                memo: \"Carbon Jungle Faucet: transferring \" + amount.toFixed(CURRENCY_PRECISION) + \" CUSD\"\n              }\n            }\n          ]\n        }, transactionOptions)\n        this.props.concatPendingTransfers(resultWithConfig.transaction_id)\n        this.setState({\n            transferring: false\n        })\n      } catch (err) {\n        this.setState({\n            transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eos_name,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eos_name ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Bloks.io\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Tron services\nimport getCUSD from '../../../tron_services/getCUSD';\n\n// Custom Components\nimport TronLogo from '../../helpers/TronLogo'\nimport SignMessageSnackbar from '../../helpers/SignMessageSnackbar'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_burns: state.tron.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(tronActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n        let amountToBurn = (window.BigInt(parseFloat(this.state.amount_to_burn)*(10**18))).toString()\n        this.setState({\n            burning: true\n        })\n        try {\n            let cusd = await getCUSD(tronWeb)\n            let pending_hash = await cusd.burn(amountToBurn).send()\n            this.props.concatPendingBurns(pending_hash.toString()) // @dev always .toString() tron smart contract return values\n            this.setState({\n                burning: false\n            })\n        } catch (err) {\n            console.error(err)\n            this.setState({\n                burning: false\n            })\n        }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !tron_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <TronLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\n// Core Wallet Components\nimport Networks from './homePageComponents/Networks'\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport EosMint from './homePageComponents/eos/MintButton'\nimport TelosMint from './homePageComponents/telos/MintButton'\nimport TronMint from './homePageComponents/tron/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport TronTransfer from './homePageComponents/tron/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\nimport EosBurn from './homePageComponents/eos/BurnButton'\nimport EosTransfer from './homePageComponents/eos/TransferButton'\nimport TronBurn from './homePageComponents/tron/BurnButton'\n\n\nconst styles = theme => ({\n});\n\n// Redux mappings\nconst mapState = state => ({\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n\n  render() {\n    const {\n      network \n    } = this.props;\n\n    return (\n\n          <div>\n            {/* NETWORK SELECTOR */}\n              <Networks />\n            {/* USER IDENTITY  */}\n              <Accounts /> \n            {/* MINT  */\n              network === 0 ?\n              <MintButton /> : \n              ( network === 1 ? <EosMint/> :\n                (network === 2 ? <TronMint /> : \n                  (network === 3 ? <TelosMint /> : \"\" )\n                )\n              )\n            }\n            {/* USER BALANCES  */\n              network === 0 ?\n              <Balances /> : <Balances />\n            }\n            {/* TRANSFER */\n              network === 0 ?\n              <TransferButton/> : \n              ( network === 1 ? <EosTransfer/> :\n                (network === 2 ? <TronTransfer /> : \"\" )\n              )\n            }\n            {/* BURN */\n              network === 0 ?\n              <BurnButton /> : \n              ( network === 1 ? <EosBurn/> :\n                (network === 2 ? <TronBurn /> : \"\" )\n              )\n            }\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(HomePage)));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (username, password, chainId, eth_address, encrypted_json) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password,\n            chainId: chainId.toString(),\n            accountName: eth_address,\n            wallet: JSON.stringify(encrypted_json)\n        }\n        console.log(post_data)\n\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created wallet\n        if (db_post_response.data) {\n            let new_wallets_key = db_post_response.data.key\n            let new_wallet = JSON.parse(db_post_response.data.value)\n            return {\n                wallet_key: new_wallets_key,\n                wallet: new_wallet\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', WALLETS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass SaveEthAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      saving: false\n    };\n  }\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.props.password\n    let chainId = NETWORKS.ETH \n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n\n        let saved_wallet = await saveAccountToUser(\n          identityToAssociateWithAccount, \n          password,\n          chainId,\n          address_from_encrypted_json,\n          encrypted_json\n        )\n\n        if (saved_wallet) {\n            // Successfully saved account\n            let wallet_key = saved_wallet.wallet_key\n\n            console.log('saved wallet to user (' + identityToAssociateWithAccount + '): ' + wallet_key)\n        } \n\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes,\n      account_index\n    } = this.props;\n    const {\n      saving\n    } = this.state\n\n    return (      \n        <Button\n          onClick={() => this.saveAccount(account_index)}\n        >\n          {saving ? \n          (<CircularProgress\n              variant=\"indeterminate\"\n              disableShrink\n              className={classes.facebook2}\n              size={24}\n              thickness={4}\n          />) : \n          (\n            <Save />\n          )}\n        </Button>         \n    )\n  }\n}\n\nSaveEthAccountDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  account_index: PropTypes.number.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(SaveEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\nimport SaveEthAccountDialog from './SaveEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {/* save ETH account to signed in user */}\n                    {username && (\n                      <SaveEthAccountDialog account_index={i}/>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (username, password) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password, \n        }\n\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created new user\n        if (db_post_response.data) {\n            let new_user_id = db_post_response.data.key\n            let new_password = db_post_response.data.value\n            return {\n                user: new_user_id,\n                password: new_password\n            }\n        } else {\n            // user already exists or error\n            console.log('user already exists or error')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveUser","// REST API server\nimport axios from 'axios'\nimport config from '../config'\n\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\n\nconst loginUser = async (username, password) => {\n    let params = {\n        user: username,\n        password: password, \n    }\n    try {\n        let db_get_response = await axios.get(\n            USERS_ENDPOINT,\n            { params }\n          );\n        \n        // if successfully signed in user\n        if (db_get_response.data) {\n            let user_id = db_get_response.data.key\n            let user_password = db_get_response.data.value.password\n            let user_wallets = db_get_response.data.value.chainAccounts\n            return {\n                user: user_id,\n                password: user_password,\n                wallets: user_wallets\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('invalid username password combo: ', params)\n        return false\n    }\n    \n}\n\nexport default loginUser","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    // let percentComplete = parseInt(progress * 100)\n    // if ( percentComplete%20 === 0 ) {\n    //     console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    // }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\nimport loginUser from '../../db_services/loginUser'\n\n// ETH Account Management helpers\nimport unlockAccount from '../../eth_services/unlockAccount'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\nimport { NETWORKS, accountsActions } from '../../store/accountsActions'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name)),\n    setPassword: password => dispatch(globalActions.setPassword(password)),\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n    clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            loading_server: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        let isValidAccount = Boolean(\n            username && \n            password &&\n            confirm_password &&\n            (password === confirm_password)\n        )\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Attempt to create new user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let new_user = await saveUser(username, password)\n            if (new_user) {\n                // Successfully created new user\n                let new_username = new_user.user\n                console.log('created a new user: ', new_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(username)\n                this.props.setPassword(password)\n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n\n\n        // Attempt to get existing user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let existing_user = await loginUser(username, password)\n            if (existing_user) {\n                // Successfully logged in new user\n                let existing_username = existing_user.user\n                let existing_password = existing_user.password\n\n                console.log('signed in existing user: ', existing_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(existing_username)\n                this.props.setPassword(existing_password)\n\n                // Set user accounts\n                let existing_wallets = existing_user.wallets\n                let eth_accounts = existing_wallets[NETWORKS.ETH]\n\n                if (eth_accounts.length > 0) {\n                    console.log(\"loading \" + eth_accounts.length + \" wallets\")\n                    for (var i = 0; i < eth_accounts.length; i++) {\n                        let wallet = eth_accounts[i]\n                        let address = Object.keys(wallet)[0]\n                        console.log('address: ', address)\n                        let encrypted_wallet = JSON.parse(wallet[address])\n                        let decrypted_wallet = await unlockAccount(encrypted_wallet, password)\n                        this.props.addEthAccount(decrypted_wallet)\n                    }\n                }\n                \n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not sign in user')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            loading_server,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {loading_server ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {loading_server ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from \"../store/globalActions\";\nimport { accountsActions } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n  setUsername: name => dispatch(globalActions.setUsername(name)),\n  setPassword: password => dispatch(globalActions.setPassword(password)),\n  clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  // Clear identity\n  logoutIdentity = () => {\n    this.props.setUsername('')\n    this.props.setPassword('')\n    this.props.clearEthAccounts()\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username,\n      password\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const signed_in = (username && password)\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              {/* Create a new account */}\n              <Typography variant=\"subtitle1\" className={classes.button}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AccountCircle />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            {/* Sign out of account */}\n            {signed_in && (<Typography variant=\"subtitle1\" className={classes.button}> \n                <Button \n                  color=\"primary\" \n                  aria-label=\"Logout\"\n                  onClick={this.logoutIdentity}\n                >\n                  <Clear />\n                  Logout\n                </Button>\n            </Typography>)}\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support the following cryptonetwork testnets: Ethereum (Ropsten), EOS (Jungle), and Tron (Shasta).\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Testnet Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet on a testnet. CUSD was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Ethereum MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","const axios = require('axios')\n\n// Dexeos API services\nconst API_HTTP_URL = \"https://api.dexeos.io/v2/\"\n\n/**\n* getOrderbook: return order book for token\n* @param code String: token contract name (e.g. \"betdicetoken\")\n* @param symbol String: token symbol (e.g. DICE)\n* @param depth Number: count of orders to count towards inside market\n*/\nexport const getOrderbook = async (code, symbol, depth=5) => {\n    const token_query = code+\"::\"+symbol\n\n    // GET: /orderbook/<code>::<symbol>\n    const url = API_HTTP_URL+\"orderbook/\"+token_query\n\n    try {\n        let response = await axios.get(url)\n\n        let orderbook = response.data\n        let bids = []\n        let asks = []\n        // Sort bids, highest bids are first\n        for (var b = 0; b < orderbook.length; b++) {\n            if (orderbook[b].type === 'buy' && bids.length < depth) {\n                bids.push(orderbook[b])\n            }\n        }\n        // Sort asks, lowest asks are last\n        for (var o = orderbook.length-1; o >= 0; o--) {\n            if (orderbook[o].type === 'sell' && asks.length < depth) {\n                asks.push(orderbook[o]) \n            } \n        }\n        \n        let inside_bid = 0\n        let inside_ask = 0\n        let inside_bid_size = 0\n        let inside_ask_size = 0\n\n        for (let bid of bids) {\n            let price = parseFloat(bid.per_eos)\n            let volume = parseFloat(bid.amount)\n            inside_bid += price * volume\n            inside_bid_size += volume\n        }\n\n        for (let ask of asks) {\n            let price = parseFloat(ask.per_eos)\n            let volume = parseFloat(ask.amount) \n            inside_ask += price * volume\n            inside_ask_size += volume\n        }\n\n        return {\n            bid: inside_bid/inside_bid_size,\n            bid_size: inside_bid_size,\n            ask: inside_ask/inside_ask_size,\n            ask_size: inside_ask_size\n        }\n    } catch(err) {\n        console.log(err)\n    }\n\n}\n\n// Return inside market of minimum size\nexport const getInsideMarket = async (code, symbol, minSize, depth=10) => {\n    const token_query = code+\"::\"+symbol\n\n    // GET: /orderbook/<code>::<symbol>\n    const url = API_HTTP_URL+\"orderbook/\"+token_query\n\n    try {\n        let response = await axios.get(url)\n\n        let orderbook = response.data\n        let bids = []\n        let asks = []\n\n        // @dev: every DEX might return bids/asks in different sorted orders, \n        // be sure to sort them before processing their data!\n\n        // Dexeos returns highest bids first\n        for (var b = 0; b < orderbook.length; b++) {\n            if (orderbook[b].type === 'buy' && bids.length < depth) {\n                bids.push(orderbook[b])\n            }\n        }\n        // Dexeos return lowest asks last\n        for (var o = orderbook.length-1; o >= 0; o--) {\n            if (orderbook[o].type === 'sell' && asks.length < depth) {\n                asks.push(orderbook[o]) \n            } \n        }\n        \n        let inside_bid = null\n        let inside_ask = null\n        let inside_bid_size = null\n        let inside_ask_size = null\n\n        for (let bid of bids) {\n            let price = parseFloat(bid.per_eos)\n            let volume = parseFloat(bid.remain_amount)\n            if (volume >= minSize) {\n                inside_bid = price\n                inside_bid_size = volume\n                break;\n            }\n        }\n\n        for (let ask of asks) {\n            let price = parseFloat(ask.per_eos)\n            let volume = parseFloat(ask.remain_amount) \n            if (volume >= minSize) {\n                inside_ask = price\n                inside_ask_size = volume\n                break;\n            }\n        }\n\n        return {\n            bid: inside_bid,\n            bid_size: inside_bid_size,\n            ask: inside_ask,\n            ask_size: inside_ask_size\n        }\n    } catch(err) {\n        console.log(err)\n    }\n\n}\n\n// @dev on Dexeos, the default market for CUSD is CUSD-EOS, where EOS is non-intuitively the quote currency\n// i.e. \"CUSD is quoted in terms of EOS\"\n// So, this function returns CUSD-EOS markets in terms of EOS-CUSD\nexport const getInvertedInsideMarket = async (code, symbol, minSize, depth=10) => {\n    let insideMarket = await getInsideMarket(code, symbol, minSize, depth)\n    return {\n        bid: 1/insideMarket.ask,\n        bid_size: insideMarket.ask_size,\n        ask: 1/insideMarket.bid,\n        ask_size: insideMarket.bid_size\n    }\n}\n\nconst { transactionOptions, CURRENCY_PRECISION, CONTRACT_CODE } = require('../eos_services/getDefaultEosJSMainnet')\n\n// Helper methods\nconst roundUp = (num, precision) => {\n    precision = Math.pow(10, precision)\n    return Math.ceil(num * precision) / precision\n}\n\nexport const postBid = async function (api, user, quantity, price, symbol, code) {\n    if (\n        !symbol ||\n        !code ||\n        !api || \n        !user ||\n        !quantity ||\n        !price ||\n        quantity <= 0 ||\n        price <= 0) \n    {\n        console.error(`invalid params to dexeos::postBid`)\n        return\n    }\n    \n    let total\n    try {\n        // DEXEOS max precision = 8\n        price = await roundUp(price, 8)\n        const memo = {\n            \"type\":\"buy\",\n            \"quantity\": quantity,\n            \"price\": price, \n            \"code\": code, \n            \"symbol\": symbol\n          };\n\n          let transferSymbol = \"EOS\"\n          total = Math.ceil(parseFloat((price * quantity * 10000).toFixed(12))) / 10000\n          total = total.toFixed(4)\n          total += \" \" + transferSymbol; // quantity*price is total EOS we transfer for buys\n\n          const resultWithConfig = await api.transact({\n            actions: [{\n                account: \"eosio.token\",\n                name: \"transfer\",\n                authorization: [{\n                    actor: user,\n                    permission: 'active',\n                }],\n                data: {\n                    from: user,\n                    to: \"dexeoswallet\",\n                    quantity: total,\n                    memo: JSON.stringify(memo)\n                }\n            }]\n        }, transactionOptions)\n        alert(`...successfully posted CUSD-EOS bid! [quantity: ${total}, price: ${price}, tx_id: ${resultWithConfig.transaction_id}]`)\n        return resultWithConfig\n    } catch (err) {\n        alert(`...posting bid failed [quantity: ${total}, price: ${price}]`)\n    }\n}\n\nexport const postAsk = async function (api, user, quantity, price, symbol, code) {\n    // Check params\n    if (\n        !symbol ||\n        !code ||\n        !api || \n        !user ||\n        !quantity ||\n        !price ||\n        quantity <= 0 ||\n        price <= 0) \n    {\n        console.error(`invalid params to dexeos::postAsk`)\n        return\n    }\n    try {\n        price = await roundUp(price, 8)\n        const memo = {\n            \"type\":\"sell\",\n            \"quantity\": quantity,\n            \"price\": price, \n            \"code\": code, \n            \"symbol\": symbol\n          };\n\n\n          const NUM_DECIMALS = CURRENCY_PRECISION\n\n          quantity = (parseFloat(quantity)).toFixed(NUM_DECIMALS)\n          quantity += \" \" + symbol; \n          \n          const resultWithConfig = await api.transact({\n            actions: [{\n                account: code, \n                name: \"transfer\",\n                authorization: [{\n                    actor: user,\n                    permission: 'active',\n                }],\n                data: {\n                    from: user,\n                    to: \"dexeoswallet\",\n                    quantity: quantity,\n                    memo: JSON.stringify(memo)\n                }\n            }]\n        }, transactionOptions)\n        alert(`...successfully posted CUSD-EOS offer! [quantity: ${quantity}, price: ${price}, tx_id: ${resultWithConfig.transaction_id}]`)\n        return resultWithConfig\n    } catch (err) {\n        alert(`...posting offer failed [quantity: ${quantity}, price: ${price}]`)\n    }\n}\n","// React\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// @Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { globalActions } from \"../../store/globalActions\"\n\n// Exchange services, used to query market prices\nimport { getInvertedInsideMarket, postAsk, postBid } from '../../exchange_services/dexeos'\n\n// Scatter client for EOS\nimport ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\n\n// Eos services\nimport { Api } from 'eosjs';\nimport { rpcMainnet, EOS_NETWORK_MAINNET } from '../../eos_services/getDefaultEosJS'\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_api: state.global.eos_client,\n  scatter_state: state.eos.scatter_state,\n  eos_network: state.eos.network\n});\n\nconst mapDispatch = dispatch => ({\n    setScatterState: string => dispatch(eosActions.setScatterState(string)),\n    setEOS:  client => dispatch(globalActions.setEOS(client)),\n    setEosName: name => dispatch(eosActions.setEosName(name)),\n});\n\nconst orderTypes = [\n  {\n    value: 'Buy',\n    label: 'Buy',\n  },\n  {\n    value: 'Sell',\n    label: 'Sell',\n  },\n];\n\nclass SwapFormDialog extends Component {\n  state = {\n    orderType: \"\",\n    insideMarket: \"\",\n    orderAmountOfCusd: 0\n  };\n\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    await this.checkScatterConnection()\n    await this.updateInsideMarket(this.state.orderAmountOfCusd, this.state.orderType)\n  }\n  \n  /** Save Scatter object for the first time if possible */\n  checkScatterConnection = async () => {\n    if (this.props.scatter_state) {\n      // Scatter already set\n      return\n    } else {\n      // tell ScatterJS which plugins you are using.\n      ScatterJS.plugins( new ScatterEOS())\n\n      // attempt to connect to Scatter app\n      const APP_NAME=\"CUSD_OASIS\"\n      let connected = await ScatterJS.scatter.connect(APP_NAME)\n      if (connected) {\n            let scatter = ScatterJS.scatter\n            this.props.setScatterState(scatter)\n            // replace window's default ScatterJS object\n            window.ScatterJS = null\n      }\n      return\n    }\n  }\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n\n  // Return best [bid, ask] of minSize\n  getInsideMarketDexeos = async (minSize) => {\n    let quoteCurrency = this.props.quoteCurrency\n    let baseCurrency = this.props.baseCurrency\n\n    if (baseCurrency === \"EOS\") {\n      let contractCode = \"stablecarbon\"\n      let insideMarket = await getInvertedInsideMarket(contractCode, quoteCurrency, minSize)\n      return insideMarket\n    }\n  }\n\n  postOrders = async (price, amount, direction) => {\n    let quoteCurrency = this.props.quoteCurrency\n    let baseCurrency = this.props.baseCurrency\n    let contractCode = \"stablecarbon\"\n    let eosjsApi = this.props.eos_api\n    let eosjsAccount = this.props.eos_name\n    let eos_network = this.props.eos_network\n\n    if (eos_network !== \"mainnet\") {\n      alert('Please connect an EOS mainnet account to continue')\n      return;\n    }\n\n    if (direction === \"Buy\") {\n      // If customer wants to Buy EOS then they need to Sell CUSD quoted in EOS, \n      // So they will post an Ask to Dexeos API\n      await postAsk(eosjsApi, eosjsAccount, amount, price, quoteCurrency, contractCode)\n    } else if (direction === \"Sell\") {\n      // If customer wants to Sell EOS then they need to Buy CUSD quoted in EOS, \n      // So they will post a Buy to Dexeos API\n      await postBid(eosjsApi, eosjsAccount, amount, price, quoteCurrency, contractCode)\n    } \n  }\n\n  updateInsideMarket = async (orderAmount, orderType) => {\n    this.getInsideMarketDexeos(orderAmount).then(insideMarket => {\n        let insideBid = insideMarket.bid\n        let insideAsk = insideMarket.ask\n\n        // If customer wants to buy, then need to find a willing seller\n        // If customer wants to sell, needs to sell to a willing buyer\n        if (orderType === \"Buy\") {\n          if (insideAsk) {\n            this.setState({\n              insideMarket: insideAsk\n            })\n          } else {\n            this.setState({\n              insideMarket: \"order size too large\"\n            })\n          }\n        } else if (orderType === \"Sell\") {\n          if (insideBid) {\n            this.setState({\n              insideMarket: insideBid\n            })\n          } else {\n            this.setState({\n              insideMarket: \"order size too large\"\n            })\n          }\n        }\n      })\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleSubmitEos = async () => {\n    await this.postOrders(1/this.state.insideMarket, this.state.orderAmountOfCusd, this.state.orderType)\n    this.props.handleClose()\n  }\n\n  render() {\n    const { \n      classes,\n      open,\n      handleClose,\n      baseCurrency,\n      quoteCurrency\n    } = this.props;\n\n    const disableSubmit = (\n      ((this.state.orderType !== \"Buy\") && (this.state.orderType !== \"Sell\")) ||\n      isNaN(this.state.insideMarket) ||\n      !this.state.insideMarket ||\n      this.state.insideMarket <= 0,\n      isNaN(this.state.orderAmountOfCusd) ||\n      !this.state.orderAmountOfCusd ||\n      this.state.orderAmountOfCusd <= 0 \n    )\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{baseCurrency}/{quoteCurrency} Order details</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Almost there! To complete your order, just fill out a few details. \n              Ensure that you have the order type correct. \n              If you select \"Buy\", then you are buying EOS by selling CUSD.\n              If you select \"Sell\", then you are selling EOS by buying CUSD.\n            </DialogContentText>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"outlined-select-direction\"\n                select\n                label=\"Order Type\"\n                className={classes.textField}\n                value={this.state.orderType}\n                onChange={this.handleChange('orderType')}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu,\n                  },\n                }}\n                helperText={`Buy or Sell ${baseCurrency} with ${quoteCurrency}`}\n                margin=\"normal\"\n                variant=\"outlined\"\n              >\n                {orderTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"outlined-number-orderAmountOfCusd\"\n                label=\"Order amount of CUSD\"\n                value={this.state.orderAmountOfCusd}\n                onChange={this.handleChange('orderAmountOfCusd')}\n                type=\"number\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-read-only-input-bestPrice\"\n                label=\"Market price\"\n                value={this.state.insideMarket}\n                className={classes.textField}\n                margin=\"normal\"\n                type=\"number\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                variant=\"outlined\"\n              />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button disabled={disableSubmit} onClick={this.handleSubmitEos} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n// @dev: Notes on \"base\" and \"quote\" currencies:\n// In forex, currency pairs are written as XXX/YYY or simply XXXYYY. \n// Here, XXX is the base currency and YYY is the quote currency\nSwapFormDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  quoteCurrency: PropTypes.string.isRequired,\n  baseCurrency: PropTypes.string.isRequired\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(SwapFormDialog)));\n\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../store/eosActions\";\n\n// EOS Services\nimport { updateEosBalance } from '../../eos_services/updateEosBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_balance_cusd: state.eos.balance_cusd,\n});\n\nconst mapDispatch = dispatch => ({\n  setEosBalance: balance => dispatch(eosActions.setEosBalance(balance)),\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n\n  // On EOS:\n  _updateEosBalance = async () => {\n      if (this.props.eos_name) { \n        let oldBalance = this.props.eos_balance_cusd\n        let newBalance = await updateEosBalance(this.props.eos_name, true ) // set second param as true to use mainnet contracts\n        if (oldBalance !== newBalance){\n         this.props.setEosBalance(newBalance)\n       }\n      }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 5000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    await this._updateEosBalance()\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      eos_balance_cusd,\n      network\n    } = this.props;\n\n    let balance = eos_balance_cusd\n\n    return (\n          \n          <Paper className={classes.paper} elevation={3}>\n          {/*h*/}\n            <Typography> \n              Your <CarbonLogo /> balance: {balance}\n            </Typography>\n          \n          </Paper>\n          \n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_name: state.eos.user_name,\n  eos_network: state.eos.network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_name,\n      eos_network\n    } = this.props;\n    \n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                Swapping CUSD into another cryptocurrency on the EOS network is very simple (Ethereum and Tron cryptocurrencies will be available soon!)\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>1</b>: Sign in to an EOS Mainnet account. EOS DEX's currently only support the mainnet\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>2</b>: Select a currency that is currently listed against CUSD to swap into\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>3</b>: Fill out a short form and sign an EOS transaction through your wallet. Done!\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are connected to EOS as: {eos_name ? (<a\n                    href={\"https://jungle.bloks.io/account/\" + eos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {eos_name}\n                    </a>) : (\"\")} <b> Please ensure that this is your mainnet account!</b>\n              </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are currently using the EOS network: <b>{eos_network}</b>\n            </Typography>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Swap components\nimport SwapFormDialog from './swapPageComponents/SwapFormDialog'\nimport SwapBalances from './swapPageComponents/SwapBalances'\nimport SwapAccounts from './swapPageComponents/SwapAccounts'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass SwapPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openEosForm: false\n    };\n  }\n\n  handleOpenEosForm = () => {\n    this.setState({ openEosForm: true });\n  }\n  handleCloseEosForm = () => {\n    this.setState({ openEosForm: false });\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>(Beta)</b> Swap CUSD with any cryptocurrency on our supported networks.\n            </Typography>\n            <Button variant=\"contained\" className={classes.section} onClick={this.handleOpenEosForm}> \n                EOS\n            </Button>\n        </Paper>\n        <SwapFormDialog \n          open={this.state.openEosForm} \n          handleClose={this.handleCloseEosForm}\n          baseCurrency=\"EOS\"\n          quoteCurrency=\"CUSD\"\n        />\n        <SwapAccounts />\n        <SwapBalances />\n        </div>\n    )\n  }\n}\n\nSwapPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(SwapPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { PAGES } from \"./store/globalActions\";\n\n/** @dev How to add new pages to the Faucet */\n// 1) Add the page mapping in store/globalActions.PAGES\n// 2) Add the page option logic and component to the header menu in components/headerComponents/HeaderMenu\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\nimport SwapPage from './components/SwapPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  swap: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.SWAP ? (\n          <div className={classes.swap}>\n            <SwapPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}