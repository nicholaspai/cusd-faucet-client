{"version":3,"sources":["../node_modules/encoding/lib sync","store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/eosActions.js","store/eosReducers.js","store/store.js","withRoot.js","config.js","eth_services/getDefaultWeb3.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","eos_services/setupEos.js","components/homePageComponents/Networks.js","eth_services/getNetworkNameById.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","components/homePageComponents/MintButton.js","components/helpers/BloksLogo.js","components/homePageComponents/EosMint.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","eos_services/updateEosBalance.js","components/helpers/CarbonLogo.js","components/homePageComponents/Balances.js","components/helpers/SignMessageSnackbar.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/SaveEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","db_services/loginUser.js","eth_services/unlockAccount.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","NETWORKS","globalActions","number","global","web3","web3_network","page","username","password","network","eos_client","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","eosActions","eos","client","user_name","eos_mints","scatter_state","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","commonConfig","server_url","infura_public_key","getDefaultWeb3","_ref","asyncToGenerator","regenerator_default","mark","_callee","WEB_3_NODE","default_web3","default_network","wrap","_context","prev","next","config","Web3","providers","WebsocketProvider","net","getId","sent","abrupt","stop","this","apply","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","dataToSign","from","signer_wallet","privateKey","sig","sign","signature","Promise","reject","personal","err","_x","_x2","_x3","_x4","recoverMessageSigner","message","user","recover","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginEthereum","handleClick_LoginMenu","loginMetaMask","messageToSign","signer","signing_in","alert","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","Header","short_name","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginEthereum","NUMBER","flexGrow","endpoint","blockchain","protocol","host","port","chainId","rpc","JsonRpc","fetch","EOSIOClient","contractAccount","ScatterJS","plugins","ScatterEOS","scatter","then","connected","log","noScatter","requiredFields","getIdentity","identity","find","x","Api","Networks","_checkScatterConnection","setScatterState","clearInterval","intervalId","componentDidMount","_callee2","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","handleChange","current","setNetwork","eosio","setEOS","Paper_default","paper","elevation","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","native","age","inputProps","NETWORK","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","margin","minWidth","getNetworkNameById","networkId","networkName","Accounts","eth_address","eos_name","user_short","href","rel","EtherscanLogo","style","height","width","alt","src","MINTER_ENDPOINT","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","data","minter_balance","post","concatPendingMints","t1","helpers_EtherscanLogo","newMint","BloksLogo","getName","setEosName","transaction_id","concatEosMints","helpers_BloksLogo","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","updateEosBalance","result","get_table_rows","scope","table","rows","split","CarbonLogo","Balances","_updateUserBalance","setEthBalance","_updateEosBalance","_ref2","oldBalance","newBalance","eos_balance_cusd","setEosBalance","_callee4","_context4","helpers_CarbonLogo","SignMessageSnackbar","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","TextField_default","textField","helpers_SignMessageSnackbar","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","HomePage","homePageComponents_Networks","homePageComponents_Accounts","homePageComponents_MintButton","EosMint","homePageComponents_Balances","homePageComponents_TransferButton","homePageComponents_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","encrypted_json","db_post_response","new_wallets_key","new_wallet","accountName","JSON","stringify","parse","wallet_key","SaveEthAccountDialog","saveAccount","new_account_index","identityToAssociateWithAccount","new_account","address_from_encrypted_json","saved_wallet","saving","createEncryptedWallet","open_new_account_dialog","account_index","Save_default","section","textAlign","EthAccounts","handleClick_AddEthAccount","handleClose_AddEthAccount","accountsComponents_SaveEthAccountDialog","accountsComponents_NewEthAccountDialog","EosAccounts","handleClick_AddEosAccount","addEosAccount","USERS_ENDPOINT","saveUser","new_user_id","new_password","loginUser","params","db_get_response","user_id","user_password","user_wallets","chainAccounts","wallets","callback_decrypt","unlockWallet","encryptedJsonFile","fromEncryptedJson","IdentityDialog","confirm_password","new_user","new_username","clearEthAccounts","loading_server","setUsername","setPassword","signInOldAccount","existing_user","existing_username","existing_password","existing_wallets","encrypted_wallet","decrypted_wallet","unlockAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","logoutIdentity","closeIdentityDialog","signed_in","wallet_name","Tooltip_default","title","placement","button","AccountCircle_default","Clear_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","setGlobalWeb3","_network","setWeb3","setWeb3Network","ethereum","enable","currentProvider","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.defbb749.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 681;","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_WEB3: \"SET_WEB3\",\n  SET_WEB3_NETWORK: \"SET_WEB3_NETWORK\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_NETWORK: \"SET_NETWORK\",\n  SET_EOS: \"SET_EOS\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\n// Network options for home page\nexport const NETWORKS = {\n  ETH: 0,\n  EOS: 1\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setWeb3Network: number => ({\n    type: TYPES.SET_WEB3_NETWORK,\n    number\n  }), \n  // Set Web3 network ID number\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n\n  setPassword: string => ({\n    type: TYPES.SET_PASSWORD,\n    string\n  }), \n  // Set User identity key: 'password'\n\n\n  setEOS: object => ({\n    type:TYPES.SET_EOS,\n    object\n  }),\n  setNetwork: number => ({\n    type: TYPES.SET_NETWORK,\n    number\n  }),\n  // Set cryptonetwork\n\n};\n\n","import { TYPES, PAGES, NETWORKS } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    web3_network: '',\n    page: PAGES.MAIN,\n    username: '',\n    password: '',\n    network: NETWORKS.ETH,\n    eos_client: '',\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_WEB3_NETWORK:\n      return Object.assign({}, state, {\n        web3_network: action.number\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    case TYPES.SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.string\n      });\n    case TYPES.SET_NETWORK:\n      return Object.assign({}, state, {\n        network: action.number\n      });\n    case TYPES.SET_EOS:\n      return Object.assign({}, state, {\n        eos_client:action.object\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n  CLEAR_ETH_ACCOUNTS: \"CLEAR_ETH_ACCOUNTS\"\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  clearEthAccounts: object => ({\n    type: TYPES.CLEAR_ETH_ACCOUNTS\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.CLEAR_ETH_ACCOUNTS:\n      return Object.assign({}, state, {\n        eth_accounts: []\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_EOS_CLIENT: \"SET_EOS_CLIENT\",\n  SET_EOS_NAME: \"SET_EOS_NAME\",\n  CONCAT_EOS_MINTS: \"CONCAT_EOS_MINTS\",\n  SET_EOS_BALANCE: \"SET_EOS_BALANCE\",\n  SET_SCATTER_STATE: \"SET_SCATTER_STATE\"\n};\n\nexport const eosActions = {\n  setEosClient: object => ({\n  \ttype: TYPES.SET_EOS_CLIENT,\n  \tobject\n  }),\n  setEosName: string => ({\n    type: TYPES.SET_EOS_NAME,\n    string\n  }),\n  concatEosMints: object => ({\n    type: TYPES.CONCAT_EOS_MINTS,\n    object\n  }),\n  setEosBalance: string => ({\n    type: TYPES.SET_EOS_BALANCE,\n    string\n  }),\n  setScatterState: string => ({\n    type:TYPES.SET_SCATTER_STATE,\n    string\n  }),\n\n\n};\n\n","import { TYPES } from \"./eosActions\";\n\n// Initial state\nexport const initialState = {\n  eos: {\n    client: '',\n    user_name: '',\n    balance_cusd: '',\n    eos_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n    scatter_state:'',\n  },\n};\n\n// User Eos account state\nexport const eos = (state = initialState.eos, action) => {\n  switch (action.type) {\n    case TYPES.SET_EOS_CLIENT:\n      return Object.assign({}, state, {\n        client: action.object\n      });\n    case TYPES.SET_EOS_NAME:\n      return Object.assign({}, state, {\n        user_name: action.string\n      });\n    case TYPES.CONCAT_EOS_MINTS:\n      return Object.assign({}, state, {\n        eos_mints: state.eos_mints.concat(action.object)\n      });\n    case TYPES.SET_EOS_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.SET_SCATTER_STATE:\n      return Object.assign({}, state, {\n        scatter_state: action.string\n      });\n\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\nimport { eos } from \"./eosReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eos,\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","const commonConfig = {\n    //server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import Web3 from 'web3';\n\n// Config \nimport config from '../config'\n\nconst getDefaultWeb3 = async () => {\n    var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n    let default_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n    let default_network = await default_web3.eth.net.getId()\n    return {\n        web3: default_web3, \n        network: default_network\n    }\n}\n\nexport default getDefaultWeb3","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  network: state.global.network,\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptograhically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    const { network } = this.props;\n    return (\n        \n        <div>\n          { network == 0 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            :\"\"}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        \n        </div>\n        \n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address \n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                Ropsten Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {short_name}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React from \"react\";\nimport { Api, JsonRpc } from \"eosjs\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\";\nimport {fetch} from 'node-fetch';  \n\nconst endpoint = \"https://jungle.eosio.cr:443\"\n\nconst network = {\n  blockchain: \"eos\",\n  protocol: \"http\",\n  host: \"jungle.eosio.cr\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" \n};\nconst URL = 'https://jungle.eosio.cr:443'\nexport const rpc = new JsonRpc(URL,{fetch});\n\nexport default class EOSIOClient extends React.Component {\n \n  constructor(contractAccount)   {\n    super(contractAccount);\n    \n    \n    this.contractAccount = contractAccount;\n    ScatterJS.plugins(new ScatterEOS());\n    try {\n      ScatterJS.scatter.connect(this.contractAccount).then(connected => {\n        if (!connected) {\n          console.log(\"Issue Connecting\")\n          this.noScatter= true\n          return;\n        } else {\n          this.noScatter = false\n        }\n        const scatter = ScatterJS.scatter;\n        const requiredFields = {\n          accounts: [network] // We defined this above\n        };\n      \n        scatter.getIdentity(requiredFields).then(() => {\n          \n          this.account = scatter.identity.accounts.find(\n            x => x.blockchain === \"eos\"\n            \n          );\n          \n          const rpc = new JsonRpc(endpoint);    \n          \n          this.eos = scatter.eos(network, Api, { rpc });   \n        });\n        window.ScatterJS = null;\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n  } \n  \n}\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, NETWORKS } from \"../../store/globalActions\";\nimport { eosActions } from \"../../store/eosActions\";\n\n//scatter\n//import * as Eos from 'eosjs'\n//import ScatterJS from 'scatterjs-core';\n//import ScatterEOS from 'scatterjs-plugin-eosjs2';\n//import {JsonRpc, Api} from 'eosjs';\nimport EOSIOClient from \"../../eos_services/setupEos\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_client: state.global.eos_client,\n  network: state.global.network,\n  scatter_state: state.eos.scatter_state\n});\n\nconst mapDispatch = dispatch => ({\n  setNetwork: NETWORK => dispatch(globalActions.setNetwork(NETWORK)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string))\n\n});\n\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _checkScatterConnection = async () => {\n      \n      if (this.props.eos_client) {\n        if((this.props.eos_client.noScatter == true) && (this.props.scatter_state =='') ){\n          this.props.setScatterState(\"MISSING\")\n          clearInterval(this.state.intervalId);\n\n        } \n      }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    if (this.props.network == \"1\"){\n      // Update user balance\n      \n      await this._checkScatterConnection()\n    } \n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n\n  handleChange = name => event => {\n    var current = event.target.value;\n    \n    this.props.setNetwork(current);\n    if (current === \"1\"){\n      //EOS\n      if (!this.props.eos_client){\n        \n          this.eosio =  new EOSIOClient(\"CARBON_OASIS\")//new EOSIOClient(\"CARBON_OASIS\");\n        \n          this.props.setEOS(this.eosio)\n       \n      } \n    } \n    else if (current === \"0\") {\n      //ETH\n      \n    }\n    else {\n      \n      throw (Error(\"No network\"))\n\n      \n    } \n\n  };\n\n  render() {\n\n    const { \n      classes\n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"network-selector\">Network</InputLabel>\n                <Select\n                    native\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    inputProps={{\n                    name: 'age',\n                    id: 'age-native-simple',\n                    }}\n                >\n                    <option value={NETWORKS.ETH}>ETH</option>\n                    <option value={NETWORKS.EOS}>EOS</option>\n                </Select>\n            </FormControl>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nNetworks.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Networks)));\n","const getNetworkNameById = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case 1:\n      networkName = \"Mainnet\";\n      break;\n    case 2:\n      networkName = \"Morden\";\n      break;\n    case 3:\n      networkName = \"Ropsten\";\n      break;\n    case 4:\n      networkName = \"Rinkeby\";\n      break;\n    case 42:\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport default getNetworkNameById\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Web3 Services\nimport getNetworkNameById from '../../eth_services/getNetworkNameById'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3_network: state.global.web3_network,\n  network: state.global.network,\n  eos_name: state.eos.user_name,\n  scatter_state: state.eos.scatter_state\n  \n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n      web3_network,\n      network,\n      eos_name,\n      scatter_state\n    } = this.props;\n\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n    const networkName = (web3_network ? getNetworkNameById(web3_network) : \"\")\n    \n    return (\n        <Paper className={classes.paper} elevation={3}>\n            {network == 0 ? \n            <Typography> \n                You are connected to Ethereum ({networkName ? networkName : \"\"}) as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>\n            : \n\n            <Typography> \n                You are connected to EOS Jungle testnet as: {eos_name ? (<a\n                    href={\"https://jungle.bloks.io/account/\" + eos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {eos_name}\n                    </a>) : (scatter_state == \"MISSING\" ? (<a\n                    href={\"https://get-scatter.com/download\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Download Scatter\n                    </a>): (<a\n                    href={\"https://github.com/stablecarbon/cusd_onboarding/blob/master/eos/docs/startup.md\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Create Account\n                    </a>))}\n                   \n            </Typography>\n            }\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n\n);\n\nexport default EtherscanLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n  \n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.data.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../store/eosActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/eos/faucet\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  \n  \n  eos_mints: state.eos.eos_mints,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatEosMints: newMint => dispatch(eosActions.concatEosMints(newMint)),\n  setEosName: name => dispatch(eosActions.setEosName(name))\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.50\",\n      minting: false,\n    };\n  }\n\n  // Refresh user CUSD balance\n  getName = () => {\n    \n    if (!this.props.eos_client.account) return;\n    if (this.props.eos_name) return;\n    \n    this.props.setEosName(this.props.eos_client.account.name)\n\n    return this.props.eos_client.account.name\n    \n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    // Update user balance \n    await this.getName()\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    \n\t  let to = this.props.eos_name\n\n\t  let post_data = {\n\t    //amount: amountToMint.toString(),\n\t    user: to,\n      amount: this.state.amount_to_mint.toString(),\n\t  }\n\n\t  this.setState({\n\t    minting: true\n\t  })\n\n\t  try {\n\t    // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n\t    //let minter_status = await axios.get(\n\t    //  MINTER_ENDPOINT\n\t    //)\n\t    \n\n\t    // API CALL\n\t    let response\n\t    try {\n\t      response = await axios.post(\n\t        MINTER_ENDPOINT,\n\t        post_data\n\t      );\n\t    } catch (err) {\n\t      this.setState({\n\t        minting: false\n\t      })\n\t      console.error(\"please be patient in between transactions\") ;\n\t      return ; \n\t    }\n\n\t    let pending_hash = response.data.transaction_id\n\n\t    this.props.concatEosMints(pending_hash)\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  } catch (err) {\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  }\n\n\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eos_mints,\n      eos_name\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eos_name ?\n              (\n                <Button disabled>Please sign in gets CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { eos_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {eos_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n  try {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import {rpc} from './setupEos'\n// Refresh user CUSD balance\nexport const updateEosBalance = async (user_name) => {\n  try {\n        const result = await rpc.get_table_rows({\n            \"code\": \"carbonjungle\",\n            \"scope\": user_name,\n            \"table\": \"accounts\"\n        })\n        \n        let i;\n        for (i = 0; i < result.rows.length; i++){\n        \tif (result.rows[i].balance.split(\" \")[1] === \"CUSD\"){\n        \t\treturn result.rows[i].balance.split(\" \")[0]\n        \t}\n        }\n        throw (Error(\"no CUSD found\"))\n    } catch (err) {\n        console.log(err)\n        throw(err)\n\n    }\n}","import React from 'react';\n\nconst CarbonLogo = () => (\n  <img\n    style={{ height: \"15px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/carbon-logo.svg\"\n  />\n\n);\n\nexport default CarbonLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\nimport { updateEosBalance } from '../../eos_services/updateEosBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  eos_balance_cusd: state.eos.balance_cusd,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance)),\n  setEosBalance: balance => dispatch(eosActions.setEosBalance(balance))\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd) {\n          this.props.setEthBalance(short_balance)\n        }\n    } else {\n      this.props.setEthBalance(\"N/A\")\n    }\n  }\n\n  _updateEosBalance = async (client) => {\n      if (this.props.eos_name) { \n        let oldBalance = this.props.eos_balance_cusd\n        let newBalance = await updateEosBalance(this.props.eos_name)\n        if (oldBalance !== newBalance){\n         this.props.setEosBalance(newBalance)\n       }\n      }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 5000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    if (this.props.network === \"0\"){\n      // Update user balance\n      \n      await this._updateUserBalance(this.props.eth_address)\n    } else {\n      await this._updateEosBalance(this.props.eos_client)\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd,\n      eos_balance_cusd,\n      network\n    } = this.props;\n\n    return (\n          \n          <Paper className={classes.paper} elevation={3}>\n          {/*h*/}\n            <Typography> \n              Your <CarbonLogo /> balance: {network === \"1\" ? eos_balance_cusd:balance_cusd}\n            </Typography>\n          \n          </Paper>\n          \n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'\nimport PropTypes from 'prop-types';\nclass SignMessageSnackbar extends Component {\n    render () {\n        const {\n            open\n        } = this.props\n\n        return (\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                ContentProps={{\n                'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Please sign the transaction</span>}\n            />\n        );\n    }\n}\n\nSignMessageSnackbar.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SignMessageSnackbar;\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eth_address ?\n              (\n              <Button disabled>Please sign in trade CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                  href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Etherscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { eth_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\n// Core Wallet Components\nimport Networks from './homePageComponents/Networks'\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport EosMint from './homePageComponents/EosMint'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\nimport EosBurn from './homePageComponents/EosBurn'\n\n\nconst styles = theme => ({\n});\n\n// Redux mappings\nconst mapState = state => ({\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n\n  render() {\n    const {\n      network \n    } = this.props;\n\n    return (\n\n          <div>\n            {/* NETWORK SELECTOR */}\n              <Networks />\n            {/* USER IDENTITY  */}\n              <Accounts /> \n            {/* MINT */\n              network == 0 ?\n              <MintButton /> : <EosMint/>\n            }\n            {/* USER BALANCES  */\n              network == 0 ?\n              <Balances /> : <Balances />\n            }\n            {/* TRANSFER */\n              network == 0 ?\n              <TransferButton/> : \"\"\n            }\n            {/* BURN */\n              network == 0 ?\n              <BurnButton /> : \"\"//<EosBurn />\n            }\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(HomePage)));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (username, password, chainId, eth_address, encrypted_json) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password,\n            chainId: chainId.toString(),\n            accountName: eth_address,\n            wallet: JSON.stringify(encrypted_json)\n        }\n        console.log(post_data)\n\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created wallet\n        if (db_post_response.data) {\n            let new_wallets_key = db_post_response.data.key\n            let new_wallet = JSON.parse(db_post_response.data.value)\n            return {\n                wallet_key: new_wallets_key,\n                wallet: new_wallet\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', WALLETS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass SaveEthAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      saving: false\n    };\n  }\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.props.password\n    let chainId = NETWORKS.ETH \n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n\n        let saved_wallet = await saveAccountToUser(\n          identityToAssociateWithAccount, \n          password,\n          chainId,\n          address_from_encrypted_json,\n          encrypted_json\n        )\n\n        if (saved_wallet) {\n            // Successfully saved account\n            let wallet_key = saved_wallet.wallet_key\n\n            console.log('saved wallet to user (' + identityToAssociateWithAccount + '): ' + wallet_key)\n        } \n\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes,\n      account_index\n    } = this.props;\n    const {\n      saving\n    } = this.state\n\n    return (      \n        <Button\n          onClick={() => this.saveAccount(account_index)}\n        >\n          {saving ? \n          (<CircularProgress\n              variant=\"indeterminate\"\n              disableShrink\n              className={classes.facebook2}\n              size={24}\n              thickness={4}\n          />) : \n          (\n            <Save />\n          )}\n        </Button>         \n    )\n  }\n}\n\nSaveEthAccountDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  account_index: PropTypes.number.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(SaveEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\nimport SaveEthAccountDialog from './SaveEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {/* save ETH account to signed in user */}\n                    {username && (\n                      <SaveEthAccountDialog account_index={i}/>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (username, password) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password, \n        }\n\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created new user\n        if (db_post_response.data) {\n            let new_user_id = db_post_response.data.key\n            let new_password = db_post_response.data.value\n            return {\n                user: new_user_id,\n                password: new_password\n            }\n        } else {\n            // user already exists or error\n            console.log('user already exists or error')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveUser","// REST API server\nimport axios from 'axios'\nimport config from '../config'\n\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\n\nconst loginUser = async (username, password) => {\n    let params = {\n        user: username,\n        password: password, \n    }\n    try {\n        let db_get_response = await axios.get(\n            USERS_ENDPOINT,\n            { params }\n          );\n        \n        // if successfully signed in user\n        if (db_get_response.data) {\n            let user_id = db_get_response.data.key\n            let user_password = db_get_response.data.value.password\n            let user_wallets = db_get_response.data.value.chainAccounts\n            return {\n                user: user_id,\n                password: user_password,\n                wallets: user_wallets\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('invalid username password combo: ', params)\n        return false\n    }\n    \n}\n\nexport default loginUser","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    // let percentComplete = parseInt(progress * 100)\n    // if ( percentComplete%20 === 0 ) {\n    //     console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    // }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\nimport loginUser from '../../db_services/loginUser'\n\n// ETH Account Management helpers\nimport unlockAccount from '../../eth_services/unlockAccount'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\nimport { NETWORKS, accountsActions } from '../../store/accountsActions'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name)),\n    setPassword: password => dispatch(globalActions.setPassword(password)),\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n    clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            loading_server: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        let isValidAccount = Boolean(\n            username && \n            password &&\n            confirm_password &&\n            (password === confirm_password)\n        )\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Attempt to create new user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let new_user = await saveUser(username, password)\n            if (new_user) {\n                // Successfully created new user\n                let new_username = new_user.user\n                console.log('created a new user: ', new_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(username)\n                this.props.setPassword(password)\n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n\n\n        // Attempt to get existing user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let existing_user = await loginUser(username, password)\n            if (existing_user) {\n                // Successfully logged in new user\n                let existing_username = existing_user.user\n                let existing_password = existing_user.password\n\n                console.log('signed in existing user: ', existing_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(existing_username)\n                this.props.setPassword(existing_password)\n\n                // Set user accounts\n                let existing_wallets = existing_user.wallets\n                let eth_accounts = existing_wallets[NETWORKS.ETH]\n\n                if (eth_accounts.length > 0) {\n                    console.log(\"loading \" + eth_accounts.length + \" wallets\")\n                    for (var i = 0; i < eth_accounts.length; i++) {\n                        let wallet = eth_accounts[i]\n                        let address = Object.keys(wallet)[0]\n                        console.log('address: ', address)\n                        let encrypted_wallet = JSON.parse(wallet[address])\n                        let decrypted_wallet = await unlockAccount(encrypted_wallet, password)\n                        this.props.addEthAccount(decrypted_wallet)\n                    }\n                }\n                \n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not sign in user')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            loading_server,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {loading_server ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {loading_server ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from \"../store/globalActions\";\nimport { accountsActions } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n  setUsername: name => dispatch(globalActions.setUsername(name)),\n  setPassword: password => dispatch(globalActions.setPassword(password)),\n  clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  // Clear identity\n  logoutIdentity = () => {\n    this.props.setUsername('')\n    this.props.setPassword('')\n    this.props.clearEthAccounts()\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username,\n      password\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const signed_in = (username && password)\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              {/* Create a new account */}\n              <Typography variant=\"subtitle1\" className={classes.button}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AccountCircle />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            {/* Sign out of account */}\n            {signed_in && (<Typography variant=\"subtitle1\" className={classes.button}> \n                <Button \n                  color=\"primary\" \n                  aria-label=\"Logout\"\n                  onClick={this.logoutIdentity}\n                >\n                  <Clear />\n                  Logout\n                </Button>\n            </Typography>)}\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support: Ethereum, EOS.\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet. CUSD on Ropsten was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale. Being able to assume that 1 CUSD == $1 will make fiscal forecasting simpler. 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// WEB3 Services\nimport Web3 from 'web3';\nimport getDefaultWeb3 from './eth_services/getDefaultWeb3'\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n  setWeb3Network: number => dispatch(globalActions.setWeb3Network(number)),\n  setNetwork: number => dispatch(globalActions.setNetwork(number))\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP WEB3 */\n  // Detect or set window.web3 ethereum connection\n  setGlobalWeb3 = async () => {\n\n    // Set default web3 in case browser cannot inject web3\n    let default_web3 = await getDefaultWeb3()\n    this.props.setWeb3(default_web3.web3)\n    this.props.setWeb3Network(default_web3.network)\n\n    // Now, replace web3 with injected web3 if possible\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        \n        try {\n            // Request account access if needed\n            await window.ethereum.enable()\n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n            let network = await window.web3.eth.net.getId()\n            this.props.setWeb3Network(network)\n        } catch (error) {\n            // User denied account access... setting fallback web3 object to access web3 \n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n        let network = await window.web3.eth.net.getId()\n        this.props.setWeb3Network(network)\n    }\n    // Non-dapp browsers...\n    else {\n\n    }\n  }  \n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setGlobalWeb3() \n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}