{"version":3,"sources":["../node_modules/encoding/lib sync","store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/eosActions.js","store/eosReducers.js","store/tronActions.js","store/tronReducers.js","store/store.js","withRoot.js","config.js","eth_services/getDefaultWeb3.js","tron_services/getDefaultTronWeb.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","eos_services/setupEos.js","components/homePageComponents/Networks.js","eth_services/getNetworkNameById.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","components/homePageComponents/MintButton.js","components/helpers/BloksLogo.js","components/homePageComponents/EosMint.js","components/homePageComponents/tron/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","eos_services/updateEosBalance.js","tron_services/getCUSD.js","tron_services/updateTronBalance.js","components/helpers/CarbonLogo.js","components/homePageComponents/Balances.js","components/helpers/SignMessageSnackbar.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/SaveEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","db_services/loginUser.js","eth_services/unlockAccount.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","NETWORKS","globalActions","number","global","web3","web3_network","page","username","password","network","eos_client","tronWeb","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","eosActions","eos","client","user_name","eos_mints","scatter_state","tronActions","tron","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","commonConfig","server_url","infura_public_key","getDefaultWeb3","_ref","asyncToGenerator","regenerator_default","mark","_callee","WEB_3_NODE","default_web3","default_network","wrap","_context","prev","next","config","Web3","providers","WebsocketProvider","net","getId","sent","abrupt","stop","this","apply","HttpProvider","TronWeb","NODE_URL","fullNode","solidityNode","getDefaultTronWeb","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","dataToSign","from","signer_wallet","privateKey","sig","sign","signature","Promise","reject","personal","err","_x","_x2","_x3","_x4","recoverMessageSigner","message","user","recover","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginEthereum","handleClick_LoginMenu","handleClick_LoginMenu_Tron","alert","ready","setTronAddress","defaultAddress","loginMetaMask","messageToSign","signer","signing_in","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","Header","user_address_tron","short_name","short_name_tron","base58","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginEthereum","NUMBER","flexGrow","endpoint","blockchain","protocol","host","port","chainId","rpc","JsonRpc","fetch","EOSIOClient","contractAccount","ScatterJS","plugins","ScatterEOS","scatter","then","connected","log","noScatter","requiredFields","getIdentity","identity","find","x","Api","Networks","_checkScatterConnection","setScatterState","clearInterval","intervalId","componentDidMount","_callee2","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","handleChange","current","setNetwork","eosio","setEOS","Paper_default","paper","elevation","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","native","age","inputProps","NETWORK","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","margin","minWidth","getNetworkNameById","networkId","networkName","Accounts","eth_address","tron_address","eos_name","user_short","user_short_tron","href","rel","EtherscanLogo","style","height","width","alt","src","MINTER_ENDPOINT","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","data","minter_balance","post","concatPendingMints","t1","helpers_EtherscanLogo","newMint","BloksLogo","getName","setEosName","transaction_id","concatEosMints","helpers_BloksLogo","isValidMinter","transaction_hash","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","updateEosBalance","result","get_table_rows","scope","table","rows","split","ABI","ADDRESS","contract_base58_address","networks","fromHex","contract","at","updateTronBalance","CarbonLogo","Balances","_updateUserBalance","setEthBalance","_updateEosBalance","oldBalance","newBalance","eos_balance_cusd","setEosBalance","_updateTronBalance","_ref3","balance_cusd_tron","setTronBalance","_callee4","_context4","_callee5","_context5","hex","helpers_CarbonLogo","SignMessageSnackbar","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","TextField_default","textField","helpers_SignMessageSnackbar","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","HomePage","homePageComponents_Networks","homePageComponents_Accounts","homePageComponents_MintButton","EosMint","tron_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","homePageComponents_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","encrypted_json","db_post_response","new_wallets_key","new_wallet","accountName","JSON","stringify","parse","wallet_key","SaveEthAccountDialog","saveAccount","new_account_index","identityToAssociateWithAccount","new_account","address_from_encrypted_json","saved_wallet","saving","createEncryptedWallet","open_new_account_dialog","account_index","Save_default","section","textAlign","EthAccounts","handleClick_AddEthAccount","handleClose_AddEthAccount","accountsComponents_SaveEthAccountDialog","accountsComponents_NewEthAccountDialog","EosAccounts","handleClick_AddEosAccount","addEosAccount","USERS_ENDPOINT","saveUser","new_user_id","new_password","loginUser","params","db_get_response","user_id","user_password","user_wallets","chainAccounts","wallets","callback_decrypt","unlockWallet","encryptedJsonFile","fromEncryptedJson","IdentityDialog","confirm_password","new_user","new_username","clearEthAccounts","loading_server","setUsername","setPassword","signInOldAccount","existing_user","existing_username","existing_password","existing_wallets","encrypted_wallet","decrypted_wallet","unlockAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","logoutIdentity","closeIdentityDialog","signed_in","wallet_name","Tooltip_default","title","placement","button","AccountCircle_default","Clear_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","setGlobalWeb3","_network","setWeb3","setWeb3Network","ethereum","enable","currentProvider","setGlobalTronWeb","default_tronweb","setTronWeb","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","tronweb","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.7aea2c46.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 800;","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_TRONWEB: \"SET_TRONWEB\",\n  SET_WEB3: \"SET_WEB3\",\n  SET_WEB3_NETWORK: \"SET_WEB3_NETWORK\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_NETWORK: \"SET_NETWORK\",\n  SET_EOS: \"SET_EOS\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\n// Network options for home page\nexport const NETWORKS = {\n  ETH: 0,\n  EOS: 1,\n  TRON: 2\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setWeb3Network: number => ({\n    type: TYPES.SET_WEB3_NETWORK,\n    number\n  }), \n  // Set Web3 network ID number\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n\n  setPassword: string => ({\n    type: TYPES.SET_PASSWORD,\n    string\n  }), \n  // Set User identity key: 'password'\n\n\n  setEOS: object => ({\n    type:TYPES.SET_EOS,\n    object\n  }),\n  // Set EOS object\n\n  setTronWeb: object => ({\n    type: TYPES.SET_TRONWEB,\n    object\n  }), \n  // Set TronWeb object\n\n  setNetwork: number => ({\n    type: TYPES.SET_NETWORK,\n    number\n  }),\n  // Set cryptonetwork\n\n};\n\n","import { TYPES, PAGES, NETWORKS } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    web3_network: '',\n    page: PAGES.MAIN,\n    username: '',\n    password: '',\n    network: NETWORKS.ETH,\n    eos_client: '',\n    tronWeb: '',\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_WEB3_NETWORK:\n      return Object.assign({}, state, {\n        web3_network: action.number\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    case TYPES.SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.string\n      });\n    case TYPES.SET_NETWORK:\n      return Object.assign({}, state, {\n        network: action.number\n      });\n    case TYPES.SET_EOS:\n      return Object.assign({}, state, {\n        eos_client:action.object\n      });\n    case TYPES.SET_TRONWEB:\n      return Object.assign({}, state, {\n        tronWeb: action.object\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n  CLEAR_ETH_ACCOUNTS: \"CLEAR_ETH_ACCOUNTS\"\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  clearEthAccounts: object => ({\n    type: TYPES.CLEAR_ETH_ACCOUNTS\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.CLEAR_ETH_ACCOUNTS:\n      return Object.assign({}, state, {\n        eth_accounts: []\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_EOS_CLIENT: \"SET_EOS_CLIENT\",\n  SET_EOS_NAME: \"SET_EOS_NAME\",\n  CONCAT_EOS_MINTS: \"CONCAT_EOS_MINTS\",\n  SET_EOS_BALANCE: \"SET_EOS_BALANCE\",\n  SET_SCATTER_STATE: \"SET_SCATTER_STATE\"\n};\n\nexport const eosActions = {\n  setEosClient: object => ({\n  \ttype: TYPES.SET_EOS_CLIENT,\n  \tobject\n  }),\n  setEosName: string => ({\n    type: TYPES.SET_EOS_NAME,\n    string\n  }),\n  concatEosMints: object => ({\n    type: TYPES.CONCAT_EOS_MINTS,\n    object\n  }),\n  setEosBalance: string => ({\n    type: TYPES.SET_EOS_BALANCE,\n    string\n  }),\n  setScatterState: string => ({\n    type:TYPES.SET_SCATTER_STATE,\n    string\n  }),\n\n\n};\n\n","import { TYPES } from \"./eosActions\";\n\n// Initial state\nexport const initialState = {\n  eos: {\n    client: '',\n    user_name: '',\n    balance_cusd: '',\n    eos_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n    scatter_state:'',\n  },\n};\n\n// User Eos account state\nexport const eos = (state = initialState.eos, action) => {\n  switch (action.type) {\n    case TYPES.SET_EOS_CLIENT:\n      return Object.assign({}, state, {\n        client: action.object\n      });\n    case TYPES.SET_EOS_NAME:\n      return Object.assign({}, state, {\n        user_name: action.string\n      });\n    case TYPES.CONCAT_EOS_MINTS:\n      return Object.assign({}, state, {\n        eos_mints: state.eos_mints.concat(action.object)\n      });\n    case TYPES.SET_EOS_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.SET_SCATTER_STATE:\n      return Object.assign({}, state, {\n        scatter_state: action.string\n      });\n\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n    SET_TRON_ADDRESS: \"SET_TRON_ADDRESS\",\n    SET_TRON_BALANCE: \"SET_TRON_BALANCE\",\n    CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  };\n  \n  export const tronActions = {\n    setTronAddress: string => ({\n      type: TYPES.SET_TRON_ADDRESS,\n      string\n    }),\n    // Set user tron account\n\n    setTronBalance: string => ({\n      type: TYPES.SET_TRON_BALANCE,\n      string\n    }),\n    // Set cusd-tron balance\n\n    concatPendingMints: object => ({\n      type: TYPES.CONCAT_PENDING_MINTS,\n      object\n    }),\n    // Add a pending mint transaction to user profile\n  \n};\n  \n  ","import { TYPES } from \"./tronActions\";\n\n// Initial state\nexport const initialState = {\n  tron: {\n    user_address: '',\n    balance_cusd: '',\n    pending_mints: [],\n\n  },\n};\n\n// User Tron account state\nexport const tron = (state = initialState.tron, action) => {\n  switch (action.type) {\n    case TYPES.SET_TRON_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_TRON_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\nimport { eos } from \"./eosReducers\";\nimport { tron } from \"./tronReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eos,\n  tron,\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","const commonConfig = {\n    // server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import Web3 from 'web3';\n\n// Config \nimport config from '../config'\n\nconst getDefaultWeb3 = async () => {\n    var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n    let default_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n    let default_network = await default_web3.eth.net.getId()\n    return {\n        web3: default_web3, \n        network: default_network\n    }\n}\n\nexport default getDefaultWeb3","/**\n * Return tronweb object (akin to \"Truffle\" for Ethereum) connected to the Shasta testnet\n */\nimport TronWeb from 'tronweb';\nconst HttpProvider = TronWeb.providers.HttpProvider;\nconst NODE_URL = 'https://api.shasta.trongrid.io'\nconst fullNode = new HttpProvider(NODE_URL);\nconst solidityNode = new HttpProvider(NODE_URL);\nconst eventServer = NODE_URL;\n\nconst getDefaultTronWeb = async () => {\n    const tronWeb = new TronWeb(\n        fullNode,\n        solidityNode,\n        eventServer\n    );\n    return tronWeb\n}\n\n\nexport default getDefaultTronWeb","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { tronActions } from \"../../store/tronActions\"\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  network: state.global.network,\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n  tronWeb: state.global.tronWeb,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet)),\n  setTronAddress: address => dispatch(tronActions.setTronAddress(address))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** DETECT IF USER IS LOGGED IN TO TRON */\n  handleClick_LoginMenu_Tron = () => {\n    if (!this.props.tronWeb) {\n      alert('No TronWeb injected!')\n    }\n    let loggedIn = this.props.tronWeb.ready\n    if (loggedIn) {\n      this.props.setTronAddress(this.props.tronWeb.defaultAddress)\n    } else {\n      alert('Please install and login to a Tron network provider like the TronLink browser extension!')\n    }\n  }\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptographically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    const { network } = this.props;\n    return (\n        \n        <div>\n          { network == 0 ? \n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            :\"\"}\n          { network == 2 ? \n            <Button\n                onClick={this.handleClick_LoginMenu_Tron}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Tron\n            </Button>\n            :\"\"}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        \n        </div>\n        \n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address,\n  network: state.global.network,\n  user_address_tron: state.tron.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address,\n      network,\n      user_address_tron\n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n    const short_name_tron = user_address_tron ? user_address_tron.base58.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                CUSD Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {network == 0 && short_name}\n                {network == 2 && short_name_tron}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React from \"react\";\nimport { Api, JsonRpc } from \"eosjs\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\";\nimport {fetch} from 'node-fetch';  \n\nconst endpoint = \"https://jungle.eosio.cr:443\"\n\nconst network = {\n  blockchain: \"eos\",\n  protocol: \"http\",\n  host: \"jungle.eosio.cr\",\n  port: 443,\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" \n};\nconst URL = 'https://jungle.eosio.cr:443'\nexport const rpc = new JsonRpc(URL,{fetch});\n\nexport default class EOSIOClient extends React.Component {\n \n  constructor(contractAccount)   {\n    super(contractAccount);\n    \n    \n    this.contractAccount = contractAccount;\n    ScatterJS.plugins(new ScatterEOS());\n    try {\n      ScatterJS.scatter.connect(this.contractAccount).then(connected => {\n        if (!connected) {\n          console.log(\"Issue Connecting\")\n          this.noScatter= true\n          return;\n        } else {\n          this.noScatter = false\n        }\n        const scatter = ScatterJS.scatter;\n        const requiredFields = {\n          accounts: [network] // We defined this above\n        };\n      \n        scatter.getIdentity(requiredFields).then(() => {\n          \n          this.account = scatter.identity.accounts.find(\n            x => x.blockchain === \"eos\"\n            \n          );\n          \n          const rpc = new JsonRpc(endpoint);    \n          \n          this.eos = scatter.eos(network, Api, { rpc });   \n        });\n        window.ScatterJS = null;\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n  } \n  \n}\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, NETWORKS } from \"../../store/globalActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n//scatter\n//import * as Eos from 'eosjs'\n//import ScatterJS from 'scatterjs-core';\n//import ScatterEOS from 'scatterjs-plugin-eosjs2';\n//import {JsonRpc, Api} from 'eosjs';\nimport EOSIOClient from \"../../eos_services/setupEos\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_client: state.global.eos_client,\n  network: state.global.network,\n  scatter_state: state.eos.scatter_state\n});\n\nconst mapDispatch = dispatch => ({\n  setNetwork: NETWORK => dispatch(globalActions.setNetwork(NETWORK)),\n  setEOS:  client => dispatch(globalActions.setEOS(client)),\n  setScatterState: string => dispatch(eosActions.setScatterState(string)),\n  setTronAddress: string => dispatch(tronActions.setTronAddress(string))\n});\n\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _checkScatterConnection = async () => {\n      \n      if (this.props.eos_client) {\n        if((this.props.eos_client.noScatter == true) && (this.props.scatter_state =='') ){\n          this.props.setScatterState(\"MISSING\")\n          clearInterval(this.state.intervalId);\n\n        } \n      }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    if (this.props.network == \"1\"){\n      // Update user balance\n      \n      await this._checkScatterConnection()\n    } \n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  // FIXME: @joel I think we should move all network setup logic (e.g. EOSIOClient stuff) to a separate module,\n  // in the name of \"one module one function\" and keeping our code base simple, let's stick to keeping\n  // this module's purpose only to toggle networks \n  handleChange = name => event => {\n    var current = event.target.value;\n    this.props.setNetwork(current);\n    if (current === \"1\"){\n      //EOS\n      if (!this.props.eos_client){\n          this.eosio =  new EOSIOClient(\"CARBON_OASIS\")//new EOSIOClient(\"CARBON_OASIS\");\n          this.props.setEOS(this.eosio)\n      } \n    } \n    else if (current === \"0\") {\n      //ETH\n    }\n    else if (current === \"2\") {\n      //TRON\n      // FIXME: Hard coded for now to use a sample Tron address\n      // const user_address_tron = \"TFN2N7MdZ8uwa4yr9sKbWnZTorDdWHeyMB\"\n      // this.props.setTronAddress(user_address_tron)\n    }\n    else {\n      throw (Error(\"No network\"))\n    } \n\n  };\n\n  render() {\n\n    const { \n      classes\n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"network-selector\">Network</InputLabel>\n                <Select\n                    native\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    inputProps={{\n                    name: 'age',\n                    id: 'age-native-simple',\n                    }}\n                >\n                    <option value={NETWORKS.ETH}>ETH</option>\n                    <option value={NETWORKS.EOS}>EOS</option>\n                    <option value={NETWORKS.TRON}>TRON</option>\n                </Select>\n            </FormControl>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nNetworks.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Networks)));\n","const getNetworkNameById = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case 1:\n      networkName = \"Mainnet\";\n      break;\n    case 2:\n      networkName = \"Morden\";\n      break;\n    case 3:\n      networkName = \"Ropsten\";\n      break;\n    case 4:\n      networkName = \"Rinkeby\";\n      break;\n    case 42:\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport default getNetworkNameById\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Web3 Services\nimport getNetworkNameById from '../../eth_services/getNetworkNameById'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3_network: state.global.web3_network,\n  network: state.global.network,\n  eos_name: state.eos.user_name,\n  scatter_state: state.eos.scatter_state,\n  tron_address: state.tron.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n      tron_address,\n      web3_network,\n      network,\n      eos_name,\n      scatter_state\n    } = this.props;\n\n    // ETH\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n    const networkName = (web3_network ? getNetworkNameById(web3_network) : \"\")\n\n    // Tron\n    const user_short_tron = tron_address ? tron_address.base58.substring(0, 8) : \"\"\n    \n    return (\n        <Paper className={classes.paper} elevation={3}>\n            {network == 0 && (\n            <Typography> \n                You are connected to Ethereum ({networkName ? networkName : \"\"}) as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>)}\n            {network == 1 && (\n            <Typography> \n                You are connected to EOS Jungle testnet as: {eos_name ? (<a\n                    href={\"https://jungle.bloks.io/account/\" + eos_name}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {eos_name}\n                    </a>) : (scatter_state == \"MISSING\" ? (<a\n                    href={\"https://get-scatter.com/download\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Download Scatter\n                    </a>): (<a\n                    href={\"https://github.com/stablecarbon/cusd_onboarding/blob/master/eos/docs/startup.md\"}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Create Account\n                    </a>))}\n              </Typography>)}\n            {network == 2 && (\n            <Typography> \n                You are connected to Tron (Shasta) as: \n                    {tron_address ? (<a\n                    href={\"https://shasta.tronscan.org/#/address/\" + tron_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short_tron}...\n                    </a>) : (\"\")}\n            </Typography>\n            )}\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n\n);\n\nexport default EtherscanLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n  \n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.data.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { eosActions } from \"../../store/eosActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/eos/faucet\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  \n  \n  eos_mints: state.eos.eos_mints,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n  concatEosMints: newMint => dispatch(eosActions.concatEosMints(newMint)),\n  setEosName: name => dispatch(eosActions.setEosName(name))\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.50\",\n      minting: false,\n    };\n  }\n\n  // Refresh user CUSD balance\n  getName = () => {\n    \n    if (!this.props.eos_client.account) return;\n    if (this.props.eos_name) return;\n    \n    this.props.setEosName(this.props.eos_client.account.name)\n\n    return this.props.eos_client.account.name\n    \n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n    // Update user balance \n    await this.getName()\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    \n\t  let to = this.props.eos_name\n\n\t  let post_data = {\n\t    //amount: amountToMint.toString(),\n\t    user: to,\n      amount: this.state.amount_to_mint.toString(),\n\t  }\n\n\t  this.setState({\n\t    minting: true\n\t  })\n\n\t  try {\n\t    // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n\t    //let minter_status = await axios.get(\n\t    //  MINTER_ENDPOINT\n\t    //)\n\t    \n\n\t    // API CALL\n\t    let response\n\t    try {\n\t      response = await axios.post(\n\t        MINTER_ENDPOINT,\n\t        post_data\n\t      );\n\t    } catch (err) {\n\t      this.setState({\n\t        minting: false\n\t      })\n\t      console.error(\"please be patient in between transactions\") ;\n\t      return ; \n\t    }\n\n\t    let pending_hash = response.data.transaction_id\n\n\t    this.props.concatEosMints(pending_hash)\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  } catch (err) {\n\t    this.setState({\n\t      minting: false\n\t    })\n\t  }\n\n\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eos_mints,\n      eos_name\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eos_name ?\n              (\n                <Button disabled>Please sign in gets CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { eos_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {eos_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <BloksLogo /> ({i}): \n                  <a\n                    href={\"https://jungle.bloks.io/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on bloks.io\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { tronActions } from \"../../../store/tronActions\";\n\n// Custom Components\nimport EtherscanLogo from '../../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/tron/cusd/mint\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  pending_mints: state.tron.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(tronActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: 10,\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let tronWeb = this.props.tronWeb\n    if (tronWeb) {\n      // TODO: Tron contracts only deal with integers, need to be able to convert decimals\n      let amountToMint = this.state.amount_to_mint\n  \n      let to = this.props.tron_address.base58\n      if (!tronWeb.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // First, test out minter endpoint via GET\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        if (!minter_status.data.isValidMinter) {\n          alert('Minter is temporarily unavailable :(')\n          this.setState({\n            minting: false\n          })\n\n        }\n        // Second, request minter to mint new CUSD via POST\n        let post_data = {\n          amount: amountToMint.toString(),\n          account: to\n        }\n        let response = await axios.post(\n          MINTER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.transaction_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        console.error('Minting failed, please try again in 5 minutes')\n        this.setState({\n          minting: false\n        })\n      }\n    } else {\n      alert('no tronweb detected')\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      tron_address,\n      pending_mints,\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !tron_address ?\n              (\n                <Button disabled>Please sign in to get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            \n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://shasta.tronscan.org/#/transaction/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Tronscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n  try {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import {rpc} from './setupEos'\n// Refresh user CUSD balance\nexport const updateEosBalance = async (user_name) => {\n  try {\n        const result = await rpc.get_table_rows({\n            \"code\": \"carbonjungle\",\n            \"scope\": user_name,\n            \"table\": \"accounts\"\n        })\n        \n        let i;\n        for (i = 0; i < result.rows.length; i++){\n        \tif (result.rows[i].balance.split(\" \")[1] === \"CUSD\"){\n        \t\treturn result.rows[i].balance.split(\" \")[0]\n        \t}\n        }\n        throw (Error(\"no CUSD found\"))\n    } catch (err) {\n        console.log(err)\n        throw(err)\n\n    }\n}","// Fetch active CUSD instance\nexport const getCUSD = async (tronWeb) => {\n    if (!tronWeb) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/tron/CarbonDollar.json\");\n\n    // Contract Ropsten Addresses\n    const SHASTA_NETWORK_ID = 2\n    const ADDRESS = ABI.networks[SHASTA_NETWORK_ID].address\n\n    try {\n        let contract_base58_address = tronWeb.address.fromHex(ADDRESS) \n        let cusd = await tronWeb.contract().at(contract_base58_address)\n        return cusd\n    } catch (err) {\n        throw err\n    }\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateTronBalance = async (tronWeb, user) => {\n  try {\n    if (tronWeb && user) {\n      let cusd = await getCUSD(tronWeb)\n      if (tronWeb.isAddress(user)) {\n        let balance = await cusd.balanceOf(user).call()\n        return balance.toString()\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n\n  } catch (err) {\n    return -1\n  }\n}","import React from 'react';\n\nconst CarbonLogo = () => (\n  <img\n    style={{ height: \"15px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/carbon-logo.svg\"\n  />\n\n);\n\nexport default CarbonLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport { eosActions } from \"../../store/eosActions\";\nimport { tronActions } from \"../../store/tronActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n// EOS Services\nimport { updateEosBalance } from '../../eos_services/updateEosBalance'\n// Tron Services\nimport { updateTronBalance } from '../../tron_services/updateTronBalance'\n\n// CUSD Currency Logo\nimport CarbonLogo from '../helpers/CarbonLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd,\n  eos_client: state.global.eos_client,\n  eos_name: state.eos.user_name,\n  eos_balance_cusd: state.eos.balance_cusd,\n  network: state.global.network,\n  tron_address: state.tron.user_address,\n  tronWeb: state.global.tronWeb,\n  balance_cusd_tron: state.tron.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance)),\n  setEosBalance: balance => dispatch(eosActions.setEosBalance(balance)),\n  setTronBalance: balance => dispatch(tronActions.setTronBalance(balance)),\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n\n  // On Ethereum:\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd) {\n          this.props.setEthBalance(short_balance)\n        }\n    } else {\n      this.props.setEthBalance(\"N/A\")\n    }\n  }\n\n  // On EOS:\n  _updateEosBalance = async () => {\n      if (this.props.eos_name) { \n        let oldBalance = this.props.eos_balance_cusd\n        let newBalance = await updateEosBalance(this.props.eos_name)\n        if (oldBalance !== newBalance){\n         this.props.setEosBalance(newBalance)\n       }\n      }\n  }\n\n  // On Tron:\n  _updateTronBalance = async (user) => {\n    let tronWeb = this.props.tronWeb\n    if (!tronWeb || !user) return;\n    let short_balance = await updateTronBalance(tronWeb, user)\n    if (short_balance >= 0 ) {\n        if (short_balance !== this.props.balance_cusd_tron) {\n          this.props.setTronBalance(short_balance)\n        }\n    } else {\n      this.props.setTronBalance(\"N/A\")\n    }\n\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 5000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n\n\n    if (this.props.network == 0){\n      // Update user balance\n      await this._updateUserBalance(this.props.eth_address)\n    } else if (this.props.network == 1) {\n      await this._updateEosBalance(this.props.eos_client)\n    } else if (this.props.network == 2) {\n      // @dev Tron Smart contracts deal with Hex addresses, like Solidity\n      await this._updateTronBalance(this.props.tron_address.hex)\n    }\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd,\n      eos_balance_cusd,\n      balance_cusd_tron,\n      network\n    } = this.props;\n\n    let balance\n    if (network == 0) {\n      balance = balance_cusd\n    } else if (network == 1) {\n      balance = eos_balance_cusd\n    } else if (network == 2) {\n      balance = balance_cusd_tron\n    }\n\n    return (\n          \n          <Paper className={classes.paper} elevation={3}>\n          {/*h*/}\n            <Typography> \n              Your <CarbonLogo /> balance: {balance}\n            </Typography>\n          \n          </Paper>\n          \n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'\nimport PropTypes from 'prop-types';\nclass SignMessageSnackbar extends Component {\n    render () {\n        const {\n            open\n        } = this.props\n\n        return (\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                ContentProps={{\n                'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Please sign the transaction</span>}\n            />\n        );\n    }\n}\n\nSignMessageSnackbar.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SignMessageSnackbar;\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n    const {\n      transferring,\n      transfer_to,\n      amount_to_transfer\n    } = this.state;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n          {/* TRANSFER CUSD  */}\n              { !eth_address ?\n              (\n              <Button disabled>Please sign in to send CUSD!</Button>\n              )\n              : (\n              <div>\n              <form>\n                  <TextField\n                  id=\"transfer-to\"\n                  label=\"Transfer To\"\n                  className={classes.textField}\n                  value={transfer_to}\n                  onChange={this.handleChange('transfer_to')}\n                  margin=\"normal\"\n                  />\n                  <TextField\n                  id=\"transfer-amount\"\n                  label=\"Amount\"\n                  type=\"number\"\n                  className={classes.textField}\n                  value={amount_to_transfer}\n                  onChange={this.handleChange('amount_to_transfer')}\n                  margin=\"normal\"\n                  />\n              </form>\n              <Button\n                  onClick={this.handleClick_Transfer}\n                  disabled={\n                  transferring ||\n                  !transfer_to ||\n                  isNaN(amount_to_transfer) ||\n                  amount_to_transfer <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n              >\n                  Transfer {amount_to_transfer ? amount_to_transfer : \"\"} CUSD\n              </Button>\n              </div>\n              )\n              }\n          {/* TRANSFER TXNS  */}\n          { pending_transfers.length > 0 ? (\n          <div>\n              <Typography> \n              Your transfer transactions: \n              </Typography>\n              {pending_transfers.map((pending_hash, i) => {\n              return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                  href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  >\n                  {\" track on Etherscan\"}\n                  </a>\n              </Typography>)\n              })}\n          </div> ) : (\"\")}\n          {/* SNACKBAR ALERTS */}\n          <SignMessageSnackbar open={transferring} />\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport SignMessageSnackbar from '../helpers/SignMessageSnackbar'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.data.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n    const {\n      burning,\n      amount_to_burn\n    } = this.state\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in to redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    burning ||\n                    isNaN(amount_to_burn) ||\n                    amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {amount_to_burn ? amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n            {/* SNACKBAR ALERTS */}\n            <SignMessageSnackbar open={burning} />\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\n// Core Wallet Components\nimport Networks from './homePageComponents/Networks'\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport EosMint from './homePageComponents/EosMint'\nimport TronMint from './homePageComponents/tron/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\nimport EosBurn from './homePageComponents/EosBurn'\n\n\nconst styles = theme => ({\n});\n\n// Redux mappings\nconst mapState = state => ({\n  network: state.global.network\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n\n  render() {\n    const {\n      network \n    } = this.props;\n\n    return (\n\n          <div>\n            {/* NETWORK SELECTOR */}\n              <Networks />\n            {/* USER IDENTITY  */}\n              <Accounts /> \n            {/* MINT -- FIXME: This is super ugly lol */\n              network == 0 ?\n              <MintButton /> : \n              ( network == 1 ? <EosMint/> :\n                (network == 2 ? <TronMint /> : \"\" )\n              )\n            }\n            {/* USER BALANCES  */\n              network == 0 ?\n              <Balances /> : <Balances />\n            }\n            {/* TRANSFER */\n              network == 0 ?\n              <TransferButton/> : \"\"\n            }\n            {/* BURN */\n              network == 0 ?\n              <BurnButton /> : \"\"//<EosBurn />\n            }\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(HomePage)));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (username, password, chainId, eth_address, encrypted_json) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password,\n            chainId: chainId.toString(),\n            accountName: eth_address,\n            wallet: JSON.stringify(encrypted_json)\n        }\n        console.log(post_data)\n\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created wallet\n        if (db_post_response.data) {\n            let new_wallets_key = db_post_response.data.key\n            let new_wallet = JSON.parse(db_post_response.data.value)\n            return {\n                wallet_key: new_wallets_key,\n                wallet: new_wallet\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', WALLETS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass SaveEthAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      saving: false\n    };\n  }\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.props.password\n    let chainId = NETWORKS.ETH \n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n\n        let saved_wallet = await saveAccountToUser(\n          identityToAssociateWithAccount, \n          password,\n          chainId,\n          address_from_encrypted_json,\n          encrypted_json\n        )\n\n        if (saved_wallet) {\n            // Successfully saved account\n            let wallet_key = saved_wallet.wallet_key\n\n            console.log('saved wallet to user (' + identityToAssociateWithAccount + '): ' + wallet_key)\n        } \n\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes,\n      account_index\n    } = this.props;\n    const {\n      saving\n    } = this.state\n\n    return (      \n        <Button\n          onClick={() => this.saveAccount(account_index)}\n        >\n          {saving ? \n          (<CircularProgress\n              variant=\"indeterminate\"\n              disableShrink\n              className={classes.facebook2}\n              size={24}\n              thickness={4}\n          />) : \n          (\n            <Save />\n          )}\n        </Button>         \n    )\n  }\n}\n\nSaveEthAccountDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  account_index: PropTypes.number.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(SaveEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\nimport SaveEthAccountDialog from './SaveEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {/* save ETH account to signed in user */}\n                    {username && (\n                      <SaveEthAccountDialog account_index={i}/>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (username, password) => {\n    try {\n        let post_data = {\n            user: username,\n            password: password, \n        }\n\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n\n        // if successfully created new user\n        if (db_post_response.data) {\n            let new_user_id = db_post_response.data.key\n            let new_password = db_post_response.data.value\n            return {\n                user: new_user_id,\n                password: new_password\n            }\n        } else {\n            // user already exists or error\n            console.log('user already exists or error')\n            return false\n        }\n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n        return false\n    }\n    \n}\n\nexport default saveUser","// REST API server\nimport axios from 'axios'\nimport config from '../config'\n\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\n\nconst loginUser = async (username, password) => {\n    let params = {\n        user: username,\n        password: password, \n    }\n    try {\n        let db_get_response = await axios.get(\n            USERS_ENDPOINT,\n            { params }\n          );\n        \n        // if successfully signed in user\n        if (db_get_response.data) {\n            let user_id = db_get_response.data.key\n            let user_password = db_get_response.data.value.password\n            let user_wallets = db_get_response.data.value.chainAccounts\n            return {\n                user: user_id,\n                password: user_password,\n                wallets: user_wallets\n            }\n        } else {\n            console.log('user does not exist')\n            return false\n        }\n    } catch(err) {\n        console.log('invalid username password combo: ', params)\n        return false\n    }\n    \n}\n\nexport default loginUser","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    // let percentComplete = parseInt(progress * 100)\n    // if ( percentComplete%20 === 0 ) {\n    //     console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    // }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\nimport loginUser from '../../db_services/loginUser'\n\n// ETH Account Management helpers\nimport unlockAccount from '../../eth_services/unlockAccount'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\nimport { NETWORKS, accountsActions } from '../../store/accountsActions'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name)),\n    setPassword: password => dispatch(globalActions.setPassword(password)),\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n    clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            loading_server: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        let isValidAccount = Boolean(\n            username && \n            password &&\n            confirm_password &&\n            (password === confirm_password)\n        )\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Attempt to create new user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let new_user = await saveUser(username, password)\n            if (new_user) {\n                // Successfully created new user\n                let new_username = new_user.user\n                console.log('created a new user: ', new_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(username)\n                this.props.setPassword(password)\n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n\n        // First clear out old accounts\n        this.props.clearEthAccounts()\n\n        let username = this.state.username\n        let password = this.state.password\n\n\n        // Attempt to get existing user\n        try {\n            this.setState({\n                loading_server: true\n            })\n            let existing_user = await loginUser(username, password)\n            if (existing_user) {\n                // Successfully logged in new user\n                let existing_username = existing_user.user\n                let existing_password = existing_user.password\n\n                console.log('signed in existing user: ', existing_username)\n                // Now, \"sign in\" new user\n                this.props.setUsername(existing_username)\n                this.props.setPassword(existing_password)\n\n                // Set user accounts\n                let existing_wallets = existing_user.wallets\n                let eth_accounts = existing_wallets[NETWORKS.ETH]\n\n                if (eth_accounts.length > 0) {\n                    console.log(\"loading \" + eth_accounts.length + \" wallets\")\n                    for (var i = 0; i < eth_accounts.length; i++) {\n                        let wallet = eth_accounts[i]\n                        let address = Object.keys(wallet)[0]\n                        console.log('address: ', address)\n                        let encrypted_wallet = JSON.parse(wallet[address])\n                        let decrypted_wallet = await unlockAccount(encrypted_wallet, password)\n                        this.props.addEthAccount(decrypted_wallet)\n                    }\n                }\n                \n                // Close\n                this.props.onCloseHandler()\n            }\n            this.setState({\n                loading_server: false\n            })\n\n            return\n        } catch (err) {\n            console.log('ERROR: could not sign in user')\n            this.setState({\n                loading_server: false\n            })\n            return\n        }\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            loading_server,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {loading_server ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {loading_server ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from \"../store/globalActions\";\nimport { accountsActions } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username,\n  password: state.global.password\n});\n\nconst mapDispatch = dispatch => ({\n  setUsername: name => dispatch(globalActions.setUsername(name)),\n  setPassword: password => dispatch(globalActions.setPassword(password)),\n  clearEthAccounts: () => dispatch(accountsActions.clearEthAccounts())\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  // Clear identity\n  logoutIdentity = () => {\n    this.props.setUsername('')\n    this.props.setPassword('')\n    this.props.clearEthAccounts()\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username,\n      password\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const signed_in = (username && password)\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              {/* Create a new account */}\n              <Typography variant=\"subtitle1\" className={classes.button}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AccountCircle />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            {/* Sign out of account */}\n            {signed_in && (<Typography variant=\"subtitle1\" className={classes.button}> \n                <Button \n                  color=\"primary\" \n                  aria-label=\"Logout\"\n                  onClick={this.logoutIdentity}\n                >\n                  <Clear />\n                  Logout\n                </Button>\n            </Typography>)}\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support: Ethereum, EOS.\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet. CUSD on Ropsten was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale. Being able to assume that 1 CUSD == $1 will make fiscal forecasting simpler. 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// Web3 Services\nimport Web3 from 'web3';\nimport getDefaultWeb3 from './eth_services/getDefaultWeb3'\n\n// Tron-web Services\nimport getDefaultTronWeb from './tron_services/getDefaultTronWeb'\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3,\n  network: state.global.network,\n  tronWeb: state.global.tronWeb,\n});\n\nconst mapDispatch = dispatch => ({\n  setTronWeb: tronweb => dispatch(globalActions.setTronWeb(tronweb)),\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n  setWeb3Network: number => dispatch(globalActions.setWeb3Network(number)),\n  setNetwork: number => dispatch(globalActions.setNetwork(number))\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP WEB3 */\n  // Detect or set window.web3 ethereum connection\n  setGlobalWeb3 = async () => {\n\n    // Set default web3 in case browser cannot inject web3\n    let default_web3 = await getDefaultWeb3()\n    this.props.setWeb3(default_web3.web3)\n    this.props.setWeb3Network(default_web3.network)\n\n    // Now, replace web3 with injected web3 if possible\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        \n        try {\n            // Request account access if needed\n            await window.ethereum.enable()\n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n            let network = await window.web3.eth.net.getId()\n            this.props.setWeb3Network(network)\n        } catch (error) {\n            // User denied account access... setting fallback web3 object to access web3 \n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n        let network = await window.web3.eth.net.getId()\n        this.props.setWeb3Network(network)\n    }\n    // Non-dapp browsers...\n    else {\n\n    }\n  }  \n\n  /** SET UP TRONWEB */\n  // Detect or set window.tronweb Tron connection\n  setGlobalTronWeb = async () => {\n    // Set default tronweb in case browser cannot inject tronweb\n    let default_tronweb = await getDefaultTronWeb()\n    this.props.setTronWeb(default_tronweb)\n\n    // Now, replace tronweb with injected tronweb if possible\n    let installed = window.tronWeb\n    // Detected Tron dapp browser! \n    if (installed) {\n        this.props.setTronWeb(window.tronWeb)\n    }\n    // Non-dapp browsers, inject tronweb on behalf of user\n    else {\n      window.tronWeb = this.props.tronWeb\n    }\n\n}\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setGlobalWeb3() \n    // Request user's tronweb connection\n    await this.setGlobalTronWeb()\n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}